<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>PT站梳理</title>
      <link href="/2023/11/15/PT%E7%AB%99%E6%A2%B3%E7%90%86/"/>
      <url>/2023/11/15/PT%E7%AB%99%E6%A2%B3%E7%90%86/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      <categories>
          
          <category> 生活 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 生活 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ubuntu安装Overleaf Server端</title>
      <link href="/2023/05/12/ubuntu%E5%AE%89%E8%A3%85Overleaf-Server%E7%AB%AF/"/>
      <url>/2023/05/12/ubuntu%E5%AE%89%E8%A3%85Overleaf-Server%E7%AB%AF/</url>
      
        <content type="html"><![CDATA[<p>本博客的核心在于通过docker拉取完整版的texlive环境，即：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">docker pull tuetenk0pp/sharelatex-full<br></code></pre></td></tr></table></figure><p>‍具体为：</p><h2 id="安装docker"><a href="#安装docker" class="headerlink" title="安装docker"></a>安装docker</h2><p>打开 &#x2F;etc&#x2F;apt&#x2F;sources.list.d&#x2F;docker.list​，添加内容：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo vi /etc/apt/sources.list.d/docker.list<br>deb [<span class="hljs-built_in">arch</span>=amd64] https://download.docker.com/linux/ubuntu bionic stable<br></code></pre></td></tr></table></figure><p>更新并安装docker-ce：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo apt-get update<br>sudo apt-get install docker-ce<br></code></pre></td></tr></table></figure><p>查看是否安装成功：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">docker --version<br></code></pre></td></tr></table></figure><p>出现Docker version 20.10.7, build f0df350字样，即安装成功。此处也可参照清华镜像站等手段安装docker:</p><p><a href="https://mirrors.tuna.tsinghua.edu.cn/help/docker-ce/">https://mirrors.tuna.tsinghua.edu.cn/help/docker-ce/</a></p><h2 id="安装-docker-Compose"><a href="#安装-docker-Compose" class="headerlink" title="安装 docker-Compose"></a>安装 docker-Compose</h2><p>进入 <a href="https://github.com/docker/compose/releases%60%E2%80%8B%E6%9F%A5%E7%9C%8B%E6%9C%80%E6%96%B0%E7%89%88%E6%9C%AC%EF%BC%8C%E5%BD%93%E5%89%8D%E7%89%88%E6%9C%AC%E4%B8%BA1.29.2">https://github.com/docker/compose/releases`​查看最新版本，当前版本为1.29.2</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo curl -L https://github.com/docker/compose/releases/download/1.29.2/docker-compose-`<span class="hljs-built_in">uname</span> -s`-`<span class="hljs-built_in">uname</span> -m` -o /usr/local/bin/docker-compose<br></code></pre></td></tr></table></figure><p>设置权限:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo <span class="hljs-built_in">chmod</span> +x /usr/local/bin/docker-compose<br></code></pre></td></tr></table></figure><p>一般来说，无科学环境github上得较慢，故也可以用pip安装</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo pip install docker-compose<br></code></pre></td></tr></table></figure><p>若显示sudo下没有pip，则sudo apt install  python-pip</p><p>查看是否安装成功:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">docker-compose --version<br></code></pre></td></tr></table></figure><p>出现类似docker-compose version 1.29.2, build 5becea4c即可。</p><h2 id="安装Overleaf的完整docker镜像"><a href="#安装Overleaf的完整docker镜像" class="headerlink" title="安装Overleaf的完整docker镜像"></a>安装Overleaf的完整docker镜像</h2><p>docker权限问题，添加docker用户组：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">#添加docker用户组</span><br>sudo groupadd docker<br>      <br><span class="hljs-comment">#将登陆用户加入到docker用户组中</span><br>sudo gpasswd -a <span class="hljs-variable">$USER</span> docker <br>      <br><span class="hljs-comment">#更新用户组</span><br>newgrp docker <br></code></pre></td></tr></table></figure><p>接着从<a href="https://raw.githubusercontent.com/Tuetenk0pp/sharelatex-full/master/docker-compose.yml">https://raw.githubusercontent.com/Tuetenk0pp/sharelatex-full/master/docker-compose.yml</a> 下载Overleaf配置文件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">wget https://github.com/Tuetenk0pp/sharelatex-full/blob/master/docker-compose.yml<br>vi docker-compose.yml<br></code></pre></td></tr></table></figure><p>需要修改的就是ports: - 80:80​，一般80端口都被apache或nginx占用了，改用其他端口如：ports: - 62728:80。同时记得更新ufw防火墙。</p><p>其他可根据需要修改，如项目名称（SHARELATEX_APP_NAME）、挂载位置等。</p><p>如果已经通过docker安装Overleaf的开源版本sharelatex，可以接着安装完整texlive，即先进入docker容器，在docker中安装编译所需的完整的texlive:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash">docker pull sharelatex/sharelatex<br>docker <span class="hljs-built_in">exec</span> -it sharelatex bash<br>tlmgr option repository https://mirrors.tuna.tsinghua.edu.cn/CTAN/systems/texlive/tlnet/<br>tlmgr update --self --all<br>tlmgr install scheme-full &amp;<br></code></pre></td></tr></table></figure><p>安装过程较长漫长，为了避免shell断掉加上 &amp;，回车后可以看到安装过程。可重复再执行update和install。</p><h2 id="启动Overleaf"><a href="#启动Overleaf" class="headerlink" title="启动Overleaf"></a>启动Overleaf</h2><p>在docker-compose.yml​所在路径下执行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">docker-compose up -d<br></code></pre></td></tr></table></figure><h2 id="使用Overleaf"><a href="#使用Overleaf" class="headerlink" title="使用Overleaf"></a>使用Overleaf</h2><p>打开浏览器访问 <a href="http://hostname:5000/launchpad">http://hostname:5000/launchpad</a></p><p>创建完成Admin账户，即可。</p><p>‍</p><h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><p>1、原始配置文件：<a href="https://raw.githubusercontent.com/sharelatex/sharelatex/master/docker-compose.yml">https://raw.githubusercontent.com/sharelatex/sharelatex/master/docker-compose.yml</a></p><p>2、<a href="https://www.xiaoledeng.com/2021/06/03/ubuntu-install-overleaf-sharelatex/">https://www.xiaoledeng.com/2021/06/03/ubuntu-install-overleaf-sharelatex/</a></p><p>3、<a href="https://junbin.gitbook.io/studynotes/overleaf-da-jian">https://junbin.gitbook.io/studynotes/overleaf-da-jian</a></p><p>4、<a href="https://zhuanlan.zhihu.com/p/593690031">https://zhuanlan.zhihu.com/p/593690031</a></p><p>5、<a href="https://xlz.pub/2023/01/10/Ubuntu%E4%BD%BF%E7%94%A8Docker%E6%90%AD%E5%BB%BASharelatex-Overleaf%E5%BC%80%E6%BA%90%E7%89%88%E6%9C%AC-%E5%B9%B6%E9%85%8D%E7%BD%AENginx%E5%8F%8D%E5%90%91%E4%BB%A3%E7%90%86/">https://xlz.pub/2023/01/10/Ubuntu%E4%BD%BF%E7%94%A8Docker%E6%90%AD%E5%BB%BASharelatex-Overleaf%E5%BC%80%E6%BA%90%E7%89%88%E6%9C%AC-%E5%B9%B6%E9%85%8D%E7%BD%AENginx%E5%8F%8D%E5%90%91%E4%BB%A3%E7%90%86/</a></p><p>‍</p>]]></content>
      
      
      <categories>
          
          <category> 编程 </category>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 服务器 </tag>
            
            <tag> ubuntu </tag>
            
            <tag> Overleaf </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Transmission Web端实现过程</title>
      <link href="/2023/01/05/Transmission-Web%E7%AB%AF%E5%AE%9E%E7%8E%B0%E8%BF%87%E7%A8%8B/"/>
      <url>/2023/01/05/Transmission-Web%E7%AB%AF%E5%AE%9E%E7%8E%B0%E8%BF%87%E7%A8%8B/</url>
      
        <content type="html"><![CDATA[<p>Transmission是Ubuntu服务器默认的下载工具，但对于服务器开启远程桌面很不方便，这里说明如何安装Web端远程控制。</p><p>部署完成后，使用网页<a href="http://ip:9091/">http://ip:9091</a>  的形式访问ip为你服务器的公网地址，内网下则是局域网ip。</p><p>安装过程可以用sudo - i</p><h2 id="安装Transmission"><a href="#安装Transmission" class="headerlink" title="安装Transmission"></a>安装Transmission</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo apt-get install software-properties-common -y<br>sudo add-apt-repository ppa:transmissionbt/ppa<br>sudo apt-get install transmission-daemon -y<br></code></pre></td></tr></table></figure><h2 id="修改配置文件"><a href="#修改配置文件" class="headerlink" title="修改配置文件"></a>修改配置文件</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">#停止Transmisson后台服务</span><br>systemctl stop transmission-daemon.service<br><span class="hljs-comment">#修改配置文件</span><br>vi /var/lib/transmission-daemon/.config/transmission-daemon/settings.json<br></code></pre></td></tr></table></figure><p>在第51行附近修改以下4处</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-string">&quot;rpc-password&quot;</span>: <span class="hljs-string">&quot;填写你的登陆密码&quot;</span>,<br><span class="hljs-string">&quot;rpc-port&quot;</span>: 9091, <span class="hljs-comment">#外网访问端口可以自行更改</span><br><span class="hljs-string">&quot;rpc-username&quot;</span>: <span class="hljs-string">&quot;填写你的登陆账号&quot;</span>,<br><span class="hljs-string">&quot;rpc-whitelist-enabled&quot;</span>: <span class="hljs-literal">false</span>, <span class="hljs-comment">#默认为true, 如需外网访问最好关</span><br></code></pre></td></tr></table></figure><h2 id="更换Transmission-Web-Control美化主题"><a href="#更换Transmission-Web-Control美化主题" class="headerlink" title="更换Transmission Web Control美化主题"></a>更换Transmission Web Control美化主题</h2><h3 id="获取最新的安装脚本：（使用国内镜像）"><a href="#获取最新的安装脚本：（使用国内镜像）" class="headerlink" title="获取最新的安装脚本：（使用国内镜像）"></a>获取最新的安装脚本：（使用国内镜像）</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">wget https://gitee.com/culturist/transmission-web-control/raw/master/release/install-tr-control-gitee.sh<br></code></pre></td></tr></table></figure><p>如果提示 https 获取失败，请使用以下命令获取安装脚本：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">wget https://github.com/ronggang/transmission-web-control/raw/master/release/install-tr-control-cn.sh --no-check-certificate<br></code></pre></td></tr></table></figure><p>如果提示文件已存在，可以通过 rm install-tr-control-cn.sh 进行删除后再执行下载；或者在 wget 后面添加 -N 参数，如：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">wget -N https://github.com/ronggang/transmission-web-control/raw/master/release/install-tr-control-cn.sh --no-check-certificate<br></code></pre></td></tr></table></figure><h3 id="执行安装脚本"><a href="#执行安装脚本" class="headerlink" title="执行安装脚本"></a>执行安装脚本</h3><p>添加权限，运行脚本：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">chmod</span> +x install-tr-control-cn.sh<br>bash install-tr-control-cn.sh<br></code></pre></td></tr></table></figure><p>这里运行脚本时我出现了报错：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">【<span class="hljs-built_in">cp</span>: cannot <span class="hljs-built_in">stat</span> <span class="hljs-string">&#x27;/tmp/tr-web-control/transmission- web-control/src/.&#x27;</span>: No such file or directory】<br></code></pre></td></tr></table></figure><p>检查后发现错误原因在install-tr-control-gitee.sh中185行来源地址与实际地址不符，临时的解决办法是修改install-tr-control-gitee.sh中185行代码：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">##修改前：</span><br><span class="hljs-built_in">cp</span> -r <span class="hljs-string">&quot;<span class="hljs-variable">$TMP_FOLDER</span>/transmission-web-control/src/.&quot;</span> <span class="hljs-string">&quot;<span class="hljs-variable">$WEB_FOLDER</span>/&quot;</span><br><span class="hljs-comment">##修改后：</span><br><span class="hljs-built_in">cp</span> -r <span class="hljs-string">&quot;<span class="hljs-variable">$TMP_FOLDER</span>/transmission-web-control-v1.6.1-update1/src/.&quot;</span> “<span class="hljs-variable">$WEB_FOLDER</span>/”<br></code></pre></td></tr></table></figure><p>脚本运行正常，输入1，安装最新发布版本。</p><p>安装完成后，用浏览器访问 Transmission Web Interface（如：<a href="http://your_ip:9091/">http://your_ip:9091/</a> ）即可看到新的界面；如果无法看到新界面，可能是浏览器缓存了，请按 Ctrl + F5 强制刷新页面或 清空缓存 后再重新打开；</p><h2 id="启动Transmission后台服务"><a href="#启动Transmission后台服务" class="headerlink" title="启动Transmission后台服务"></a>启动Transmission后台服务</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">#启动服务</span><br>systemctl start transmission-daemon.service<br><span class="hljs-comment">#停止服务</span><br>systemctl stop transmission-daemon.service<br><span class="hljs-comment">#查询运行状态</span><br>systemctl status transmission-daemon.service<br><span class="hljs-comment">#开机自启动</span><br>systemctl <span class="hljs-built_in">enable</span> transmission-daemon.service<br><span class="hljs-comment">#关闭开机自启</span><br>systemctl <span class="hljs-built_in">disable</span> transmission-daemon.service<br></code></pre></td></tr></table></figure><p>到这里博客就结束了。<br><img src="/2023/01/05/Transmission-Web%E7%AB%AF%E5%AE%9E%E7%8E%B0%E8%BF%87%E7%A8%8B/tr.png"></p><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p>[1] <a href="https://zhuanlan.zhihu.com/p/465136042">https://zhuanlan.zhihu.com/p/465136042</a><br>[2] <a href="https://mathpretty.com/15094.html">https://mathpretty.com/15094.html</a><br>[3] <a href="https://github.com/ronggang/transmission-web-control/wiki/Linux-Installation-CN">https://github.com/ronggang/transmission-web-control/wiki/Linux-Installation-CN</a><br>[4] <a href="https://github.com/ronggang/transmission-web-control/issues/583">https://github.com/ronggang/transmission-web-control/issues/583</a></p>]]></content>
      
      
      <categories>
          
          <category> 编程 </category>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 远程 </tag>
            
            <tag> Ubuntu </tag>
            
            <tag> 服务器 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>NJ80-AP机械键盘说明书</title>
      <link href="/2023/01/02/NJ80-AP%E6%9C%BA%E6%A2%B0%E9%94%AE%E7%9B%98%E8%AF%B4%E6%98%8E%E4%B9%A6/"/>
      <url>/2023/01/02/NJ80-AP%E6%9C%BA%E6%A2%B0%E9%94%AE%E7%9B%98%E8%AF%B4%E6%98%8E%E4%B9%A6/</url>
      
        <content type="html"><![CDATA[<p><img src="/2023/01/02/NJ80-AP%E6%9C%BA%E6%A2%B0%E9%94%AE%E7%9B%98%E8%AF%B4%E6%98%8E%E4%B9%A6/1.jpg"></p><h2 id="蓝牙配对操作方法-首先打开键盘底部的电源开关"><a href="#蓝牙配对操作方法-首先打开键盘底部的电源开关" class="headerlink" title="蓝牙配对操作方法:(首先打开键盘底部的电源开关)"></a>蓝牙配对操作方法:(首先打开键盘底部的电源开关)</h2><p>①长按 FN+1 组合键3秒，键盘进入配对状态，数字1指示灯快闪。<br>②打开移动设备蓝牙（例如手机），选中BT5.0KB（ win7系统选择BT3.0KB ）<br>④连接第二台设备（例如电脑），如果手机连接了1，那我们长按FN+2组合键3秒，数字2指示灯快闪，然后重复步骤②③。<br>⑤连接第三台设备（例如笔记本），长按FN+3组合键3秒，数字3指示灯快闪，然后重复步骤②③。<br>⑥现在同时把连接好的三个设备的蓝牙都打开，通过短按FN+1&#x2F;2&#x2F;3进行切换设备连接。</p><h2 id="2-4G配对操作方法：-首先打开键盘底部的电源开关"><a href="#2-4G配对操作方法：-首先打开键盘底部的电源开关" class="headerlink" title="2.4G配对操作方法：(首先打开键盘底部的电源开关)"></a>2.4G配对操作方法：(首先打开键盘底部的电源开关)</h2><p>打开键盘电源开关，短按FN+4，4键灯光闪烁，把接收器插入电脑USB口即可使用。</p><h2 id="灯光操作说明-有线模式没有休眠设置"><a href="#灯光操作说明-有线模式没有休眠设置" class="headerlink" title="灯光操作说明:(有线模式没有休眠设置)"></a>灯光操作说明:(有线模式没有休眠设置)</h2><ul><li>FN+ESC&#x3D;切换到灯效&#x2F;背光模式 FN+ENTER&#x3D;切换背光颜色</li><li>FN+Backspace&#x3D;关闭&#x2F;打开灯光（关灯后进入省电模式）</li><li>FN+|&#x3D;切换灯效模式（光波、涟漪、雨滴、蛇形、跟随、聚合、正弦波、彩泉涌动、百花争艳、激光、峰回路转、多彩纵横、呼吸、霓虹）</li><li>Caps灯为大小写指示灯,可以通过FN+CAPS改变颜色,但是不能参与灯效。</li><li>FN+Tab&#x3D;切换灯光休眠时间, Caps灯闪一下为2分钟不使用开始休眠,</li><li>Caps灯闪两下为30分钟不使用开始休眠。</li><li>FN+方向上&#x3D;调高亮度 FN+方向下&#x3D;调低亮度</li><li>FN+方向左&#x3D;调慢速度 FN+方向右&#x3D;调快速度</li><li>F12键为电量指示灯:低电量为红色呼吸。充电时为绿色呼吸,充满则指示灯熄灭恢复原来的颜色。</li></ul><h2 id="FN按键操作说明："><a href="#FN按键操作说明：" class="headerlink" title="FN按键操作说明："></a>FN按键操作说明：</h2><ul><li>FN+1&#x2F;2&#x2F;3&#x3D;切换到蓝牙模式</li><li>Fn+4&#x3D;切换到2.4G模式 FN+5&#x3D;切换到有线模式</li><li>Fn+Pgup&#x3D;Home Fn+Pgdn&#x3D;End FN+I&#x3D;Insert</li><li>Fn+L&#x3D;浏览网页 FN+C&#x3D;我的电脑 Fn+P&#x3D;Print(截图）</li><li>FN+Win&#x3D;锁定&#x2F;解锁Win键</li><li>FN+~&#x3D;进入自定义编程的灯光模式（FN+esc退出）</li><li>恢复出厂设置:同时按下键盘四个角按键3秒( ESC、左ctrl、F12、右箭头)</li></ul><h2 id="MAC系统："><a href="#MAC系统：" class="headerlink" title="MAC系统："></a>MAC系统：</h2><ul><li>FN+M（长按两秒，空格闪2下为进入，闪1下为退出）&#x3D;进入苹果MAC系统模式（左alt和win互换，右alt变win，右ctrl变alt）</li><li>FN+F&#x3D;MAC系统切换F区多媒体键&#x2F;标准键（键盘需先进入MAC模式）</li></ul><h2 id="旋钮操作说明："><a href="#旋钮操作说明：" class="headerlink" title="旋钮操作说明："></a>旋钮操作说明：</h2><ul><li>向左旋转&#x3D;调小音量，向右旋转&#x3D;调大音量</li><li>按下去为静音，再按一下恢复音量</li></ul><h2 id="温馨提示："><a href="#温馨提示：" class="headerlink" title="温馨提示："></a>温馨提示：</h2><ol><li>WIFI信号对蓝牙信号有一定干扰，所以蓝牙接收器不能离wifi信号源太近。</li><li>插拔轴体时不需要很用力，当你发现需要很大力时，可能轴体没对准，请停止操作，不然会导致热插拔底座损坏，严重的话会导致焊盘脱落直接废掉PCB。</li><li>驱动使用方式：可插线模式下或无线2.4g模式下使用驱动编程软件</li></ol><h3 id="参考参数"><a href="#参考参数" class="headerlink" title="参考参数"></a>参考参数</h3><ul><li>蓝牙有效范围：15m</li><li>聚合物锂电池：4800 mAH</li><li>电池充满时长：5h (USB输入电流 1A条件下)</li><li>游戏模式(开灯)：200mA(连续工作约 24h)</li><li>省电模式(不开灯)：15mA(连续工作约 320h)</li><li>USB 有线工作电压：DC 5V</li><li>USB 有线工作电流：30～300mA (不充电状态下)</li></ul><p><img src="/2023/01/02/NJ80-AP%E6%9C%BA%E6%A2%B0%E9%94%AE%E7%9B%98%E8%AF%B4%E6%98%8E%E4%B9%A6/2.jpg"></p>]]></content>
      
      
      <categories>
          
          <category> 硬件 </category>
          
          <category> 机械键盘 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 生活 </tag>
            
            <tag> 机械键盘 </tag>
            
            <tag> 说明书 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>NJ68-AP机械键盘说明书</title>
      <link href="/2023/01/01/NJ68-AP%E6%9C%BA%E6%A2%B0%E9%94%AE%E7%9B%98%E8%AF%B4%E6%98%8E%E4%B9%A6/"/>
      <url>/2023/01/01/NJ68-AP%E6%9C%BA%E6%A2%B0%E9%94%AE%E7%9B%98%E8%AF%B4%E6%98%8E%E4%B9%A6/</url>
      
        <content type="html"><![CDATA[<p><img src="/2023/01/01/NJ68-AP%E6%9C%BA%E6%A2%B0%E9%94%AE%E7%9B%98%E8%AF%B4%E6%98%8E%E4%B9%A6/1.png"></p><h3 id="无线连接"><a href="#无线连接" class="headerlink" title="无线连接"></a>无线连接</h3><p>①长按 FN+Q 组合键3秒，键盘进入配对状态，Q指示灯快闪。<br>②打开蓝牙，选中BT5.0KB（ win7系统选择BT3.0KB )<br>③设备显示已连接，配对完成。<br>④连接第二台设备，如果手机连接了Q，长按 FN+W 组合键3秒，W指示灯快闪，重复步骤②③。<br>⑤连接第三台设备（例如笔记本），长按 FN+E 组合键3秒，E指示灯快闪，重复步骤②③。<br>⑥同时把连接好的三个设备的蓝牙都打开，通过短按FN+Q&#x2F;W&#x2F;E进行切换设备连接。<br>⑦2.4G连接：打开键盘电源开关，短按FN+R，R键灯光闪烁，把接收器插入电脑USB口即可。</p><h3 id="灯光操作说明"><a href="#灯光操作说明" class="headerlink" title="灯光操作说明"></a>灯光操作说明</h3><ul><li>FN+ESC &#x3D; 切换到灯效&#x2F;背光模式 </li><li>FN+ENTER &#x3D; 切换背光颜色</li><li>FN+退格 &#x3D; 关闭&#x2F;打开灯光（关灯进入省电）</li><li>FN+\ &#x3D; 切换灯效模式</li><li>FN+方向上 &#x3D; 调高亮度 FN+方向下 &#x3D; 调低亮度</li><li>FN+方向左 &#x3D; 调慢速度 FN+方向右 &#x3D; 调快速度</li><li>FN+Tab &#x3D; 切换灯光休眠时间,<br>Caps灯闪一下为2分钟<br>Caps灯闪两下为30分钟<br>Caps灯闪三下为不休眠</li></ul><h3 id="FN按键操作说明"><a href="#FN按键操作说明" class="headerlink" title="FN按键操作说明"></a>FN按键操作说明</h3><ul><li>FN+Q&#x2F;W&#x2F;E &#x3D; 切换到蓝牙模式</li><li>Fn+R &#x3D; 切换到2.4G模式 </li><li>FN+T &#x3D; 切换到有线模式</li><li>Fn+Del &#x3D; 静音 </li><li>Fn+Pgup &#x3D; 音量加大 </li><li>Fn+Pgdn &#x3D; 音量减小</li><li>Fn+L &#x3D; 浏览网页 </li><li>FN+C &#x3D; 我的电脑 </li><li>Fn+P &#x3D; Print(截图）</li><li>FN+{[ &#x3D; Home </li><li>Fn+}] &#x3D; End </li><li>FN+I &#x3D; Insert</li><li>FN+Win &#x3D; 锁定&#x2F;解锁Win键</li><li>FN+~ &#x3D; 进入编程的灯光模式（FN+esc退出）</li><li>FN+左ctrl（长按三秒） &#x3D; Caps与左ctrl互换</li><li>FN+M  &#x3D; 进入MAC模式</li><li>FN+F &#x3D; 切换FN多媒体键（需先进入MAC模式）</li></ul><h3 id="注意事项："><a href="#注意事项：" class="headerlink" title="注意事项："></a>注意事项：</h3><p>1、WIFI信号对蓝牙信号有一定干扰，所以蓝牙接收器不能离wifi信号源太近。<br>2、插拔轴体时不需要很用力，若发现需要大力，可能轴体没对准，请停止操作。不然会导致热插拔底座损坏，焊盘脱落。<br>3、可插线模式下或无线2.4g模式下使用驱动编程软件<br>4、Mac模式进入时，长按两秒，空格闪2下为进入，闪1下为退出。<br>5、Mac模式结果是：左alt和win互换，右alt变成win，右ctrl变成alt。<br>6、同时按下键盘四个角按键3秒( ESC、左ctrl、~、右箭头，恢复出厂设置。</p><h3 id="参考参数"><a href="#参考参数" class="headerlink" title="参考参数"></a>参考参数</h3><ul><li>蓝牙有效范围：15m</li><li>聚合物锂电池：3100 mAH&#x2F;3.7V&#x2F;11.47WH</li><li>电池充满时长：&lt;5h (USB输入电流 1A条件下)</li><li>游戏模式(开灯)：150mA(连续工作约 20h)</li><li>游戏模式(不开灯)：40mA(连续工作约 70h)</li><li>省电模式：10mA(连续工作约 280h)</li><li>USB 有线工作电压：DC 5V</li><li>USB 有线工作电流：30～300mA (不充电状态下)</li><li>净重：730g</li><li>长宽高：316.5 x 109 x 35.5 mm</li></ul><p><img src="/2023/01/01/NJ68-AP%E6%9C%BA%E6%A2%B0%E9%94%AE%E7%9B%98%E8%AF%B4%E6%98%8E%E4%B9%A6/nj68.png"></p>]]></content>
      
      
      <categories>
          
          <category> 硬件 </category>
          
          <category> 机械键盘 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 生活 </tag>
            
            <tag> 机械键盘 </tag>
            
            <tag> 说明书 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>装机日记</title>
      <link href="/2022/11/16/%E8%A3%85%E6%9C%BA%E6%97%A5%E8%AE%B0/"/>
      <url>/2022/11/16/%E8%A3%85%E6%9C%BA%E6%97%A5%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<p>自用的win笔记本总是高负载一会就自动关机（拯救者Y7000P，8750H+GTX1060），加上疫情对居家办公的需求很大，很早就想组装一台台式机。目前暂时整理了两个方案：</p><h3 id="方案一："><a href="#方案一：" class="headerlink" title="方案一："></a>方案一：</h3><ul><li>CPU：i5-12600KF   1599</li><li>主板：微星B660M MORTAR WIFI DDR4   1060</li><li>显卡：七彩虹RTX3070 3299</li><li>内存：科赋雷霆XR 8G×2 389</li><li>硬盘：西数SN570 1T   379</li><li>散热：利民AX120R SE ARGB 150</li><li>电源：安钛克NE650 650w金牌全模   460</li><li>机箱：爱国者A15全侧透   100</li></ul><h3 id="方案二"><a href="#方案二" class="headerlink" title="方案二"></a>方案二</h3><ul><li>CPU：i5-13600KF</li><li>主板：微星B660M MORTAR WIFI  DDR4</li><li>显卡：七彩虹RTX3060Ti G6x adoc</li><li>内存：科赋雷霆XR 8G×2</li><li>硬盘：西数SN770 1T</li><li>散热：利民PA120</li><li>电源：航嘉 模组版wd650k-650w</li><li>机箱：先马鲁班1</li></ul><p>两个方案一个偏向CPU一个偏向显卡，目前总预算大概六七千吧感觉近期甜品级40系显卡不会出来，4080那种定价让人对新一代显卡的定价非常担忧，持币观望市场。准备把遇到的一些问题记录下来，加深认识。</p><h2 id="2022-11-18更新"><a href="#2022-11-18更新" class="headerlink" title="2022-11-18更新"></a>2022-11-18更新</h2><p>啊这，最近显卡这是小涨吗，离谱。<br><img src="/2022/11/16/%E8%A3%85%E6%9C%BA%E6%97%A5%E8%AE%B0/%E6%98%BE%E5%8D%A1%E4%BB%B7%E6%A0%BC.png"></p><h2 id="2022-11-23更新"><a href="#2022-11-23更新" class="headerlink" title="2022-11-23更新"></a>2022-11-23更新</h2><p>给实验室平常采购服务器的商家要了报价，大概如下：<br><img src="/2022/11/16/%E8%A3%85%E6%9C%BA%E6%97%A5%E8%AE%B0/%E6%8A%A5%E4%BB%B7%E5%8D%95.png"><br>感觉偏贵，他们一直总是拿着散件的价卖盒装的价，唯一好处可能是上门服务还是挺周到的。后续观望。</p><h2 id="2022-11-24更新"><a href="#2022-11-24更新" class="headerlink" title="2022-11-24更新"></a>2022-11-24更新</h2><p>平时没有太多时间研究各个定价变化，目前有个思路是看下几个口碑不错的比较大的整机店家。暂时关注了“中正评测“和“装机猿”，感觉这几套配置可以参考下<br><img src="/2022/11/16/%E8%A3%85%E6%9C%BA%E6%97%A5%E8%AE%B0/6999.jpg"><br><img src="/2022/11/16/%E8%A3%85%E6%9C%BA%E6%97%A5%E8%AE%B0/7000.jpg"><br>虽然有点丐，但还是挺喜欢那句话，“丐就是够用，就是普通人真正刚需的配置”。有的时候一分钱一分货一块钱两份货，消费主义不可取。</p><h2 id="2022-11-26更新"><a href="#2022-11-26更新" class="headerlink" title="2022-11-26更新"></a>2022-11-26更新</h2><p>目前其实思路已经很清楚了。其实本人固态和内存都可以用原来有的（1个1T的三星980pro，2根科赋雷霆8G*2）。所以只需要考虑板U和显卡即可，其他的散热、电源、机箱总的大概也就六七百（散热若用风冷，利民PA120大约170，电源650W、750W大概330，机箱200，总700）。</p><h3 id="目前的想法："><a href="#目前的想法：" class="headerlink" title="目前的想法："></a>目前的想法：</h3><ul><li>CPU肯定就上13600KF了（个人对计算有要求），大概1900；</li><li>主板用华硕重炮手B660，带Wifi的版本，大概1100；</li><li>显卡再纠结下，暂定3070（3400），兼顾考虑3060Ti新版（3000）、3070Ti（3900）、3080（4700）。个人对40系新显卡表示悲观（这2022年末了还出一堆30系显卡的V2版本，老黄到底是弄哪样……）</li></ul><p>综上，不同显卡下总价大概是：</p><ul><li>RTX 3060 : 2100+3700&#x3D;5800元；</li><li>RTX 3060 Ti 新版 : 3000+3700&#x3D;6700元；</li><li>RTX 3070 : 3400+3700&#x3D;7100元 ；<strong>√</strong></li><li>RTX 3070 Ti 旧版 : 3700+3700&#x3D;7400元；</li><li>RTX 3080 : 4700+3700&#x3D;8400元；</li></ul><h3 id="30系、40系显卡参数"><a href="#30系、40系显卡参数" class="headerlink" title="30系、40系显卡参数"></a>30系、40系显卡参数</h3><p><img src="/2022/11/16/%E8%A3%85%E6%9C%BA%E6%97%A5%E8%AE%B0/02.png"><br><img src="/2022/11/16/%E8%A3%85%E6%9C%BA%E6%97%A5%E8%AE%B0/01.png"></p><h3 id="近日硬件市场价格："><a href="#近日硬件市场价格：" class="headerlink" title="近日硬件市场价格："></a>近日硬件市场价格：</h3><p>1、显卡：<br><img src="/2022/11/16/%E8%A3%85%E6%9C%BA%E6%97%A5%E8%AE%B0/33.png"><br>备注：3060 （2100元）、3060Ti（3000元）、3070（3400元）、3070Ti（3900元）、3080（4700元），目前暂选3070，3400元</p><p>2、CPU、主板、散热：<br><img src="/2022/11/16/%E8%A3%85%E6%9C%BA%E6%97%A5%E8%AE%B0/22.png"><br>备注：13600KF+B660 Wifi &#x3D; 1900+1100&#x3D;3000元。</p><p>3、内存、固态：<br><img src="/2022/11/16/%E8%A3%85%E6%9C%BA%E6%97%A5%E8%AE%B0/11.png"><br>备注：利民PA120（170元）、航嘉 650W金牌全模组（430元）、机箱鲁班1号黑色（180元），总价780元。</p><h2 id="2022-12-4更新"><a href="#2022-12-4更新" class="headerlink" title="2022-12-4更新"></a>2022-12-4更新</h2><p>下山了下山了，其实显卡纠结了好久，本来准备收个5600XT过渡一会，等40系甜品卡的，但最终发现11月矿卡价格涨得离谱，5600XT从9、10月的450涨到了680,5700XT从原来的5500涨到了950，感觉性价比就不高了。个人总结目前A卡的矿卡行情如下：</p><ul><li><p>5600XT：650左右，综合性价比最高的一张卡，1080P神卡，大概跟2060差不多。但11月份价格离谱。矿了大概2年，但bios更新前算力不强，矿老板看不上，而且温度不高（大约5，60），稳定性比5700XT高，性能又比5500xt高，可以说算一张很稳的女骑士卡了。推荐上华硕Tuf三风扇的版本，Bios刷会原版会更稳定一点，大店基本可以无脑上。</p></li><li><p>5500XT：最低419，8G显存，甚至跟6500XT（4G）互有胜负。稳定性跟5600XT差不多，比较适合玩黑苹果的人入（免驱）。但我对性能还是稍微有一丢丢要求的（40系甜品卡遥遥无期）</p></li><li><p>5700&amp;5700XT：5700核心和5600XT一样，性能也差得不大，但挖矿时间和强度明显大了很多。5700XT性能要强很多。这两张卡都属于经历两轮矿潮的老矿渣了，非常容易坏，不太推荐新手无脑上。另外，5700超频潜力不错，甚至可以刷5700XT的Bios。价格目前我看到的最低是698，5700XT华硕三风则是到了958。结合老矿渣属性，目前价格性价比着实不高。</p></li><li><p>6600&amp;6600XT：6000系显卡锁了算力，所以原则上挖的要稍微没那么狠，主要矿卡集中在6800XT以上。6700XT也挖，但好在其温度低，没那么容易坏。6600大概打平5700XT，6600XT略超5700XT，略强于3060，大致相当于85%的3060Ti，82%的6700XT，有点接近2070S或1080Ti。最主要的是，6600XT和6600温度都要比6700XT低很多，TDP功耗只有160W和132W，上市时间分别为2021.8.11和2021.10.13。所以，挖矿时长大概只有大半年和三五个月左右。目前6600价格大约1050，6600XT大约为1300（只是我看到的觉得OK能买的，不含pdd各种券）。</p></li></ul><p>一般来说，这种二手卡默认矿，所以我更加关注<strong>稳定性</strong>。我个人偏悲观，对淘宝、pdd各种“两年换新”是根本不信的。但目前A卡这边支持个人送保的只有华硕和盈通。</p><p>综合考虑下，我还是将目光投向了6600&amp;6600XT，并最终选择了华硕6600XT Dual 8G雪豹。2022年的卡，小黄鱼找了个评价非常好的（六千多个好评）的店家，1250入手。</p><p>虽然可能远没有到低价，但入了之后感觉非常舒畅，与其花时间成本继续蹲，不如早买早享受。其实和买游戏是一个道理。</p><p>因此，最终的装机单为：</p><ul><li>CPU：13600kf 盒装 3134元</li><li>主板：华硕B660重炮手wifi 0元</li><li>散热：利民PA120 ARGB 白 279</li><li>内存：英睿达铂胜16G*2 908</li><li>固态：三星980pro 899</li><li>风扇：利民TL-C12CW*2 180</li><li>电源：海韵GX750 白色899</li><li>机箱：机械大师C28  白 719</li><li>显卡：华硕6600xt 8G 雪豹 1250</li><li>总价：8268元</li></ul><p>其实内存、固态、电源都是先前就有了的，这次含显卡实际花了5103元。未来有机会再考虑上4060Ti吧。准备等硬件来再更新。</p><h2 id="2022-12-8更新"><a href="#2022-12-8更新" class="headerlink" title="2022-12-8更新"></a>2022-12-8更新</h2><p>硬件目前都到了。第一次装机，又是号称螺丝大师的超难装的机箱，让人有点头疼。不过其实慢慢耐下心来装，还是较为顺利的。<br><img src="/2022/11/16/%E8%A3%85%E6%9C%BA%E6%97%A5%E8%AE%B0/1.jpg"></p><p>风扇线有点难理，且每个风扇有供电和ARGB两条线。还好重炮手主板风扇接口分布较为合理。（ARGB的三针接口太容易歪了有没有）。<br><img src="/2022/11/16/%E8%A3%85%E6%9C%BA%E6%97%A5%E8%AE%B0/2.jpg"></p><p>这个机箱比我想象中小。那看来C26、C24会更加小。</p><p>暂时装好，正常点亮：<br><img src="/2022/11/16/%E8%A3%85%E6%9C%BA%E6%97%A5%E8%AE%B0/5.jpg"></p><p>放远一点看，感觉颜值还可以。<br><img src="/2022/11/16/%E8%A3%85%E6%9C%BA%E6%97%A5%E8%AE%B0/3.jpg"></p><p>其实原来一直准备买纯白的机箱，电源风扇散热器什么的也都按着纯白买的。然而不知怎么的最后感觉深空灰的C28突然吸引我了。而且白色机箱又溢价50，到849了，而灰色的我在某店看到只要719，果断入了。入手后感觉并没有很不搭。</p><p>这里出现了一个问题，就是660主板需要开启CSM才能支持1080Ti这种老显卡，我的CPU又是纯核显，那就只能等新显卡到喽。（本来还想暂时借用下实验室的1080Ti暂时点亮下试试）</p><h2 id="2022-12-12更新"><a href="#2022-12-12更新" class="headerlink" title="2022-12-12更新"></a>2022-12-12更新</h2><p>我的矿卡到了，一张华硕的6600XT，到手后先官网查了下售后，发现此卡是2022年3月24日的卡，一年上门还可以到明年，两年个人送保到2024年3月。不知道是不是哥布林窝里救出的女骑士，先装上看看。<br><img src="/2022/11/16/%E8%A3%85%E6%9C%BA%E6%97%A5%E8%AE%B0/4.jpg"></p><p>最终压力测试99.7，跑分也正常，我刷了个最新的显卡BIOS，双烤、玩游戏什么的也正常。暂时没有翻车，翻车了找华硕送保。（6600XT功耗不大，温度也不高，应该不会有太大事）<br><img src="/2022/11/16/%E8%A3%85%E6%9C%BA%E6%97%A5%E8%AE%B0/9.png"></p><p>目前我共有8把风扇，出风的有上面两把，后面一把；进风的有下面两把，前面一把9cm 的小的；CPU两把。整体上散热还是非常不错的，基本上单烤双烤都是80多度。</p><p>我把风扇策略调整了一下，让低于50度时转速拉到最低，75度拉到100，85度满载；这样可能会有一个更安静的桌上体验。</p><p>这里我出了一个问题是本来发现风扇非常吵，一个个测试和看说明书发现是上面两个风扇插到的AIO Pump风扇接针上。虽说这么接也没啥问题，但水泵接针默认是满速的，BIOS调一下就好。</p><p>第一次装机整体上体验还是不错的，有很多没想到的小问题，但好在都解决了。</p><h2 id="2022-12-20更新"><a href="#2022-12-20更新" class="headerlink" title="2022-12-20更新"></a>2022-12-20更新</h2><p>回家了，第一次体会到电脑随身移动的感觉。</p><p>C28整体上和有些大一点的ITX机箱都差不多了（17.9），却能拥有mATX主板、ATX电源、240水冷、超长显卡以及6把风扇，属实是因为这个机箱而配了这个电脑了。<br><img src="/2022/11/16/%E8%A3%85%E6%9C%BA%E6%97%A5%E8%AE%B0/7.jpg"><br>个人整体上还是满意的，750W电源其实还有很多富余后续可以加4060TI&#x2F;4070（但我发现似乎6600XT我其实已经玩得很开心）。</p><p>正常使用10来天，到这装机应该就结束了。后续可能考虑写个内存超频的博客。（我的英睿达铂胜3200XMP的，最终超到了4133稳定）</p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>最后还是做个心情的总结吧，近期北京突然放开，疫情非常严重，一切都变得不确定。</p><p>很感谢宿舍隔离时它陪我的日子，一点点了解DIY这个圈子，梳理相关知识，观测整个行情。被奸商涨价恶心过，也为买到性价比不高的东西担心过。出现了问题，但好在一个个被顺利解决了。</p><p>个人觉得，自己喜欢的东西，作出决定后，就不要后悔吧。数码产品”买新不买旧“、”早买早享受，晚买有折扣“也算是个定律了。与其纠结那些鸡毛蒜皮，不如多花点时间想想怎么提高自己，怎么搞钱。</p><p>也算是给自己的毒鸡汤了吧，可能也是不稳定的世界，给自己的一点稳定吧。</p><p>最后放一张随手拍的的照片，此为记。（床乱糟糟的，非常符合现在的生活节奏）<br><img src="/2022/11/16/%E8%A3%85%E6%9C%BA%E6%97%A5%E8%AE%B0/6.jpg"></p><p>2022年要过去了，我很怀念它。</p>]]></content>
      
      
      <categories>
          
          <category> 硬件 </category>
          
          <category> 装机 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 生活 </tag>
            
            <tag> 装机 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>单向度的人</title>
      <link href="/2022/09/20/%E5%8D%95%E5%90%91%E5%BA%A6%E7%9A%84%E4%BA%BA/"/>
      <url>/2022/09/20/%E5%8D%95%E5%90%91%E5%BA%A6%E7%9A%84%E4%BA%BA/</url>
      
        <content type="html"><![CDATA[<h2 id="序"><a href="#序" class="headerlink" title="序"></a>序</h2><p>——张峰 1990年2月于北京<br>本书作者马尔库塞是当代美国著名哲学家和政治思想家、法兰克福学派和弗洛伊德主义的马克思主义的重要代表人物。六十年代下半期，美国和西欧爆发了大规模的学生造反运动，造反学生拥戴马尔库塞为他们的精神领袖。当然，就马尔库塞个人的意愿而言，他也许无意追求这种精神领袖的地位，但当造反学生把这个头衔加在他头上时，他也不反对。</p><p>　　1898年，马尔库塞诞生在德国柏林的一个犹太人家庭。先后在柏林大学和弗莱堡大学就读。１９１７年至１９１８年，他参加了德国社会民主党，但随着李卜克内西和罗莎.卢森堡被暗杀后，他便退出了该党，此后再也没有参加任何政党。为了取得在大学哲学系教书的资格，他在存在主义哲学家海德格尔的指导下，写了《黑格尔的本体论与历史性理论的基础》一文，发表于１９３１年。在此期间，他还写了一些文章，这些文章初步奠定了他后来思想的基础。特别值得一提的是，在马克思的《１８４４年经济学哲学手稿》公布于世后，他是最早认识到这篇手稿的重要性的人之一。１９３３年希特勒掌权后，他移居国外，先在瑞士住了一年，后定居美国。在美国，起初他在法兰克福学派迁住哥伦比亚大学的社会研究所工作，第二次世界大战期间在美国战略情报研究所工作。以后他重新执教，先后在哥伦比亚、哈佛、勃兰第斯和圣地亚哥等大学工作。１９７０年退休。１９７９年７月２９日，他在赴西德访问和讲学途中，逝世于施塔贝恩克。</p><p>　　马尔库塞的哲学和政治思想，如果可以称作马克思主义的话，那么这种马克思主义也是一种奇特的理论混合物。他毕生致力于把西方的某些哲学思潮同马克思的学说相结合，他在１９４１年出版的《理性与革命》中，强调黑格尔哲学的实质是对现实的批判和否定精神，这种精神也是马克思学说的思想根源，并且是同实证主义哲学对现实的肯定态度正相反对的。不言而喻，马尔库塞的这一思想继承了卢卡奇开创的黑格尔主义的马克思主义传统，而１９５５年出版的《爱欲与文明》标志着马尔库塞思想的一个转折。这时，马尔库塞开始对弗洛伊德主义抱有浓厚兴趣，企图用弗洛伊德的理论来补充马克思的学说，并在弗洛伊德的文明理论的基础上建立一种新的乌托邦。据此，马尔库塞又被当作弗洛伊德主义的马克思主义的一个代表人物。</p><p>　　《单向度的人》（１９６４年）是马尔库塞的一部读者最为广泛的著作。这部著作标志着马尔库塞思想的又一次转折。这次转折表现在，马尔库塞对现代文明，特别是美国文明的批判，主要依据的不是弗洛伊德的文明理论，而是他早年研究黑格尔哲学的主题：人类解放的先验理性准则。而且，在这部著作里，马尔库塞还扩展了法兰克福学派的一些早期论点，如批判工具的合理性，模糊手段和目的的区别。这部著作的基本思想是：在发达的工业社会里，批判意识已消失殆尽，统治已成为全面的，个人已丧失了合理地批判社会现实的能力。所谓“单向度的人”就是指丧失这种能力的人。①</p><p>　　马尔库塞用“单向度”一词来意指现代资本主义的技术经济机制对一切人类经验的不知不觉的协调作用。他认为，发达资本主义以前的社会是双向度的社会，在这个社会里，私人生活和公共生活是有差别的，因此个人可以合理地批判地考虑自己的需求。而现代文明，在科学、艺术、哲学、日常思维、政治体制、经济和工艺各方面都是单向度的。人们失去的“第二向度”是什么呢？就是否定性和批判性原则，即把现存的世界同哲学的准则所揭示的真实世界相对照的习惯。哲学的准则能使我们理解自由、美、理性、生活享受等等的真正性质。</p><p>　　马尔库塞认为，双向度社会与单向度社会对立的哲学根源是辩证思维与形式思维的冲突，而这种冲突可以追溯到柏拉图和亚里士多德那里。柏拉图赞美同经验对象相比较的规“单向度”又可译为“单面”和“一维”。我们认为译为“单面”虽通俗易懂，但难以体现其中包含的“趋势”之意；译为“一维”虽准确严谨，但过于抽象而不便理解，故取“单向度”的译法。</p><p>　　范性概念（理念）具有无比的重要性，而亚里士多德则提出了一种“不结果实的”形式逻辑，从而“把真理同现实割裂开来”。我们必须重新返回到柏拉图的本体论的真理概念，因为这种概念不仅是命题的特征，而且也是现实本身。我们在一般概念中所知觉到的，不是可直接达到的经验现实，而是一种更高等级的现实。对一般概念的直觉，引导我们走向一个非经验的但独立存在而且应该存在的世界。“理性＝真理＝现实，……在这个等式中，理性是颠覆性力量，‘否定性力量’，作为理论理性和实践理性，它确立了人和万物的真理，即，使人和万物成为其真正样子的条件。”（引文未注明为其它书者，均见本书）这种真理在特点上是规范性的，而且在其中逻各斯和爱欲是一致的。形式逻辑根本不能把握这种真理，根本不能告诉我们“事物的本质”是什么，并且把“是”一词的意义完全限定在纯经验的陈述上。其实，在“人是自由的”这样的陈述中，“系动词‘是’就表述着一种‘应该’，一种迫切的需要。”因此，“是”一词具有双重的意义，既是经验的又是规范的。辩证法承认本质的东西或应该存在的东西同表面的东西（即事实）的张力，所以，辩证法是对现实状况的批判，是社会解放的杠杆。而在形式逻辑中，这种张力被排除掉了，“思维对它的对象漠不关心”。辩证法在原则上不能被形式化。它是对直接经验的批判，深入进了更深刻的现实中。</p><p>　　亚里士多德的思想方式，把认识限定在直接经验和推理的形式规则上。这种思想方式是一切现代科学的基础。现代科学故意避而不谈事物的规范的“本质”，并把“何谓应该”的问题归结为个人主观爱好的问题。现代科学以及建立在现代科学的基础之上的技术，已经创造一个使得人对自然的统治与社会对人的奴役并行不悖的世界。现代科学和技术确实提高了生活标准，但同时也带来了压抑和破坏。所以，马尔库塞说：“自然的定量化，导致根据数学结构来阐释自然，把现实同一切内在的目的分割开来，从而把真同善、科学同伦理学分割开来。……逻各斯和爱欲之间不稳定的本体论联系被打破了，科学的合理性呈现为本质上中立的。……在这种合理性之外，人们生活在一个价值世界中，价值脱离了客观现实，成为主观的。”</p><p>　　这种被扭曲了的科学，导致了对人的奴役。它的哲学表现就是实证主义，特别是分析哲学和操作主义。这些哲学学说反对一切不具有“实证”意义的概念，而这些概念恰恰是非常重要的，因为它们能使我们超越现存世界。更为糟糕的是，实证主义主张容忍一切价值，鼓励在价值判断上不加任何限制，这实际上起了一种反动作用。</p><p>　　如果这种实证的思想态度占主导地位，那么社会就一定成了单向度的人的社会。这个社会是虚假意识的牺牲品。尽管大多数人都认可这种社会制度，却并不能使这种社会制度更合理。由于这种社会制度掏空了对立面的批判内容，所以它能同化各种各样的对立面，而不会给自身造成危害。它能满足大量的人类需求，但这些需求本身是虚假的，是唯利是图的剥削者为了使不正义、贫困和侵略现象永远存在下去而强加给个人的。“最流行的需求包括，按照广告来放松、娱乐、行动和消费，爱或恨别人所爱或恨的东西，这些都是虚假的需求。”当代资本主义经济制度是在一种自由的条件下操纵这些人为的需求的，但这种自由的条件本身就是一种统治工具。所以，“对个人开放的选择范围，不是决定人类自由的程度，而是决定个人能选择什么和实际上选择什么的根本因素。”</p><p>　　在当代资本主义世界里，人和万物都毫无例外地被贬低成一种机能的角色，丧失了其“本质”和自主性。同样，艺术也被纳入顺从主义的轨道，它的文化价值被融合进现存秩序中。以前，高级的欧洲文化基本上是封建的和非技术的，它独立于商业和工业领域而存在。现在，这种文化已经与商业和工业结合成一体。未来的文明应该通过创造思想和感情的另一向度，坚持否定精神，恢复普遍的爱欲的王权，来重建文化的独立性。</p><p>　　发达的资本主义制度操纵了虚假的需求，提供了满足这些需求的手段，并用一种虚假的意识把民众束缚起来。那么，有无摆脱这种社会制度的方式呢？马尔库塞认为是有的。这就是：完全“超越”现存社会，追求一种“质的变革”；摧毁现实的根本结构，使人民能自由地发展自己的需求；建立一种新的技术（不是目前技术的新应用），重新把握艺术和科学、科学和伦理学的统一；自由地发挥我们的想象力，给科学套上缰绳，使之用于人类的解放。</p><p>　　但是，当大多数人民，特别是工人阶级已被这种社会制度同化，并且对“全球性超越”现存秩序不感兴趣时，由谁来做这些事情呢？马尔库塞提出的答案是；“在保守的大众基础之下，有一些亚阶层，如被遗弃者和被排除在外者，被剥削被迫害的其他种族和有色人种，失业者和不能就业者。他们全都是在民主过程之外存在的；他们的生活最直接最现实地要求结束不可容忍的条件和制度。因此，即使他们的意识不是革命的，他们的敌对行为也是革命的。”也就是说，既然工人阶级不再是社会革命的动力，那么推翻现存社会制度的任务就落在了造反学生、少数民族和流民无产者肩上。</p><p>　　不言而喻，马尔库塞在本书里对发达资本主义国家的社会制度作了尖锐而深刻的批判。但这并不意味着他对现存的社会主义国家的社会制度持赞赏态度。他所说的“极权主义”国家，既指美国，也指苏联。然而尽管他认为苏联的社会制度建立在恐怖之上，因而是极权主义的，但他主要针对的是美国。他说“‘极权主义’不仅是社会的一种恐怖主义的政治协作，而且也是一种非恐怖主义的经济——技术协作，这种协作的作用是靠既得利益来操纵需求。”“在文化领域，新的极权主义正是在和谐的多元化中显示出来，在那里最相矛盾的作品和真理也能中立地和平共处。”</p><p>　　最近二十年，西方资产阶级学者关于发达资本主义社会的现状和未来趋势的论著可谓汗牛充栋。令人遗憾的是，这些著作无一不在回避发达资本主义的阶级矛盾以及对人民的剥削和压迫的实质，陶醉于富裕的繁荣景象之中。与这些学者相比，马尔库塞算得上一个头脑清醒的人物：与这些著作相比，《单向度的人》算得上一本不同凡响的力作。难能可贵的是，马尔库塞以敏锐的眼光捕捉到了发达资本主义社会的一些实质性的问题。发达资本主义社会的经济繁荣是资产阶级学者不厌其烦地大肆宣扬的成就，而在这种经济繁荣背后，马尔库塞看到的是日渐加剧的对人民的全面压抑，特别是精神上的压抑。在他看来，普通群众生活水平的提高，并不意味着阶级和阶级压迫的消失，而只是意味着普通群众被虚假的需求所操纵而丧失了自己的批判能力。所以，他一针见血地指出：“发达工业文明的奴隶，是地位提高了的奴隶，但仍然是奴隶，”因为人依然处在物的境地。操作主义、实证主义、工具主义和分析哲学等现代西方哲学思潮，一贯标榜“中立”，的确迷惑了不少的人，而马尔库塞却从这种所谓的“中立”立场背后发现了这些哲学思潮窒息人的实质，并针砭了它们无病呻吟式的、烦琐而脱离现实的研究方式，他的哲学批判有相当强的力度。发达资本主义社会的“自由”更是为资产阶级学者津津乐道并引以为荣的东西，而马尔库塞从这种自由中看到的却是实质上的不自由。在他看来，这种自由实际上是一种强有力的统治工具；对于奴隶来说，这种自由不过是挑选哪个主人来统治自己的权利。甚至一向被视为西方世界之楷模的福利国家，也“是一个不自由的国家”。可以肯定，在对发达资本主义社会的批判上，马尔库塞堪称是勇猛的斗士。他的研究和批判，对我们来说不无可资借鉴的意义。至少在两个问题上马尔库塞对发达资本主义社会的批判能给我们强烈的昭示。第一，对发达资本主义社会的批判不能仅以传统的经济和生活水平的标准为尺度，还必须从新的角度，着眼于人类的全面解放来批判，只有这样才能更深刻地揭露当代资本主义社会表面的合理性背后的不合理性。第二，发达资本主义社会决非值得向往的“天堂”和“乐土”，而是一个应被否定的社会。马尔库塞在《单向度的人》中以翔实的史料充分说明了这一点，这对教育我国青年正确认识发达资本主义社会，不无裨益。</p><p>　　当然，作为一个深受黑格尔主义和弗洛伊德主义思想影响的学者，马尔库塞对资本主义的认识也有很大的局限性，这主要表现在他对社会未来发展所表露出的悲观主义态度上。而造成这种悲观主义态度的原因大致有三点：首先，他对发达资本主义社会的全面控制和全面管理的力量感触颇深，以致认为这个社会以其经济的繁荣和技术的进步已经消除了对立面，人成了丧失了否定性向度的单向度的人，任何个人或群体对社会的抗争都是无济于事的。其次，他虽然承认无产阶级仍是发达资本主义社会的基本阶级，但又认为这个阶级的结构和功能已被完全改变了，不再是历史变革的动因。他甚至说：“发达工业社会中劳动阶级的现实使马克思的‘无产阶级’成了一个神话的概念”。这样一来，他很难在发达资本主义社会里找到现实的有力的否定力量，只能寄希望于一些为数不多的被排斥在社会正常体制之外的“亚阶层”。再次，他把苏联社会主义模式当作资本主义社会的替代品，而苏联社会主义模式的“集权”特征又令他极度失望，他不仅怀疑这种社会主义取代资本主义的可能性，而且认为这同样是不可取的。因此，他哀叹：“当代社会主义的现实使马克思的观念成为一种梦想。”总之，面对资本主义社会强有力的全面统治，马尔库塞找不到可以推翻资本主义社会的动力和目标，他不能不走向悲观。所以，他的结论只能是：“社会批判理论并不拥有能弥合现在与未来之间裂缝的概念，不作任何许诺，不显示任何成功，它只是否定。”</p>]]></content>
      
      
      <categories>
          
          <category> 生活 </category>
          
          <category> 政治&amp;哲学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 政治 </tag>
            
            <tag> 意识形态 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux常用命令</title>
      <link href="/2022/09/16/Linux%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/"/>
      <url>/2022/09/16/Linux%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/</url>
      
        <content type="html"><![CDATA[<h1 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h1><h2 id="cd命令"><a href="#cd命令" class="headerlink" title="cd命令"></a>cd命令</h2><p>这是一个非常基本，也是大家经常需要使用的命令，它用于切换当前目录，它的参数是要切换到的目录的路径，可以是绝对路径，也可以是相对路径。如：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">cd</span> /root/Docements <span class="hljs-comment"># 切换到目录/root/Docements</span><br><span class="hljs-built_in">cd</span> ./path          <span class="hljs-comment"># 切换到当前目录下的path目录中，“.”表示当前目录  </span><br><span class="hljs-built_in">cd</span> ../path         <span class="hljs-comment"># 切换到上层目录中的path目录中，“..”表示上一层目录</span><br></code></pre></td></tr></table></figure><h2 id="ls命令"><a href="#ls命令" class="headerlink" title="ls命令"></a>ls命令</h2><p>这是一个非常有用的查看文件与目录的命令，list之意，它的参数非常多，也可以组合使用，如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs bash">-l <span class="hljs-comment">#列出长数据串，包含文件的属性与权限数据等</span><br>-a <span class="hljs-comment">#列出全部的文件，连同隐藏文件（开头为.的文件）一起列出来（常用）</span><br>-d <span class="hljs-comment">#仅列出目录本身，而不是列出目录的文件数据</span><br>-h <span class="hljs-comment">#将文件容量以较易读的方式（GB，kB等）列出来</span><br>-R <span class="hljs-comment">#连同子目录的内容一起列出（递归列出），等于该目录下的所有文件都会显示出来</span><br><span class="hljs-built_in">ls</span> -l <span class="hljs-comment">#以长数据串的形式列出当前目录下的数据文件和目录</span><br><span class="hljs-built_in">ls</span> -lR <span class="hljs-comment">#以长数据串的形式列出当前目录下的所有文件</span><br></code></pre></td></tr></table></figure><h2 id="grep命令"><a href="#grep命令" class="headerlink" title="grep命令"></a>grep命令</h2><p>该命令常用于分析一行的信息，若当中有我们所需要的信息，就将该行显示出来，该命令通常与管道命令一起使用，用于对一些命令的输出进行筛选加工等等，它的简单语法为</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">grep [-acinv] [--color=auto] <span class="hljs-string">&#x27;查找字符串&#x27;</span> filename<br></code></pre></td></tr></table></figure><p>它的常用参数为</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs bash">-a ：将binary文件以text文件的方式查找数据<br>-c ：计算找到‘查找字符串’的次数<br>-i ：忽略大小写的区别，即把大小写视为相同<br>-v ：反向选择，即显示出没有‘查找字符串’内容的那一行<br><span class="hljs-comment"># 例如：</span><br><span class="hljs-comment"># 取出文件/etc/man.config中包含MANPATH的行，并把找到的关键字加上颜色</span><br>grep --color=auto <span class="hljs-string">&#x27;MANPATH&#x27;</span> /etc/man.config<br><span class="hljs-comment"># 把ls -l的输出中包含字母file（不区分大小写）的内容输出</span><br></code></pre></td></tr></table></figure><h2 id="find命令"><a href="#find命令" class="headerlink" title="find命令"></a>find命令</h2><p>find是一个基于查找的功能非常强大的命令，相对而言，它的使用也相对较为复杂，参数也比较多，所以在这里将给把它们分类列出，它的基本语法如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><code class="hljs bash">find [PATH] [option] [action]<br><br><span class="hljs-comment"># 与时间有关的参数：</span><br>-mtime n : n为数字，意思为在n天之前的“一天内”被更改过的文件；<br>-mtime +n : 列出在n天之前（不含n天本身）被更改过的文件名；<br>-mtime -n : 列出在n天之内（含n天本身）被更改过的文件名；<br>-newer file : 列出比file还要新的文件名<br><span class="hljs-comment"># 例如：</span><br>find /root -mtime 0 <span class="hljs-comment"># 在当前目录下查找今天之内有改动的文件</span><br><br><span class="hljs-comment"># 与用户或用户组名有关的参数：</span><br>-user name : 列出文件所有者为name的文件<br>-group name : 列出文件所属用户组为name的文件<br>-uid n : 列出文件所有者为用户ID为n的文件<br>-gid n : 列出文件所属用户组为用户组ID为n的文件<br><span class="hljs-comment"># 例如：</span><br>find /home/ljianhui -user ljianhui <span class="hljs-comment"># 在目录/home/ljianhui中找出所有者为ljianhui的文件</span><br><br><span class="hljs-comment"># 与文件权限及名称有关的参数：</span><br>-name filename ：找出文件名为filename的文件<br>-size [+-]SIZE ：找出比SIZE还要大（+）或小（-）的文件<br>-tpye TYPE ：查找文件的类型为TYPE的文件，TYPE的值主要有：一般文件（f)、设备文件（b、c）、<br>             目录（d）、连接文件（l）、socket（s）、FIFO管道文件（p）；<br>-perm mode ：查找文件权限刚好等于mode的文件，mode用数字表示，如0755；<br>-perm -mode ：查找文件权限必须要全部包括mode权限的文件，mode用数字表示<br>-perm +mode ：查找文件权限包含任一mode的权限的文件，mode用数字表示<br><span class="hljs-comment"># 例如：</span><br>find / -name passwd <span class="hljs-comment"># 查找文件名为passwd的文件</span><br>find . -perm 0755 <span class="hljs-comment"># 查找当前目录中文件权限的0755的文件</span><br>find . -size +12k <span class="hljs-comment"># 查找当前目录中大于12KB的文件，注意c表示byte</span><br></code></pre></td></tr></table></figure><h2 id="cp命令"><a href="#cp命令" class="headerlink" title="cp命令"></a>cp命令</h2><p>该命令用于复制文件，copy之意，它还可以把多个文件一次性地复制到一个目录下， 它的常用参数如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash">-a ：将文件的特性一起复制<br>-p ：连同文件的属性一起复制，而非使用默认方式，与-a相似，常用于备份<br>-i ：若目标文件已经存在时，在覆盖时会先询问操作的进行<br>-r ：递归持续复制，用于目录的复制行为<br>-u ：目标文件与源文件有差异时才会复制<br></code></pre></td></tr></table></figure><p>例如：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">cp</span> -a file1 file2 <span class="hljs-comment">#连同文件的所有特性把文件file1复制成文件file2</span><br><span class="hljs-built_in">cp</span> file1 file2 file3 <span class="hljs-built_in">dir</span> <span class="hljs-comment">#把文件file1、file2、file3复制到目录dir中</span><br></code></pre></td></tr></table></figure><h2 id="mv命令"><a href="#mv命令" class="headerlink" title="mv命令"></a>mv命令</h2><p>该命令用于移动文件、目录或更名，move之意，它的常用参数如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">-f ：force强制的意思，如果目标文件已经存在，不会询问而直接覆盖<br>-i ：若目标文件已经存在，就会询问是否覆盖<br>-u ：若目标文件已经存在，且比目标文件新，才会更新<br></code></pre></td></tr></table></figure><p>注：该命令可以把一个文件或多个文件一次移动一个文件夹中，但是最后一个目标文件一定要是“目录”。例如：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">mv</span> file1 file2 file3 <span class="hljs-built_in">dir</span> <span class="hljs-comment"># 把文件file1、file2、file3移动到目录dir中</span><br><span class="hljs-built_in">mv</span> file1 file2 <span class="hljs-comment"># 把文件file1重命名为file2</span><br></code></pre></td></tr></table></figure><h2 id="rm命令"><a href="#rm命令" class="headerlink" title="rm命令"></a>rm命令</h2><p>该命令用于删除文件或目录，remove之间，它的常用参数如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">-f ：就是force的意思，忽略不存在的文件，不会出现警告消息<br>-i ：互动模式，在删除前会询问用户是否操作<br>-r ：递归删除，最常用于目录删除，它是一个非常危险的参数<br></code></pre></td></tr></table></figure><p>例如：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">rm</span> -i file <span class="hljs-comment"># 删除文件file，在删除之前会询问是否进行该操作</span><br><span class="hljs-built_in">rm</span> -fr <span class="hljs-built_in">dir</span> <span class="hljs-comment"># 强制删除目录dir中的所有文件</span><br></code></pre></td></tr></table></figure><h2 id="ps命令"><a href="#ps命令" class="headerlink" title="ps命令"></a>ps命令</h2><p>该命令用于将某个时间点的进程运行情况选取下来并输出，process之意，它的常用参数如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash">-A ：所有的进程均显示出来<br>-a ：不与terminal有关的所有进程<br>-u ：有效用户的相关进程<br>-x ：一般与a参数一起使用，可列出较完整的信息<br>-l ：较长，较详细地将PID的信息列出<br></code></pre></td></tr></table></figure><p>其实我们只要记住ps一般使用的命令参数搭配即可，它们并不多，如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">ps aux <span class="hljs-comment"># 查看系统所有的进程数据</span><br>ps ax <span class="hljs-comment"># 查看不与terminal有关的所有进程</span><br>ps -lA <span class="hljs-comment"># 查看系统所有的进程数据</span><br>ps axjf <span class="hljs-comment"># 查看连同一部分进程树状态</span><br></code></pre></td></tr></table></figure><h2 id="kill命令"><a href="#kill命令" class="headerlink" title="kill命令"></a>kill命令</h2><p>该命令用于向某个工作（%jobnumber）或者是某个PID（数字）传送一个信号，它通常与ps和jobs命令一起使用，它的基本语法如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">kill</span> -signal PID<br></code></pre></td></tr></table></figure><p>signal的常用参数如下：<br>注：最前面的数字为信号的代号，使用时可以用代号代替相应的信号。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash">1：SIGHUP，启动被终止的进程<br>2：SIGINT，相当于输入ctrl+c，中断一个程序的进行<br>9：SIGKILL，强制中断一个进程的进行<br>15：SIGTERM，以正常的结束进程方式来终止进程<br>17：SIGSTOP，相当于输入ctrl+z，暂停一个进程的进行<br></code></pre></td></tr></table></figure><p>例如：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 以正常的结束进程方式来终于第一个后台工作，可用jobs命令查看后台中的第一个工作进程</span><br><span class="hljs-built_in">kill</span> -SIGTERM %1 <br><span class="hljs-comment"># 重新改动进程ID为PID的进程，PID可用ps命令通过管道命令加上grep命令进行筛选获得</span><br><span class="hljs-built_in">kill</span> -SIGHUP PID<br></code></pre></td></tr></table></figure><h2 id="killall命令"><a href="#killall命令" class="headerlink" title="killall命令"></a>killall命令</h2><p>该命令用于向一个命令启动的进程发送一个信号，它的一般语法如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">killall [-iIe] [<span class="hljs-built_in">command</span> name]<br></code></pre></td></tr></table></figure><p>它的参数如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash">-i ：交互式的意思，若需要删除时，会询问用户<br>-e ：表示后面接的<span class="hljs-built_in">command</span> name要一致，但<span class="hljs-built_in">command</span> name不能超过15个字符<br>-I ：命令名称忽略大小写<br><span class="hljs-comment"># 例如：</span><br>killall -SIGHUP syslogd <span class="hljs-comment"># 重新启动syslogd</span><br></code></pre></td></tr></table></figure><h2 id="file命令"><a href="#file命令" class="headerlink" title="file命令"></a>file命令</h2><p>该命令用于判断接在file命令后的文件的基本数据，因为在Linux下文件的类型并不是以后缀为分的，所以这个命令对我们来说就很有用了，它的用法非常简单，基本语法如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">file filename<br><span class="hljs-comment">#例如：</span><br>file ./test<br></code></pre></td></tr></table></figure><h2 id="tar命令"><a href="#tar命令" class="headerlink" title="tar命令"></a>tar命令</h2><p>该命令用于对文件进行打包，默认情况并不会压缩，如果指定了相应的参数，它还会调用相应的压缩程序（如gzip和bzip等）进行压缩和解压。它的常用参数如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs bash">-c ：新建打包文件<br>-t ：查看打包文件的内容含有哪些文件名<br>-x ：解打包或解压缩的功能，可以搭配-C（大写）指定解压的目录，注意-c,-t,-x不能同时出现在同一条命令中<br>-j ：通过bzip2的支持进行压缩/解压缩<br>-z ：通过gzip的支持进行压缩/解压缩<br>-v ：在压缩/解压缩过程中，将正在处理的文件名显示出来<br>-f filename ：filename为要处理的文件<br>-C <span class="hljs-built_in">dir</span> ：指定压缩/解压缩的目录<span class="hljs-built_in">dir</span><br></code></pre></td></tr></table></figure><p>通常记住以下三条：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">压缩：tar -jcv -f filename.tar.bz2 要被处理的文件或目录名称<br>查询：tar -jtv -f filename.tar.bz2<br>解压：tar -jxv -f filename.tar.bz2 -C 欲解压缩的目录<br></code></pre></td></tr></table></figure><p>注：文件名并不定要以后缀tar.bz2结尾，这里主要是为了说明使用的压缩程序为bzip2</p><h2 id="cat命令"><a href="#cat命令" class="headerlink" title="cat命令"></a>cat命令</h2><p>该命令用于查看文本文件的内容，后接要查看的文件名，通常可用管道与more和less一起使用，从而可以一页页地查看数据。例如：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">cat</span> text | less <span class="hljs-comment"># 查看text文件中的内容</span><br><span class="hljs-comment"># 注：这条命令也可以使用less text来代替</span><br></code></pre></td></tr></table></figure><h2 id="chgrp命令"><a href="#chgrp命令" class="headerlink" title="chgrp命令"></a>chgrp命令</h2><p>该命令用于改变文件所属用户组，它的使用非常简单，它的基本用法如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">chgrp</span> [-R] <span class="hljs-built_in">dirname</span>/filename<br>-R ：进行递归的持续对所有文件和子目录更改<br><span class="hljs-comment"># 例如：</span><br><span class="hljs-built_in">chgrp</span> <span class="hljs-built_in">users</span> -R ./dir <span class="hljs-comment"># 递归地把dir目录下中的所有文件和子目录下所有文件的用户组修改为users</span><br></code></pre></td></tr></table></figure><h2 id="chmod命令"><a href="#chmod命令" class="headerlink" title="chmod命令"></a>chmod命令</h2><p>该命令用于改变文件的权限，一般的用法如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">chmod</span> [-R] xyz 文件或目录<br>-R：进行递归的持续更改，即连同子目录下的所有文件都会更改<br></code></pre></td></tr></table></figure><p>同时，chmod还可以使用u（user）、g（group）、o（other）、a（all）和+（加入）、-（删除）、&#x3D;（设置）跟rwx搭配来对文件的权限进行更改。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 例如：</span><br><span class="hljs-built_in">chmod</span> 0755 file <span class="hljs-comment"># 把file的文件权限改变为-rxwr-xr-x</span><br><span class="hljs-built_in">chmod</span> g+w file <span class="hljs-comment"># 向file的文件权限中加入用户组可写权限</span><br></code></pre></td></tr></table></figure><h2 id="gcc命令"><a href="#gcc命令" class="headerlink" title="gcc命令"></a>gcc命令</h2><p>对于一个用Linux开发C程序的人来说，这个命令就非常重要了，它用于把C语言的源程序文件，编译成可执行程序，由于g++的很多参数跟它非常相似，所以这里只介绍gcc的参数，它的常用参数如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs bash">-o ：output之意，用于指定生成一个可执行文件的文件名<br>-c ：用于把源文件生成目标文件（.o)，并阻止编译器创建一个完整的程序<br>-I ：增加编译时搜索头文件的路径<br>-L ：增加编译时搜索静态连接库的路径<br>-S ：把源文件生成汇编代码文件<br>-lm：表示标准库的目录中名为libm.a的函数库<br>-lpthread ：连接NPTL实现的线程库<br>-std= ：用于指定把使用的C语言的版本<br><br><span class="hljs-comment"># 例如：</span><br><span class="hljs-comment"># 把源文件test.c按照c99标准编译成可执行程序test</span><br>gcc -o <span class="hljs-built_in">test</span> test.c -lm -std=c99<br><span class="hljs-comment">#把源文件test.c转换为相应的汇编程序源文件test.s</span><br>gcc -S test.c<br></code></pre></td></tr></table></figure><h2 id="time命令"><a href="#time命令" class="headerlink" title="time命令"></a>time命令</h2><p>该命令用于测算一个命令（即程序）的执行时间。它的使用非常简单，就像平时输入命令一样，不过在命令的前面加入一个time即可，例如：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">time ./process<br>time ps aux<br></code></pre></td></tr></table></figure><p>在程序或命令运行结束后，在最后输出了三个时间，它们分别是：</p><p>user：用户CPU时间，命令执行完成花费的用户CPU时间，即命令在用户态中执行时间总和；</p><p>system：系统CPU时间，命令执行完成花费的系统CPU时间，即命令在核心态中执行时间总和；</p><p>real：实际时间，从command命令行开始执行到运行终止的消逝时间；</p><p>注：用户CPU时间和系统CPU时间之和为CPU时间，即命令占用CPU执行的时间总和。实际时间要大于CPU时间，因为Linux是多任务操作系统，往往在执行一条命令时，系统还要处理其它任务。另一个需要注意的问题是即使每次执行相同命令，但所花费的时间也是不一样，其花费时间是与系统运行相关的。</p><h1 id="详细命令"><a href="#详细命令" class="headerlink" title="详细命令"></a>详细命令</h1><h2 id="文件操作"><a href="#文件操作" class="headerlink" title="文件操作"></a>文件操作</h2><h3 id="切换、查看、删除、移动、链接"><a href="#切换、查看、删除、移动、链接" class="headerlink" title="切换、查看、删除、移动、链接"></a>切换、查看、删除、移动、链接</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">cd</span> /home 进入 <span class="hljs-string">&#x27;/ home&#x27;</span> 目录<br><span class="hljs-built_in">cd</span> .. 返回上一级目录 <br><span class="hljs-built_in">cd</span> ../.. 返回上两级目录 <br><span class="hljs-built_in">cd</span> 进入个人的主目录 <br><span class="hljs-built_in">cd</span> ~user1 进入个人的主目录 <br><span class="hljs-built_in">cd</span> - 返回上次所在的目录 <br><span class="hljs-built_in">pwd</span> 显示工作路径 <br><span class="hljs-built_in">ls</span> 查看目录中的文件 <br><span class="hljs-built_in">ls</span> -F 查看目录中的文件 <br><span class="hljs-built_in">ls</span> -l 显示文件和目录的详细资料 <br><span class="hljs-built_in">ls</span> -a 显示隐藏文件 <br><span class="hljs-built_in">ls</span> *[0-9]* 显示包含数字的文件名和目录名 <br>tree 显示文件和目录由根目录开始的树形结构<br>lstree 显示文件和目录由根目录开始的树形结构<br><span class="hljs-built_in">mkdir</span> dir1 创建一个叫做 <span class="hljs-string">&#x27;dir1&#x27;</span> 的目录<br><span class="hljs-built_in">mkdir</span> dir1 dir2 同时创建两个目录 <br><span class="hljs-built_in">mkdir</span> -p /tmp/dir1/dir2 创建一个目录树 <br><span class="hljs-built_in">rm</span> -f file1 删除一个叫做 <span class="hljs-string">&#x27;file1&#x27;</span> 的文件<br><span class="hljs-built_in">rmdir</span> dir1 删除一个叫做 <span class="hljs-string">&#x27;dir1&#x27;</span> 的目录<br><span class="hljs-built_in">rm</span> -rf dir1 删除一个叫做 <span class="hljs-string">&#x27;dir1&#x27;</span> 的目录并同时删除其内容 <br><span class="hljs-built_in">rm</span> -rf dir1 dir2 同时删除两个目录及它们的内容 <br><span class="hljs-built_in">mv</span> dir1 new_dir 重命名/移动 一个目录 <br><span class="hljs-built_in">cp</span> file1 file2 复制一个文件 <br><span class="hljs-built_in">cp</span> <span class="hljs-built_in">dir</span>/* . 复制一个目录下的所有文件到当前工作目录 <br><span class="hljs-built_in">cp</span> -a /tmp/dir1 . 复制一个目录到当前工作目录 <br><span class="hljs-built_in">cp</span> -a dir1 dir2 复制一个目录 <br><span class="hljs-built_in">cp</span> -r dir1 dir2 复制一个目录及子目录<br><span class="hljs-built_in">ln</span> -s file1 lnk1 创建一个指向文件或目录的软链接 <br><span class="hljs-built_in">ln</span> file1 lnk1 创建一个指向文件或目录的物理链接 <br><span class="hljs-built_in">touch</span> -t 0712250000 file1 修改一个文件或目录的时间戳 - (YYMMDDhhmm) <br>file file1 outputs the mime <span class="hljs-built_in">type</span> of the file as text <br>iconv -l 列出已知的编码<br></code></pre></td></tr></table></figure><h3 id="文件授权"><a href="#文件授权" class="headerlink" title="文件授权"></a>文件授权</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs bash">文件的权限 —— 使用 <span class="hljs-string">&quot;+&quot;</span> 设置权限，使用 <span class="hljs-string">&quot;-&quot;</span> 用于取消 <br><span class="hljs-built_in">ls</span> -lh 显示权限 <br><span class="hljs-built_in">ls</span> /tmp | <span class="hljs-built_in">pr</span> -T5 -W<span class="hljs-variable">$COLUMNS</span> 将终端划分成5栏显示 <br><span class="hljs-built_in">chmod</span> ugo+rwx directory1 设置目录的所有人(u)、群组(g)以及其他人(o)以读（r ）、写(w)和执行(x)的权限 <br><span class="hljs-built_in">chmod</span> go-rwx directory1 删除群组(g)与其他人(o)对目录的读写执行权限 <br><span class="hljs-built_in">chown</span> user1 file1 改变一个文件的所有人属性 <br><span class="hljs-built_in">chown</span> -R user1 directory1 改变一个目录的所有人属性并同时改变改目录下所有文件的属性 <br><span class="hljs-built_in">chgrp</span> group1 file1 改变文件的群组 <br><span class="hljs-built_in">chown</span> user1:group1 file1 改变一个文件的所有人和群组属性 <br>find / -perm -u+s 罗列一个系统中所有使用了SUID控制的文件 <br><span class="hljs-built_in">chmod</span> u+s /bin/file1 设置一个二进制文件的 SUID 位 - 运行该文件的用户也被赋予和所有者同样的权限 <br><span class="hljs-built_in">chmod</span> u-s /bin/file1 禁用一个二进制文件的 SUID位 <br><span class="hljs-built_in">chmod</span> g+s /home/public 设置一个目录的SGID 位 - 类似SUID ，不过这是针对目录的 <br><span class="hljs-built_in">chmod</span> g-s /home/public 禁用一个目录的 SGID 位 <br><span class="hljs-built_in">chmod</span> o+t /home/public 设置一个文件的 STIKY 位 - 只允许合法所有人删除文件 <br><span class="hljs-built_in">chmod</span> o-t /home/public 禁用一个目录的 STIKY 位 s<br></code></pre></td></tr></table></figure><h3 id="chmod使用"><a href="#chmod使用" class="headerlink" title="chmod使用"></a>chmod使用</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">chmod</span> [可选项] &lt;mode&gt; &lt;file...&gt;<br><br>可选项：<br>  -c, --changes          like verbose but report only when a change is made (若该档案权限确实已经更改，才显示其更改动作)<br>  -f, --silent, --quiet  suppress most error messages  （若该档案权限无法被更改也不要显示错误讯息）<br>  -v, --verbose          output a diagnostic <span class="hljs-keyword">for</span> every file processed（显示权限变更的详细资料）<br>       --no-preserve-root  <span class="hljs-keyword">do</span> not treat <span class="hljs-string">&#x27;/&#x27;</span> specially (the default)<br>       --preserve-root    fail to operate recursively on <span class="hljs-string">&#x27;/&#x27;</span><br>       --reference=RFILE  use RFILEs mode instead of MODE values<br>  -R, --recursive        change files and directories recursively （以递归的方式对目前目录下的所有档案与子目录进行相同的权限变更)<br>       --<span class="hljs-built_in">help</span>   显示此帮助信息<br>       --version    显示版本信息<br>mode ：权限设定字串，详细格式如下：<br>[ugoa...][[+-=][rwxX]...][,...]，其中<br>[ugoa...]<br>u 表示该档案的拥有者，g 表示与该档案的拥有者属于同一个群体(group)者，o 表示其他以外的人，a 表示所有（包含上面三者）。<br>[+-=]<br>+ 表示增加权限，- 表示取消权限，= 表示唯一设定权限。<br>[rwxX]<br>r 表示可读取，w 表示可写入，x 表示可执行，X 表示只有当该档案是个子目录或者该档案已经被设定过为可执行。<br></code></pre></td></tr></table></figure><h3 id="数字权限使用格式"><a href="#数字权限使用格式" class="headerlink" title="数字权限使用格式"></a>数字权限使用格式</h3><p>在这种使用方式中，首先我们需要了解数字如何表示权限。 首先，我们规定 数字 4 、2 和 1表示读、写、执行权限（具体原因可见下节权限详解内容），即 r&#x3D;4，w&#x3D;2，x&#x3D;1 。此时其他的权限组合也可以用其他的八进制数字表示出来，如： rwx &#x3D; 4 + 2 + 1 &#x3D; 7 rw &#x3D; 4 + 2 &#x3D; 6 rx &#x3D; 4 +1 &#x3D; 5 即</p><p>若要同时设置 rwx (可读写运行） 权限则将该权限位 设置 为 4 + 2 + 1 &#x3D; 7 若要同时设置 rw- （可读写不可运行）权限则将该权限位 设置 为 4 + 2 &#x3D; 6 若要同时设置 r-x （可读可运行不可写）权限则将该权限位 设置 为 4 +1 &#x3D; 5</p><p>上面我们提到，每个文件都可以针对三个粒度，设置不同的rwx(读写执行)权限。即我们可以用用三个8进制数字分别表示 拥有者 、群组 、其它组( u、 g 、o)的权限详情，并用chmod直接加三个8进制数字的方式直接改变文件权限。</p><h3 id="文件搜索"><a href="#文件搜索" class="headerlink" title="文件搜索"></a>文件搜索</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs bash">find / -name file1 从 <span class="hljs-string">&#x27;/&#x27;</span> 开始进入根文件系统搜索文件和目录 <br>find / -user user1 搜索属于用户 <span class="hljs-string">&#x27;user1&#x27;</span> 的文件和目录 <br>find /home/user1 -name \*.bin 在目录 <span class="hljs-string">&#x27;/ home/user1&#x27;</span> 中搜索带有<span class="hljs-string">&#x27;.bin&#x27;</span> 结尾的文件 <br>find /usr/bin -<span class="hljs-built_in">type</span> f -atime +100 搜索在过去100天内未被使用过的执行文件 <br>find /usr/bin -<span class="hljs-built_in">type</span> f -mtime -10 搜索在10天内被创建或者修改过的文件 <br>find / -name \*.rpm -<span class="hljs-built_in">exec</span> <span class="hljs-built_in">chmod</span> 755 <span class="hljs-string">&#x27;&#123;&#125;&#x27;</span> \; 搜索以 <span class="hljs-string">&#x27;.rpm&#x27;</span> 结尾的文件并定义其权限 <br>find / -xdev -name \*.rpm 搜索以 <span class="hljs-string">&#x27;.rpm&#x27;</span> 结尾的文件，忽略光驱、捷盘等可移动设备 <br>locate \*.ps 寻找以 <span class="hljs-string">&#x27;.ps&#x27;</span> 结尾的文件 - 先运行 <span class="hljs-string">&#x27;updatedb&#x27;</span> 命令 <br>whereis halt 显示一个二进制文件、源码或man的位置 <br><span class="hljs-built_in">which</span> halt 显示一个二进制文件或可执行文件的完整路径<br></code></pre></td></tr></table></figure><h3 id="文件特殊属性"><a href="#文件特殊属性" class="headerlink" title="文件特殊属性"></a>文件特殊属性</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs bash">文件的特殊属性 - 使用 <span class="hljs-string">&quot;+&quot;</span> 设置权限，使用 <span class="hljs-string">&quot;-&quot;</span> 用于取消 <br>chattr +a file1 只允许以追加方式读写文件 <br>chattr +c file1 允许这个文件能被内核自动压缩/解压 <br>chattr +d file1 在进行文件系统备份时，dump程序将忽略这个文件 <br>chattr +i file1 设置成不可变的文件，不能被删除、修改、重命名或者链接 <br>chattr +s file1 允许一个文件被安全地删除 <br>chattr +S file1 一旦应用程序对这个文件执行了写操作，使系统立刻把修改的结果写到磁盘 <br>chattr +u file1 若文件被删除，系统会允许你在以后恢复这个被删除的文件 <br>lsattr 显示特殊的属性<br></code></pre></td></tr></table></figure><h3 id="文本处理"><a href="#文本处理" class="headerlink" title="文本处理"></a>文本处理</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">cat</span> file1 file2 ... | <span class="hljs-built_in">command</span> &lt;&gt; file1_in.txt_or_file1_out.txt general syntax <span class="hljs-keyword">for</span> text manipulation using PIPE, STDIN and STDOUT <br><span class="hljs-built_in">cat</span> file1 | <span class="hljs-built_in">command</span>( sed, grep, awk, grep, etc...) &gt; result.txt 合并一个文件的详细说明文本，并将简介写入一个新文件中 <br><span class="hljs-built_in">cat</span> file1 | <span class="hljs-built_in">command</span>( sed, grep, awk, grep, etc...) &gt;&gt; result.txt 合并一个文件的详细说明文本，并将简介写入一个已有的文件中 <br>grep Aug /var/log/messages 在文件 <span class="hljs-string">&#x27;/var/log/messages&#x27;</span>中查找关键词<span class="hljs-string">&quot;Aug&quot;</span> <br>grep ^Aug /var/log/messages 在文件 <span class="hljs-string">&#x27;/var/log/messages&#x27;</span>中查找以<span class="hljs-string">&quot;Aug&quot;</span>开始的词汇 <br>grep [0-9] /var/log/messages 选择 <span class="hljs-string">&#x27;/var/log/messages&#x27;</span> 文件中所有包含数字的行 <br>grep Aug -R /var/log/* 在目录 <span class="hljs-string">&#x27;/var/log&#x27;</span> 及随后的目录中搜索字符串<span class="hljs-string">&quot;Aug&quot;</span> <br>sed <span class="hljs-string">&#x27;s/stringa1/stringa2/g&#x27;</span> example.txt 将example.txt文件中的 <span class="hljs-string">&quot;string1&quot;</span> 替换成 <span class="hljs-string">&quot;string2&quot;</span> <br>sed <span class="hljs-string">&#x27;/^$/d&#x27;</span> example.txt 从example.txt文件中删除所有空白行 <br>sed <span class="hljs-string">&#x27;/ *#/d; /^$/d&#x27;</span> example.txt 从example.txt文件中删除所有注释和空白行 <br><span class="hljs-built_in">echo</span> <span class="hljs-string">&#x27;esempio&#x27;</span> | <span class="hljs-built_in">tr</span> <span class="hljs-string">&#x27;[:lower:]&#x27;</span> <span class="hljs-string">&#x27;[:upper:]&#x27;</span> 合并上下单元格内容 <br>sed -e <span class="hljs-string">&#x27;1d&#x27;</span> result.txt 从文件example.txt 中排除第一行 <br>sed -n <span class="hljs-string">&#x27;/stringa1/p&#x27;</span> 查看只包含词汇 <span class="hljs-string">&quot;string1&quot;</span>的行 <br>sed -e <span class="hljs-string">&#x27;s/ *$//&#x27;</span> example.txt 删除每一行最后的空白字符 <br>sed -e <span class="hljs-string">&#x27;s/stringa1//g&#x27;</span> example.txt 从文档中只删除词汇 <span class="hljs-string">&quot;string1&quot;</span> 并保留剩余全部 <br>sed -n <span class="hljs-string">&#x27;1,5p;5q&#x27;</span> example.txt 查看从第一行到第5行内容 <br>sed -n <span class="hljs-string">&#x27;5p;5q&#x27;</span> example.txt 查看第5行 <br>sed -e <span class="hljs-string">&#x27;s/00*/0/g&#x27;</span> example.txt 用单个零替换多个零 <br><span class="hljs-built_in">cat</span> -n file1 标示文件的行数 <br><span class="hljs-built_in">cat</span> example.txt | awk <span class="hljs-string">&#x27;NR%2==1&#x27;</span> 删除example.txt文件中的所有偶数行 <br><span class="hljs-built_in">echo</span> a b c | awk <span class="hljs-string">&#x27;&#123;print $1&#125;&#x27;</span> 查看一行第一栏 <br><span class="hljs-built_in">echo</span> a b c | awk <span class="hljs-string">&#x27;&#123;print $1,$3&#125;&#x27;</span> 查看一行的第一和第三栏 <br><span class="hljs-built_in">paste</span> file1 file2 合并两个文件或两栏的内容 <br><span class="hljs-built_in">paste</span> -d <span class="hljs-string">&#x27;+&#x27;</span> file1 file2 合并两个文件或两栏的内容，中间用<span class="hljs-string">&quot;+&quot;</span>区分 <br><span class="hljs-built_in">sort</span> file1 file2 排序两个文件的内容 <br><span class="hljs-built_in">sort</span> file1 file2 | <span class="hljs-built_in">uniq</span> 取出两个文件的并集(重复的行只保留一份) <br><span class="hljs-built_in">sort</span> file1 file2 | <span class="hljs-built_in">uniq</span> -u 删除交集，留下其他的行 <br><span class="hljs-built_in">sort</span> file1 file2 | <span class="hljs-built_in">uniq</span> -d 取出两个文件的交集(只留下同时存在于两个文件中的文件) <br><span class="hljs-built_in">comm</span> -1 file1 file2 比较两个文件的内容只删除 <span class="hljs-string">&#x27;file1&#x27;</span> 所包含的内容 <br><span class="hljs-built_in">comm</span> -2 file1 file2 比较两个文件的内容只删除 <span class="hljs-string">&#x27;file2&#x27;</span> 所包含的内容 <br><span class="hljs-built_in">comm</span> -3 file1 file2 比较两个文件的内容只删除两个文件共有的部分<br></code></pre></td></tr></table></figure><h3 id="字符设置和文件格式转换"><a href="#字符设置和文件格式转换" class="headerlink" title="字符设置和文件格式转换"></a>字符设置和文件格式转换</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">dos2unix filedos.txt fileunix.txt 将一个文本文件的格式从MSDOS转换成UNIX <br>unix2dos fileunix.txt filedos.txt 将一个文本文件的格式从UNIX转换成MSDOS <br>recode ..HTML &lt; page.txt &gt; page.html 将一个文本文件转换成html <br>recode -l | more 显示所有允许的转换格式<br></code></pre></td></tr></table></figure><h3 id="文件系统分析"><a href="#文件系统分析" class="headerlink" title="文件系统分析"></a>文件系统分析</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs bash">badblocks -v /dev/hda1 检查磁盘hda1上的坏磁块 <br>fsck /dev/hda1 修复/检查hda1磁盘上linux文件系统的完整性 <br>fsck.ext2 /dev/hda1 修复/检查hda1磁盘上ext2文件系统的完整性 <br>e2fsck /dev/hda1 修复/检查hda1磁盘上ext2文件系统的完整性 <br>e2fsck -j /dev/hda1 修复/检查hda1磁盘上ext3文件系统的完整性 <br>fsck.ext3 /dev/hda1 修复/检查hda1磁盘上ext3文件系统的完整性 <br>fsck.vfat /dev/hda1 修复/检查hda1磁盘上fat文件系统的完整性 <br>fsck.msdos /dev/hda1 修复/检查hda1磁盘上dos文件系统的完整性 <br>dosfsck /dev/hda1 修复/检查hda1磁盘上dos文件系统的完整性<br></code></pre></td></tr></table></figure><h3 id="挂载一个文件系统"><a href="#挂载一个文件系统" class="headerlink" title="挂载一个文件系统"></a>挂载一个文件系统</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs bash">mount /dev/hda2 /mnt/hda2 挂载一个叫做hda2的盘 - 确定目录 <span class="hljs-string">&#x27;/ mnt/hda2&#x27;</span> 已经存在 <br>umount /dev/hda2 卸载一个叫做hda2的盘 - 先从挂载点 <span class="hljs-string">&#x27;/ mnt/hda2&#x27;</span> 退出 <br>fuser -km /mnt/hda2 当设备繁忙时强制卸载 <br>umount -n /mnt/hda2 运行卸载操作而不写入 /etc/mtab 文件- 当文件为只读或当磁盘写满时非常有用 <br>mount /dev/fd0 /mnt/floppy 挂载一个软盘 <br>mount /dev/cdrom /mnt/cdrom 挂载一个cdrom或dvdrom <br>mount /dev/hdc /mnt/cdrecorder 挂载一个cdrw或dvdrom <br>mount /dev/hdb /mnt/cdrecorder 挂载一个cdrw或dvdrom <br>mount -o loop file.iso /mnt/cdrom 挂载一个文件或ISO镜像文件 <br>mount -t vfat /dev/hda5 /mnt/hda5 挂载一个Windows FAT32文件系统 <br>mount /dev/sda1 /mnt/usbdisk 挂载一个usb 捷盘或闪存设备 <br>mount -t smbfs -o username=user,password=pass //WinClient/share /mnt/share 挂载一个windows网络共享<br></code></pre></td></tr></table></figure><h3 id="初始化一个文件系统"><a href="#初始化一个文件系统" class="headerlink" title="初始化一个文件系统"></a>初始化一个文件系统</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs bash">mkfs /dev/hda1 在hda1分区创建一个文件系统 <br>mke2fs /dev/hda1 在hda1分区创建一个linux ext2的文件系统 <br>mke2fs -j /dev/hda1 在hda1分区创建一个linux ext3(日志型)的文件系统 <br>mkfs -t vfat 32 -F /dev/hda1 创建一个 FAT32 文件系统 <br>fdformat -n /dev/fd0 格式化一个软盘 <br>mkswap /dev/hda3 创建一个swap文件系统<br></code></pre></td></tr></table></figure><h3 id="SWAP文件系统"><a href="#SWAP文件系统" class="headerlink" title="SWAP文件系统"></a>SWAP文件系统</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">mkswap /dev/hda3 创建一个swap文件系统 <br>swapon /dev/hda3 启用一个新的swap文件系统 <br>swapon /dev/hda2 /dev/hdb3 启用两个swap分区<br></code></pre></td></tr></table></figure><h3 id="备份"><a href="#备份" class="headerlink" title="备份"></a>备份</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs bash">dump -0aj -f /tmp/home0.bak /home 制作一个 <span class="hljs-string">&#x27;/home&#x27;</span> 目录的完整备份 <br>dump -1aj -f /tmp/home0.bak /home 制作一个 <span class="hljs-string">&#x27;/home&#x27;</span> 目录的交互式备份 <br>restore -<span class="hljs-keyword">if</span> /tmp/home0.bak 还原一个交互式备份 <br>rsync -rogpav --delete /home /tmp 同步两边的目录 <br>rsync -rogpav -e ssh --delete /home ip_address:/tmp 通过SSH通道rsync <br>rsync -az -e ssh --delete ip_addr:/home/public /home/local 通过ssh和压缩将一个远程目录同步到本地目录 <br>rsync -az -e ssh --delete /home/local ip_addr:/home/public 通过ssh和压缩将本地目录同步到远程目录 <br><span class="hljs-built_in">dd</span> bs=1M <span class="hljs-keyword">if</span>=/dev/hda | gzip | ssh user@ip_addr <span class="hljs-string">&#x27;dd of=hda.gz&#x27;</span> 通过ssh在远程主机上执行一次备份本地磁盘的操作 <br><span class="hljs-built_in">dd</span> <span class="hljs-keyword">if</span>=/dev/sda of=/tmp/file1 备份磁盘内容到一个文件 <br>tar -Puf backup.tar /home/user 执行一次对 <span class="hljs-string">&#x27;/home/user&#x27;</span> 目录的交互式备份操作 <br>( <span class="hljs-built_in">cd</span> /tmp/local/ &amp;&amp; tar c . ) | ssh -C user@ip_addr <span class="hljs-string">&#x27;cd /home/share/ &amp;&amp; tar x -p&#x27;</span> 通过ssh在远程目录中复制一个目录内容 <br>( tar c /home ) | ssh -C user@ip_addr <span class="hljs-string">&#x27;cd /home/backup-home &amp;&amp; tar x -p&#x27;</span> 通过ssh在远程目录中复制一个本地目录 <br>tar cf - . | (<span class="hljs-built_in">cd</span> /tmp/backup ; tar xf - ) 本地将一个目录复制到另一个地方，保留原有权限及链接 <br>find /home/user1 -name <span class="hljs-string">&#x27;*.txt&#x27;</span> | xargs <span class="hljs-built_in">cp</span> -av --target-directory=/home/backup/ --parents 从一个目录查找并复制所有以 <span class="hljs-string">&#x27;.txt&#x27;</span> 结尾的文件到另一个目录 <br>find /var/log -name <span class="hljs-string">&#x27;*.log&#x27;</span> | tar cv --files-from=- | bzip2 &gt; log.tar.bz2 查找所有以 <span class="hljs-string">&#x27;.log&#x27;</span> 结尾的文件并做成一个bzip包 <br><span class="hljs-built_in">dd</span> <span class="hljs-keyword">if</span>=/dev/hda of=/dev/fd0 bs=512 count=1 做一个将 MBR (Master Boot Record)内容复制到软盘的动作 <br><span class="hljs-built_in">dd</span> <span class="hljs-keyword">if</span>=/dev/fd0 of=/dev/hda bs=512 count=1 从已经保存到软盘的备份中恢复MBR内容<br></code></pre></td></tr></table></figure><h2 id="系统操作"><a href="#系统操作" class="headerlink" title="系统操作"></a>系统操作</h2><h3 id="系统信息"><a href="#系统信息" class="headerlink" title="系统信息"></a>系统信息</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">arch</span> 显示机器的处理器架构<br><span class="hljs-built_in">uname</span> -m 显示机器的处理器架构<br><span class="hljs-built_in">uname</span> -r 显示正在使用的内核版本 <br>dmidecode -q 显示硬件系统部件 - (SMBIOS / DMI) <br>hdparm -i /dev/hda 罗列一个磁盘的架构特性 <br>hdparm -tT /dev/sda 在磁盘上执行测试性读取操作 <br><span class="hljs-built_in">cat</span> /proc/cpuinfo 显示CPU info的信息 <br><span class="hljs-built_in">cat</span> /proc/interrupts 显示中断 <br><span class="hljs-built_in">cat</span> /proc/meminfo 校验内存使用 <br><span class="hljs-built_in">cat</span> /proc/swaps 显示哪些swap被使用 <br><span class="hljs-built_in">cat</span> /proc/version 显示内核的版本 <br><span class="hljs-built_in">cat</span> /proc/net/dev 显示网络适配器及统计 <br><span class="hljs-built_in">cat</span> /proc/mounts 显示已加载的文件系统 <br>lspci -tv 罗列 PCI 设备 <br>lsusb -tv 显示 USB 设备 <br><span class="hljs-built_in">date</span> 显示系统日期 <br>cal 2007 显示2007年的日历表 <br><span class="hljs-built_in">date</span> 041217002007.00 设置日期和时间 - 月日时分年.秒 <br>clock -w 将时间修改保存到 BIOS<br></code></pre></td></tr></table></figure><h3 id="用户和群组"><a href="#用户和群组" class="headerlink" title="用户和群组"></a>用户和群组</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs bash">groupadd group_name 创建一个新用户组 <br>groupdel group_name 删除一个用户组 <br>groupmod -n new_group_name old_group_name 重命名一个用户组 <br>useradd -c <span class="hljs-string">&quot;Name Surname &quot;</span> -g admin -d /home/user1 -s /bin/bash user1 创建一个属于 <span class="hljs-string">&quot;admin&quot;</span> 用户组的用户 <br>useradd user1 创建一个新用户 <br>userdel -r user1 删除一个用户 ( <span class="hljs-string">&#x27;-r&#x27;</span> 排除主目录) <br>usermod -c <span class="hljs-string">&quot;User FTP&quot;</span> -g system -d /ftp/user1 -s /bin/nologin user1 修改用户属性 <br>passwd 修改口令 <br>passwd user1 修改一个用户的口令 (只允许root执行) <br>chage -E 2005-12-31 user1 设置用户口令的失效期限 <br>pwck 检查 <span class="hljs-string">&#x27;/etc/passwd&#x27;</span> 的文件格式和语法修正以及存在的用户 <br>grpck 检查 <span class="hljs-string">&#x27;/etc/passwd&#x27;</span> 的文件格式和语法修正以及存在的群组 <br>newgrp group_name 登陆进一个新的群组以改变新创建文件的预设群组<br></code></pre></td></tr></table></figure><h3 id="磁盘空间"><a href="#磁盘空间" class="headerlink" title="磁盘空间"></a>磁盘空间</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs bash">磁盘空间 <br><span class="hljs-built_in">df</span> -h 显示已经挂载的分区列表 <br><span class="hljs-built_in">ls</span> -lSr |more 以尺寸大小排列文件和目录 <br><span class="hljs-built_in">du</span> -sh dir1 估算目录 <span class="hljs-string">&#x27;dir1&#x27;</span> 已经使用的磁盘空间<span class="hljs-string">&#x27; </span><br><span class="hljs-string">du -sk * | sort -rn 以容量大小为依据依次显示文件和目录的大小 </span><br><span class="hljs-string">rpm -q -a --qf &#x27;</span>%10&#123;SIZE&#125;t%&#123;NAME&#125;n<span class="hljs-string">&#x27; | sort -k1,1n 以大小为依据依次显示已安装的rpm包所使用的空间 (fedora, redhat类系统) </span><br><span class="hljs-string">dpkg-query -W -f=&#x27;</span><span class="hljs-variable">$&#123;Installed-Size;10&#125;</span>t<span class="hljs-variable">$&#123;Package&#125;</span>n<span class="hljs-string">&#x27; | sort -k1,1n 以大小为依据显示已安装的deb包所使用的空间 (ubuntu, debian类系统)</span><br></code></pre></td></tr></table></figure><h3 id="关机、重启、登出"><a href="#关机、重启、登出" class="headerlink" title="关机、重启、登出"></a>关机、重启、登出</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs bash">shutdown -h now 关闭系统<br>init 0 关闭系统<br>telinit 0 关闭系统<br>shutdown -h hours:minutes &amp; 按预定时间关闭系统 <br>shutdown -c 取消按预定时间关闭系统 <br>shutdown -r now 重启<br>reboot 重启<br><span class="hljs-built_in">logout</span> 注销<br></code></pre></td></tr></table></figure><h3 id="yum-软件包"><a href="#yum-软件包" class="headerlink" title="yum 软件包"></a>yum 软件包</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs bash">YUM 软件包升级器 - （Fedora, RedHat及类似系统） <br>yum install package_name 下载并安装一个rpm包 <br>yum localinstall package_name.rpm 将安装一个rpm包，使用你自己的软件仓库为你解决所有依赖关系 <br>yum update package_name.rpm 更新当前系统中所有安装的rpm包 <br>yum update package_name 更新一个rpm包 <br>yum remove package_name 删除一个rpm包 <br>yum list 列出当前系统中安装的所有包 <br>yum search package_name 在rpm仓库中搜寻软件包 <br>yum clean packages 清理rpm缓存删除下载的包 <br>yum clean headers 删除所有头文件 <br>yum clean all 删除所有缓存的包和头文件<br></code></pre></td></tr></table></figure><h3 id="DEB包-dpkg"><a href="#DEB包-dpkg" class="headerlink" title="DEB包 dpkg"></a>DEB包 dpkg</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs bash">DEB 包 (Debian, Ubuntu 以及类似系统) <br>dpkg -i package.deb 安装/更新一个 deb 包 <br>dpkg -r package_name 从系统删除一个 deb 包 <br>dpkg -l 显示系统中所有已经安装的 deb 包 <br>dpkg -l | grep httpd 显示所有名称中包含 <span class="hljs-string">&quot;httpd&quot;</span> 字样的deb包 <br>dpkg -s package_name 获得已经安装在系统中一个特殊包的信息 <br>dpkg -L package_name 显示系统中已经安装的一个deb包所提供的文件列表 <br>dpkg --contents package.deb 显示尚未安装的一个包所提供的文件列表 <br>dpkg -S /bin/ping 确认所给的文件由哪个deb包提供<br></code></pre></td></tr></table></figure><h3 id="apt软件包"><a href="#apt软件包" class="headerlink" title="apt软件包"></a>apt软件包</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs bash">APT 软件工具 (Debian, Ubuntu 以及类似系统) <br>apt-get install package_name 安装/更新一个 deb 包 <br>apt-cdrom install package_name 从光盘安装/更新一个 deb 包 <br>apt-get update 升级列表中的软件包 <br>apt-get upgrade 升级所有已安装的软件 <br>apt-get remove package_name 从系统删除一个deb包 <br>apt-get check 确认依赖的软件仓库正确 <br>apt-get clean 从下载的软件包中清理缓存 <br>apt-cache search searched-package 返回包含所要搜索字符串的软件包名称<br></code></pre></td></tr></table></figure><h2 id="系统进程"><a href="#系统进程" class="headerlink" title="系统进程"></a>系统进程</h2><h3 id="linux查看端口占用"><a href="#linux查看端口占用" class="headerlink" title="linux查看端口占用"></a>linux查看端口占用</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 查看端口进程</span><br>netstat -tunlp | grep 端口号<br><span class="hljs-comment"># 查看端口占用</span><br>lsof -i:端口号<br><span class="hljs-comment"># 查看TCP的listen的端口</span><br>ss -tln <br><span class="hljs-comment"># 查看哪些进程使用了监听端口</span><br>ss -tlnp<br></code></pre></td></tr></table></figure><h3 id="ps命令-1"><a href="#ps命令-1" class="headerlink" title="ps命令"></a>ps命令</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs bash">ps命令常用用法（方便查看系统进程）<br><br>ps a 显示现行终端机下的所有程序，包括其他用户的程序。<br>ps -A 显示所有进程。<br>ps c 列出程序时，显示每个程序真正的指令名称，而不包含路径，参数或常驻服务的标示。<br>ps -e 此参数的效果和指定<span class="hljs-string">&quot;A&quot;</span>参数相同。<br>ps e 列出程序时，显示每个程序所使用的环境变量。<br>ps f 用ASCII字符显示树状结构，表达程序间的相互关系。<br>ps -H 显示树状结构，表示程序间的相互关系。<br>ps -N 显示所有的程序，除了执行ps指令终端机下的程序之外。<br>ps s 采用程序信号的格式显示程序状况。<br>ps S 列出程序时，包括已中断的子程序资料。<br>ps -t&lt;终端机编号&gt; 　指定终端机编号，并列出属于该终端机的程序的状况。<br>ps u 　以用户为主的格式来显示程序状况。<br>ps x 　显示所有程序，不以终端机来区分。<br></code></pre></td></tr></table></figure><p>常用指令组合 ：ps aux,然后再通过管道使用grep命令过滤查找特定的进程,然后再对特定的进程进行操作。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">ps aux | grep program_filter_word,ps -ef |grep tomcat<br>ps -ef|grep java|grep -v grep 显示出所有的java进程，去处掉当前的grep进程。<br></code></pre></td></tr></table></figure><h2 id="网络"><a href="#网络" class="headerlink" title="网络"></a>网络</h2><h3 id="ifconfig命令"><a href="#ifconfig命令" class="headerlink" title="ifconfig命令"></a>ifconfig命令</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">#作用：</span><br>ifconfig命令用于显示或设置网络设备。<br><span class="hljs-comment">#说明： </span><br>与windows下的ipconfig命令类似,linux下使用ifconfig命令查看<br><span class="hljs-comment">#格式</span><br>ifconfig [网络设备][down up -allmulti -arp -promisc][add&lt;地址&gt;][del&lt;地址&gt;][&lt;hw&lt;网络设备类型&gt;&lt;硬件地址&gt;][io_addr&lt;I/O地址&gt;][irq&lt;IRQ地址&gt;][media&lt;网络媒介类型&gt;][mem_start&lt;内存地址&gt;][metric&lt;数目&gt;][mtu&lt;字节&gt;][netmask&lt;子网掩码&gt;][tunnel&lt;地址&gt;][-broadcast&lt;地址&gt;][-pointopoint&lt;地址&gt;][IP地址]<br><br><span class="hljs-comment">#参数</span><br>add&lt;地址&gt; 设置网络设备IPv6的IP地址。<br>del&lt;地址&gt; 删除网络设备IPv6的IP地址。<br>down 关闭指定的网络设备。<br>&lt;hw&lt;网络设备类型&gt;&lt;硬件地址&gt; 设置网络设备的类型与硬件地址。<br>io_addr&lt;I/O地址&gt; 设置网络设备的I/O地址。<br>irq&lt;IRQ地址&gt; 设置网络设备的IRQ。<br>media&lt;网络媒介类型&gt; 设置网络设备的媒介类型。<br>mem_start&lt;内存地址&gt; 设置网络设备在主内存所占用的起始地址。<br>metric&lt;数目&gt; 指定在计算数据包的转送次数时，所要加上的数目。<br>mtu&lt;字节&gt; 设置网络设备的MTU。<br>netmask&lt;子网掩码&gt; 设置网络设备的子网掩码。<br>tunnel&lt;地址&gt; 建立IPv4与IPv6之间的隧道通信地址。<br>up 启动指定的网络设备。<br>-broadcast&lt;地址&gt; 将要送往指定地址的数据包当成广播数据包来处理。<br>-pointopoint&lt;地址&gt; 与指定地址的网络设备建立直接连线，此模式具有保密功能。<br>-promisc 关闭或启动指定网络设备的promiscuous模式。<br>[IP地址] 指定网络设备的IP地址。<br>[网络设备] 指定网络设备的名称。<br><br><span class="hljs-comment">#实例</span><br>显示网络设备信息<br><br><span class="hljs-comment"># ifconfig        </span><br>eth0   Link encap:Ethernet HWaddr 00:50:56:0A:0B:0C <br>     inet addr:192.168.0.3 Bcast:192.168.0.255 Mask:255.255.255.0<br>     inet6 addr: fe80::250:56ff:fe0a:b0c/64 Scope:Link<br>     UP BROADCAST RUNNING MULTICAST MTU:1500 Metric:1<br>     RX packets:172220 errors:0 dropped:0 overruns:0 frame:0<br>     TX packets:132379 errors:0 dropped:0 overruns:0 carrier:0<br>     collisions:0 txqueuelen:1000 <br>     RX bytes:87101880 (83.0 MiB) TX bytes:41576123 (39.6 MiB)<br>     Interrupt:185 Base address:0x2024 <br><br>lo    Link encap:Local Loopback <br>     inet addr:127.0.0.1 Mask:255.0.0.0<br>     inet6 addr: ::1/128 Scope:Host<br>     UP LOOPBACK RUNNING MTU:16436 Metric:1<br>     RX packets:2022 errors:0 dropped:0 overruns:0 frame:0<br>     TX packets:2022 errors:0 dropped:0 overruns:0 carrier:0<br>     collisions:0 txqueuelen:0 <br>     RX bytes:2459063 (2.3 MiB) TX bytes:2459063 (2.3 MiB)<br>启动关闭指定网卡<br><br><span class="hljs-comment"># ifconfig eth0 down</span><br><span class="hljs-comment"># ifconfig eth0 up</span><br>为网卡配置和删除IPv6地址<br><br><span class="hljs-comment"># ifconfig eth0 add 33ffe:3240:800:1005::2/ 64 //为网卡诶之IPv6地址</span><br><br><span class="hljs-comment"># ifconfig eth0 del 33ffe:3240:800:1005::2/ 64 //为网卡删除IPv6地址</span><br>用ifconfig修改MAC地址<br><br><span class="hljs-comment"># ifconfig eth0 down //关闭网卡</span><br><span class="hljs-comment"># ifconfig eth0 hw ether 00:AA:BB:CC:DD:EE //修改MAC地址</span><br><span class="hljs-comment"># ifconfig eth0 up //启动网卡</span><br><span class="hljs-comment"># ifconfig eth1 hw ether 00:1D:1C:1D:1E //关闭网卡并修改MAC地址 </span><br><span class="hljs-comment"># ifconfig eth1 up //启动网卡</span><br>配置IP地址<br><br><span class="hljs-comment"># ifconfig eth0 192.168.1.56 </span><br>//给eth0网卡配置IP地址<br><span class="hljs-comment"># ifconfig eth0 192.168.1.56 netmask 255.255.255.0 </span><br>// 给eth0网卡配置IP地址,并加上子掩码<br><span class="hljs-comment"># ifconfig eth0 192.168.1.56 netmask 255.255.255.0 broadcast 192.168.1.255</span><br>// 给eth0网卡配置IP地址,加上子掩码,加上个广播地址<br>启用和关闭ARP协议<br><br><span class="hljs-comment"># ifconfig eth0 arp  //开启</span><br><span class="hljs-comment"># ifconfig eth0 -arp  //关闭</span><br>设置最大传输单元<br><br><span class="hljs-comment"># ifconfig eth0 mtu 1500 </span><br>//设置能通过的最大数据包大小为 1500 bytes<br></code></pre></td></tr></table></figure><h3 id="ping命令"><a href="#ping命令" class="headerlink" title="ping命令"></a>ping命令</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">#作用</span><br>用于检测主机。若远端主机的网络功能没有问题，就会回应该信息，因而得知该主机运作正常。<br><span class="hljs-comment">#格式</span><br>ping [-dfnqrRv][-c&lt;完成次数&gt;][-i&lt;间隔秒数&gt;][-I&lt;网络界面&gt;][-l&lt;前置载入&gt;][-p&lt;范本样式&gt;][-s&lt;数据包大小&gt;][-t&lt;存活数值&gt;][主机名称或IP地址]<br><span class="hljs-comment">#参数</span><br>-d 使用Socket的SO_DEBUG功能。<br>-c&lt;完成次数&gt; 设置完成要求回应的次数。<br>-f 极限检测。<br>-i&lt;间隔秒数&gt; 指定收发信息的间隔时间。<br>-I&lt;网络界面&gt; 使用指定的网络界面送出数据包。<br>-l&lt;前置载入&gt; 设置在送出要求信息之前，先行发出的数据包。<br>-n 只输出数值。<br>-p&lt;范本样式&gt; 设置填满数据包的范本样式。<br>-q 不显示指令执行过程，开头和结尾的相关信息除外。<br>-r 忽略普通的Routing Table，直接将数据包送到远端主机上。<br>-R 记录路由过程。<br>-s&lt;数据包大小&gt; 设置数据包的大小。<br>-t&lt;存活数值&gt; 设置存活数值TTL的大小。<br>-v 详细显示指令的执行过程。<br><span class="hljs-comment">#实例</span><br>检测是否与主机连通<br>ping www.baidu.com<br>//需要终止按ctrl +c<br>指定接收包的次数<br>ping -c 2 www.baidu.com<br>//收到两次包后，自动退出<br></code></pre></td></tr></table></figure><h3 id="nslookup命令"><a href="#nslookup命令" class="headerlink" title="nslookup命令"></a>nslookup命令</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">#作用：</span><br>查看dns信息用的，linux系统不自带，需要手动安装<br>如果你的Linux系统没有nslookup命令，那么八成是你没有安装bind-utils包。<br>直接yum install bind-utils就可以解决问题了。<br><br><span class="hljs-comment">#格式：</span><br>        进入非交互模式       nslookup 域名（www.baidu.com）<br>非交互模式nslookup会连接到默认的域名服务器<br>（即/etc/resolv.conf的第一个dns地<span class="hljs-comment">#址）。</span><br>        进入交互模式         nslookup<br><br><span class="hljs-comment">#交互模式常用命令：</span><br><span class="hljs-built_in">exit</span>        退出交互模式<br><span class="hljs-built_in">set</span> all 列出nslookup工具常用选项设置值<br><br><span class="hljs-comment">#返回值说明</span><br>返回值一共分为两部分，第一部分是本机的DNS信息，包括服务器和地址<br><br>第二部分非权威应答对应的英文是：Non-authoritative answer。什么叫非权威应答？假设某个DNS server没有域名test.com的记录信息，当有客户端通过它请求获取test.com的域名信息，此DNS Server会通过迭代递归的方式从<span class="hljs-built_in">test</span>公司实际存储此记录信息的DNS server中获取test.com的域名信息，反馈给发出请求的客户端，同时会把test.com的记录信息放在自身缓存中放置一段时间，当又有客户端请求test.com域名解析时，此DNS server直接从自身缓存中提取返回给客户端，这个回答叫“非权威回答”，简言之凡是从非实际记录存储DNS server中获取的域名解析回答，都叫“非权威回答”。<br><br>[root@localhost ~]<span class="hljs-comment"># nslookup www.baidu.com</span><br>Server:     114.114.114.114<br>Address:    114.114.114.114<span class="hljs-comment">#53</span><br><br>Non-authoritative answer:<br>www.baidu.com   canonical name = www.a.shifen.com.<br>Name:   www.a.shifen.com<br>Address: 61.135.169.121<br>Name:   www.a.shifen.com<br>Address: 61.135.169.125<br><br><span class="hljs-comment">#www.a.shifen.com.指代www.baidu.com对应的dns主机名记录</span><br></code></pre></td></tr></table></figure><h3 id="traceroute"><a href="#traceroute" class="headerlink" title="traceroute"></a>traceroute</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">#作用：</span><br>显示数据包到主机间的路径。<br>对应window下的tracert命令<br><br><span class="hljs-comment">#格式： </span><br>Traceroute [options] &lt;IP-address or domain-name&gt; [data size]<br><br><span class="hljs-comment">#参数</span><br>  -d   使用Socket层级的排错功能。<br>  -f&lt;存活数值&gt;   设置第一个检测数据包的存活数值TTL的大小。<br>  -F   设置勿离断位。<br>  -g&lt;网关&gt;   设置来源路由网关，最多可设置8个。<br>  -i&lt;网络界面&gt;   使用指定的网络界面送出数据包。<br>  -I   使用ICMP回应取代UDP资料信息。<br>  -m&lt;存活数值&gt;   设置检测数据包的最大存活数值TTL的大小。<br>  -n   直接使用IP地址而非主机名称。<br>  -p&lt;通信端口&gt;   设置UDP传输协议的通信端口。(缺省为33434)<br><br>  -q  设置TTL测试数目(缺省为3)<br>  -r   忽略普通的Routing Table，直接将数据包送到远端主机上。<br>  -s&lt;来源地址&gt;   设置本地主机送出数据包的IP地址。<br>  -t&lt;服务类型&gt;   设置检测数据包的TOS数值。<br>  -v   详细显示指令的执行过程。<br>  -w&lt;超时秒数&gt;   设置等待远端主机回报的时间。<br>  -x   开启或关闭数据包的正确性检验。  <br>[data size]:每次测试包的数据字节长度(缺省为38)<br><span class="hljs-comment">#返回值说明</span><br>显示到达目的地的数据包路由<br>[root@localhost ~]<span class="hljs-comment"># traceroute www.baidu.com</span><br>traceroute to www.baidu.com (61.135.169.125), 30 hops max, 60 byte packets<br> 1  10.20.35.254 (10.20.35.254)  0.626 ms  1.205 ms  1.476 ms<br> 2  10.20.0.1 (10.20.0.1)  0.365 ms  0.453 ms  0.463 ms<br> 3  124.160.189.213 (124.160.189.213)  2.377 ms  2.226 ms  2.250 ms<br> 4  124.160.188.101 (124.160.188.101)  2.253 ms 124.160.188.105 (124.160.188.105)  2.396 ms  2.518 ms<br> 5  124.160.189.89 (124.160.189.89)  8.592 ms 124.160.189.97 (124.160.189.97)  11.756 ms 124.160.189.105 (124.160.189.105)  7.020 ms<br> 6  219.158.96.133 (219.158.96.133)  28.295 ms  27.595 ms 219.158.96.129 (219.158.96.129)  27.675 ms<br> 7  202.96.12.114 (202.96.12.114)  29.006 ms  28.724 ms 124.65.194.154 (124.65.194.154)  30.519 ms<br> 8  61.148.155.50 (61.148.155.50)  31.042 ms 124.65.58.198 (124.65.58.198)  28.132 ms 124.65.58.54 (124.65.58.54)  27.523 ms<br> 9  202.106.48.18 (202.106.48.18)  27.811 ms 123.125.248.102 (123.125.248.102)  26.961 ms 123.125.248.46 (123.125.248.46)  50.428 ms<br></code></pre></td></tr></table></figure><h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><h3 id="打包和压缩文件"><a href="#打包和压缩文件" class="headerlink" title="打包和压缩文件"></a>打包和压缩文件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs bash">bunzip2 file1.bz2 解压一个叫做 <span class="hljs-string">&#x27;file1.bz2&#x27;</span>的文件 <br>bzip2 file1 压缩一个叫做 <span class="hljs-string">&#x27;file1&#x27;</span> 的文件 <br>gunzip file1.gz 解压一个叫做 <span class="hljs-string">&#x27;file1.gz&#x27;</span>的文件 <br>gzip file1 压缩一个叫做 <span class="hljs-string">&#x27;file1&#x27;</span>的文件 <br>gzip -9 file1 最大程度压缩 <br>rar a file1.rar test_file 创建一个叫做 <span class="hljs-string">&#x27;file1.rar&#x27;</span> 的包 <br>rar a file1.rar file1 file2 dir1 同时压缩 <span class="hljs-string">&#x27;file1&#x27;</span>, <span class="hljs-string">&#x27;file2&#x27;</span> 以及目录 <span class="hljs-string">&#x27;dir1&#x27;</span> <br>rar x file1.rar 解压rar包 <br>unrar x file1.rar 解压rar包 <br>tar -cvf archive.tar file1 创建一个非压缩的 tarball <br>tar -cvf archive.tar file1 file2 dir1 创建一个包含了 <span class="hljs-string">&#x27;file1&#x27;</span>, <span class="hljs-string">&#x27;file2&#x27;</span> 以及 <span class="hljs-string">&#x27;dir1&#x27;</span>的档案文件 <br>tar -tf archive.tar 显示一个包中的内容 <br>tar -xvf archive.tar 释放一个包 <br>tar -xvf archive.tar -C /tmp 将压缩包释放到 /tmp目录下 <br>tar -cvfj archive.tar.bz2 dir1 创建一个bzip2格式的压缩包 <br>tar -jxvf archive.tar.bz2 解压一个bzip2格式的压缩包 <br>tar -cvfz archive.tar.gz dir1 创建一个gzip格式的压缩包 <br>tar -zxvf archive.tar.gz 解压一个gzip格式的压缩包 <br>zip file1.zip file1 创建一个zip格式的压缩包 <br>zip -r file1.zip file1 file2 dir1 将几个文件和目录同时压缩成一个zip格式的压缩包 <br>unzip file1.zip 解压一个zip格式压缩包<br></code></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 编程 </category>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 摘抄 </tag>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>N5105软路由——ESXI+iKuai+OpenWrt+黑群晖搭建</title>
      <link href="/2022/09/08/N5105%E8%BD%AF%E8%B7%AF%E7%94%B1%E2%80%94%E2%80%94ESXI-iKuai-OpenWrt-%E9%BB%91%E7%BE%A4%E6%99%96%E6%90%AD%E5%BB%BA/"/>
      <url>/2022/09/08/N5105%E8%BD%AF%E8%B7%AF%E7%94%B1%E2%80%94%E2%80%94ESXI-iKuai-OpenWrt-%E9%BB%91%E7%BE%A4%E6%99%96%E6%90%AD%E5%BB%BA/</url>
      
        <content type="html"><![CDATA[<p>发发发最近刚刚接触软路由，记录一下All in One的思路。我的方案其实已经算目前圈子里较为成熟的选择，主要是跟着其他博客大佬，看他们设计自己All in One主机的过程、思路，选择一套属于自己需求和未来需求的主机。整个过程中，思考和思路的借鉴似乎可以值得记录，毕竟这属于DIY圈，不同人需求差异还是较大的。</p><h2 id="总述"><a href="#总述" class="headerlink" title="总述"></a>总述</h2><p>All in One主机一般来说是一个虚拟机底层系统，集成众多针对特定需求建立的子系统，形成的一整套个人服务器。</p><p>然而，由于虚拟机硬件转化率低，同时集成度高的耦合系统很容易出现，All in One， All in Boom的现象，All in One方案始终被诟病。很多人更倾向于将软路由只作为拨号与插件使用，通过购买NAS、独立服务器实现其他功能。</p><p>随着x86软路由性能逐渐提高，从J1900到J4125和N5015，软路由只装个Openwrt性能远远过剩。同时显卡直通、内网穿透等手段让All in One方案对垃圾佬来说具有很大吸引力。</p><h2 id="底层架构"><a href="#底层架构" class="headerlink" title="底层架构"></a>底层架构</h2><p>一个底层虚拟机系统，其稳定性、可维护性、容错性、硬件性能转化率，很大程度上决定了All in One主机的使用体验。具体而言，有以下四种方案：</p><p>1·安装Windows，使用Hyper-v虚拟机安装其他系统</p><p>2·安装Ubuntu&#x2F;Debian等Linux内核系统，在Liunx环境下使用Docker或安装虚拟机运行其他系统。</p><p>3、安装支持Docker的系统平台（unRAID、群晖&#x2F;威联通Nas系统、Liunx），通过Docker完成虚拟机部署。</p><p>4、安装底层虚拟机（ESXI&#x2F;PVE&#x2F;unRAID），其他系统全部运行在底层虚拟机上。</p><h3 id="Windows-Hyper-（Windows-虚拟机）"><a href="#Windows-Hyper-（Windows-虚拟机）" class="headerlink" title="Windows+Hyper （Windows+虚拟机）"></a>Windows+Hyper （Windows+虚拟机）</h3><p>这种方案最大优势是熟悉和便利。最突出的缺陷是性能转化率太低。机制使然，Windows系统下虚拟机的性能转化率相对(太)低。且Windows系统本身就会占用了（很大）部分的硬件资源。抑制了虚拟机对硬件性能的利用。</p><p>同时，其性能转换率、运行稳定性都不尽人意。显然，这不是虚拟机的可靠环境，更不是组All in One主机的理想选择。但Hyper几乎Windows原生。通常安装了Windows的计算机在现有条件下、无需安装其他软件即可着手虚拟机的部署。另一方面，以Windows的普及率和保有量，在安装、交互操作等方面几乎没有学习成本。这样的属性也让Windows+Hyper成为很多初学者最先上手的方案。所以这种方案通常用于一些简单测试、功能调试等临时任务。以及学习部署虚拟机、了解虚拟机的运行机制。</p><h3 id="Linux系统（Ubuntu-x2F-Debian等）上安装虚拟机环境。"><a href="#Linux系统（Ubuntu-x2F-Debian等）上安装虚拟机环境。" class="headerlink" title="Linux系统（Ubuntu&#x2F;Debian等）上安装虚拟机环境。"></a>Linux系统（Ubuntu&#x2F;Debian等）上安装虚拟机环境。</h3><p>这个方案的优点是在硬件性能转化率上相对Windows要好很多，甚至很多虚拟机的内核本身就是基于Liunx系统开发。在兼容性、可维护性上，Liunx平台对虚拟机也更加友好。尤其在某些调试上，Liunx作为根系统有不可替代的优势。最具代表性的就是Liunx作为根系统，直接为Docker提供了环境。</p><p>但其缺点是虚拟机直接部署在Linux系统上需要对Linux交互有一定基础，这导致其大概率不会是一个首选方案，而是一个可学习、调试和实践的方案。</p><h3 id="3、Nas-x2F-liunx-Docker"><a href="#3、Nas-x2F-liunx-Docker" class="headerlink" title="3、Nas&#x2F;liunx+Docker"></a>3、Nas&#x2F;liunx+Docker</h3><p>这种方案的最大优势是Docker容器轻量化、高效率、扩展性强的天然优势。开源平台从不缺少方方面面的扩展，具象需求几乎都能找到对应趁手的工具。且Docker机制决定了其在部署的便利性上有着其他系统(方案)不可比拟的优越性。</p><p>对于已经有成品NAS，通过NAS+Docker的方案，让现有NAS具备更多功能，即在已经成型的Linux环境下进行拓展和加强，实现个人需求。Nas性能一般运行一个Op也足足够用。</p><p>然而，其缺点是成品NAS价格昂贵，同时其性能也具有一定瓶颈。同时，NAS+Docker实现底层系统的核心在Docker，而Docker依然具有一定局限性，如不支持32位，不完全虚拟、隔离不彻底等。</p><p>所以其实可以直接将NAS作为一个子系统而不是根系统，让Docker存在于虚拟机中的虚拟机，这样不失Docker功能及实现上的便利，又不拘泥于Docker而封堵其他系统并存的实现。当硬件配置足够(至少强过成品Nas整机)时，不舍弃Docker，但不围绕、局限于Docker，才可以为更加宽旷的可能性提供更包容的扩展环境。</p><h3 id="4、直接安装底层虚拟机"><a href="#4、直接安装底层虚拟机" class="headerlink" title="4、直接安装底层虚拟机"></a>4、直接安装底层虚拟机</h3><p>这个目前是目前All in One主机的最优解决方案，底层系统可以是ESXi、PVE、UnRaid，子系统可以是iKuai、Openwrt、Nas或两两组合，有时还会加一个Windows用于下载或远程桌面等粗活。</p><p>这种方案拥有最高的硬件性能转化率。底层部署，由于不依托其他系统，没有多余的资源消耗。进而硬件直通，尤其是网卡、硬盘实现直通，不仅性能提升明显。且能够大幅减少虚拟机对宿主机的性能资源消耗。</p><h2 id="硬件"><a href="#硬件" class="headerlink" title="硬件"></a>硬件</h2><p>All in One主机属性注定要7*24小时值守工作，所以功耗和散热是两个最重要的问题，虽然也有自组的想法，但最后觉得第一台还是成品机较好。</p><p>机器的选择上，首先肯定排除Arm阵营的软路由（R4S、R5S、R68S等）系列，它们性能太差，拓展性太差适合只作为软路由，连接交换机使用。且目前来说，四五百的价格性价比较低。最便宜的R2S甚至带不起千兆。</p><p>x86平台，目前来看，J1900宝刀已老，J4125是最稳定的。其散热控制，和性能表现，对于AIO非常合适。且其出来也有一段时间，各项BUG和解决方法在网上也都能找得到。</p><p>不过，在我购买的时候N5105准系统大约650，而J4125也需要550。本着买新不买旧的想法，和对M2接口的需求，本人最后选择了11代10nmCPU的N5105平台。其实两者性能也就相差30%左右，只是N5105新平台，对内存频率容量和扩展性好一些。特色大致如下：<br><img src="/2022/09/08/N5105%E8%BD%AF%E8%B7%AF%E7%94%B1%E2%80%94%E2%80%94ESXI-iKuai-OpenWrt-%E9%BB%91%E7%BE%A4%E6%99%96%E6%90%AD%E5%BB%BA/tese.png" width="40%" height="40%"></p><p>这个机器主要的问题在于散热，感觉磨具和J4125差不多，但性能提高就稍微有点压不住了。本人提前买了一个USB小风扇准备辅助散热，不过目前不拿它跑太大的东西，暂时被动散热也还可以。<br><img src="/2022/09/08/N5105%E8%BD%AF%E8%B7%AF%E7%94%B1%E2%80%94%E2%80%94ESXI-iKuai-OpenWrt-%E9%BB%91%E7%BE%A4%E6%99%96%E6%90%AD%E5%BB%BA/cemian.png" width="40%" height="40%"><br><img src="/2022/09/08/N5105%E8%BD%AF%E8%B7%AF%E7%94%B1%E2%80%94%E2%80%94ESXI-iKuai-OpenWrt-%E9%BB%91%E7%BE%A4%E6%99%96%E6%90%AD%E5%BB%BA/zhuban.png" width="80%" height="80%"></p><p>650的准系统+闲鱼125收的英睿达8G 3200内存+129京东买了个垃圾固态爱国者P2000 256G ，总共花了900。硬件方面暂时不会有太大新的需求，后期会把笔记本的2T 2.5寸硬盘接上预留的SATA口（随机附赠了SATA线）。</p><p>AP方面用的是华为AX3 Pro，一个普通的Wifi6路由器。（最一开始就是因为这玩意固件不开源没法刷系统装插件，才开始关注的软路由），就是硬件的全部了。</p><h2 id="软件"><a href="#软件" class="headerlink" title="软件"></a>软件</h2><p>本人最终装的系统是ESXi主系统，内置iKuai主路由+OpenWrt旁路由+NAS。下面尽量省略，主要说下思路。</p><h3 id="安装ESXi系统"><a href="#安装ESXi系统" class="headerlink" title="安装ESXi系统"></a>安装ESXi系统</h3><p>1、接通电源，电脑连eth0（未来的lan口），hdmi连显示器，接上USB鼠标键盘。</p><p>2、使用Ventoy制作PE启动盘，里面放上ESXi主系统和WePE64防止需要部分操作。<br><img src="/2022/09/08/N5105%E8%BD%AF%E8%B7%AF%E7%94%B1%E2%80%94%E2%80%94ESXI-iKuai-OpenWrt-%E9%BB%91%E7%BE%A4%E6%99%96%E6%90%AD%E5%BB%BA/ventoy.png" width="40%" height="40%"></p><p>3、进入ESXi安装界面，可能会出现识别不了NVME硬盘的现象，原因是6.7版本以后新的ESXi删除了部分消费级NVME驱动，可在先前的版本把驱动复制过去或直接使用论坛上已经集成好NVME驱动的ESXi固件。</p><p>4、安装好固件后设置密码，这里密码要求比较高，要有大小写和特殊符号（后面可通过重置系统删除掉这个密码）。</p><p>5、重启后，F2进入菜单，输入密码，Configure Management Network-IPv4 Configuration，设置<br><img src="/2022/09/08/N5105%E8%BD%AF%E8%B7%AF%E7%94%B1%E2%80%94%E2%80%94ESXI-iKuai-OpenWrt-%E9%BB%91%E7%BE%A4%E6%99%96%E6%90%AD%E5%BB%BA/shezhi.png" width="80%" height="80%"><br>这里我没有采集卡，参考了别人的截图。我的网关是123，所以IPv4地址是192.168.123.3，网关是192.168.123.1（未来的iKuai主路由）</p><p>6、转到电脑，设置为123网段，进入192.168.123.3虚拟机主界面，网卡直通，重新引导。<br><img src="/2022/09/08/N5105%E8%BD%AF%E8%B7%AF%E7%94%B1%E2%80%94%E2%80%94ESXI-iKuai-OpenWrt-%E9%BB%91%E7%BE%A4%E6%99%96%E6%90%AD%E5%BB%BA/zhitong.png" width="80%" height="80%"></p><p>7、ESXi转到网络-虚拟交换机-编辑设置-安全-接受混杂模式，重新引导。</p><h3 id="安装IKuai"><a href="#安装IKuai" class="headerlink" title="安装IKuai"></a>安装IKuai</h3><p>1、ESXi创建新新虚拟机，给2两个CPU，2个插槽，2G内存，2G备用，4G硬盘，CD挂载iKuai固件iso。添加三次PCI设备（eth1-3三个网卡）<br><img src="/2022/09/08/N5105%E8%BD%AF%E8%B7%AF%E7%94%B1%E2%80%94%E2%80%94ESXI-iKuai-OpenWrt-%E9%BB%91%E7%BE%A4%E6%99%96%E6%90%AD%E5%BB%BA/ik.png" width="80%" height="80%"><br>2、ESXi双击启动iKuai，1将系统安装到硬盘1。1设置网卡绑定，set wan1 eth3；2设置LAN地址192.168.123.1<br><img src="/2022/09/08/N5105%E8%BD%AF%E8%B7%AF%E7%94%B1%E2%80%94%E2%80%94ESXI-iKuai-OpenWrt-%E9%BB%91%E7%BE%A4%E6%99%96%E6%90%AD%E5%BB%BA/ik2.png" width="80%" height="80%"><br>3、电脑输入192.168.123.1，进爱快后台。如果需要连外网就wan1设置PPPoE拨号（家用宽带）或DHCP（校园网）。也可以将内网三个lan口链路桥接。ikuai设置自动启动。</p><h3 id="安装Openwrt"><a href="#安装Openwrt" class="headerlink" title="安装Openwrt"></a>安装Openwrt</h3><p>1、首先需要将img文件转换为虚拟机识别的引导镜像，即使用StarWindConverter，Image format选择VMWare ESXI server image，得到两个vmdk文件。</p><p>2、ESXi建立新虚拟机，分配1个CPU，2G内存 ，删掉USB控制器、CD驱动器等。（作为旁路由不需要添加PCI设备，作为主路由需要），虚拟机选项引导选择BIOS；</p><p>3、添加现有硬盘，新建一个叫OP的文件夹，分别上传两个vmdk文件<br><img src="/2022/09/08/N5105%E8%BD%AF%E8%B7%AF%E7%94%B1%E2%80%94%E2%80%94ESXI-iKuai-OpenWrt-%E9%BB%91%E7%BE%A4%E6%99%96%E6%90%AD%E5%BB%BA/op.png" width="80%" height="80%"></p><p>4、安装好后，修改配置文件 vi etc&#x2F;config&#x2F;network ，将lan的ip从192.168.5.1修改成主路由的网关下的地址，如192.168.123.2；</p><p>5、进入OP后台-网络-接口-Lan修改-网关设置为192.168.123.1，基本设置-忽略此接口</p><h3 id="安装NAS"><a href="#安装NAS" class="headerlink" title="安装NAS"></a>安装NAS</h3><p>1、使用StartWindConverter将synoboot.img转换为两个vmdk文件。</p><p>2、部署服务器的时候，服务器操作版本选择Red Hat Enterprise Linux7 64位，CPU给2个，内存给2G，删除掉硬盘+SCSI控制器+CD驱动器，在网络适配器-类型选择E1000e，完成。<br><img src="/2022/09/08/N5105%E8%BD%AF%E8%B7%AF%E7%94%B1%E2%80%94%E2%80%94ESXI-iKuai-OpenWrt-%E9%BB%91%E7%BE%A4%E6%99%96%E6%90%AD%E5%BB%BA/nas.png" width="80%" height="80%"></p><p>3、编辑NAS设置-添加现有硬盘-建立NAS文件夹-上传两个vmdk文件；</p><p>4、添加 新标准硬盘-设置为80G左右-磁盘模式选独立持久；</p><p>5、打开电源-通过iKuai后台查到NAS地址，进去。设置-浏览-DSM_DS918+.pat-安装系统;</p><p>6、进入NAS系统，存储空间管理员-存储空间-新增-  快速-选择硬盘80G-应用；共享文件夹也可以新建一个，编辑文件夹权限涉资为可读写。 </p><p>参考：<a href="https://www.right.com.cn/forum/forum.php?mod=viewthread&amp;tid=8238423&amp;extra=&amp;highlight=n5105&amp;page=1">https://www.right.com.cn/forum/forum.php?mod=viewthread&amp;tid=8238423&amp;extra=&amp;highlight=n5105&amp;page=1</a></p><h3 id="硬盘直通"><a href="#硬盘直通" class="headerlink" title="硬盘直通"></a>硬盘直通</h3><p>1、关机，断开SATA盘与主机的连接，然后再开机. 注意：<strong>不断开会使直通设置过程出错</strong>.</p><p>2、主机 -&gt; 管理 -&gt; 硬件 -&gt; PCI设备，找到“Intel(R) SATA controller”，找到SATA设备的“设备ID”与“供应商ID”.</p><p>3、右键菜单启动TSM-SSH：主机 -&gt; 管理 -&gt; 服务 -&gt; TSM-SSH</p><p>4、putty通过SSH连接exsi，密码同网页端的登录密码，登录后编辑直通配置文件.<br>输入命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">vi /etc/vmware/passthru.map<br></code></pre></td></tr></table></figure><p>在文件末尾增加下面2行数据。8086为“供应商ID”，4dd3为“设备ID”，可根据第1步找到的值进行修改。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># Intel(R) SATA controller</span><br>8086  4dd3  d3d0     default<br></code></pre></td></tr></table></figure><p>按”:”进行命令模式，输入”wq”两个字符保存退出.</p><p>5、重新exsi主机使修改生效. 再进入系统后，可看到sata能设置为直通，手动把sata切换为直通.</p><p>6、关机，连接上SATA硬盘.</p><p>参考：<a href="https://www.bilibili.com/video/BV1da411J7zF/?spm_id_from=333.999.0.0&amp;vd_source=cf9bf18d8cd9c4647e5513862d2eb7aa">https://www.bilibili.com/video/BV1da411J7zF/?spm_id_from=333.999.0.0&amp;vd_source=cf9bf18d8cd9c4647e5513862d2eb7aa</a></p><p>到这一个简易的iKuai+OpenWrt+NAS@ESXi主机就大概搭建完成了。</p><h2 id="最终拓扑图"><a href="#最终拓扑图" class="headerlink" title="最终拓扑图"></a>最终拓扑图</h2><p>最终放上我的网络拓扑图，方便理解。<br><img src="/2022/09/08/N5105%E8%BD%AF%E8%B7%AF%E7%94%B1%E2%80%94%E2%80%94ESXI-iKuai-OpenWrt-%E9%BB%91%E7%BE%A4%E6%99%96%E6%90%AD%E5%BB%BA/tuopu.png"></p><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p>1、<a href="https://www.right.com.cn/forum/forum.php?mod=viewthread&amp;tid=8219610&amp;highlight=N5105">https://www.right.com.cn/forum/forum.php?mod=viewthread&amp;tid=8219610&amp;highlight=N5105</a> （固件下载）<br>2、<a href="https://www.right.com.cn/forum/forum.php?mod=viewthread&amp;tid=8249615&amp;highlight=N5105">https://www.right.com.cn/forum/forum.php?mod=viewthread&amp;tid=8249615&amp;highlight=N5105</a> （畅网套装）<br>3、<a href="https://www.bilibili.com/video/BV185411o7gY?spm_id_from=333.880.my_history.page.click&amp;vd_source=cf9bf18d8cd9c4647e5513862d2eb7aa">https://www.bilibili.com/video/BV185411o7gY?spm_id_from=333.880.my_history.page.click&amp;vd_source=cf9bf18d8cd9c4647e5513862d2eb7aa</a> （向北J4125视频）<br>4、<a href="https://www.bilibili.com/video/BV1LN4y1379g/?spm_id_from=333.788.recommend_more_video.0&amp;vd_source=cf9bf18d8cd9c4647e5513862d2eb7aa">https://www.bilibili.com/video/BV1LN4y1379g/?spm_id_from=333.788.recommend_more_video.0&amp;vd_source=cf9bf18d8cd9c4647e5513862d2eb7aa</a> （向北N5105视频）<br>5、<a href="https://www.bilibili.com/video/BV1NT4y16799/?spm_id_from=333.788.recommend_more_video.2&amp;vd_source=cf9bf18d8cd9c4647e5513862d2eb7aa">https://www.bilibili.com/video/BV1NT4y16799/?spm_id_from=333.788.recommend_more_video.2&amp;vd_source=cf9bf18d8cd9c4647e5513862d2eb7aa</a> （阿雷课堂视频）</p>]]></content>
      
      
      <categories>
          
          <category> 硬件 </category>
          
          <category> 软路由 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 生活 </tag>
            
            <tag> 软路由 </tag>
            
            <tag> ESXi </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>球状闪电阅读摘抄</title>
      <link href="/2022/09/02/%E7%90%83%E7%8A%B6%E9%97%AA%E7%94%B5%E9%98%85%E8%AF%BB%E6%91%98%E6%8A%84/"/>
      <url>/2022/09/02/%E7%90%83%E7%8A%B6%E9%97%AA%E7%94%B5%E9%98%85%E8%AF%BB%E6%91%98%E6%8A%84/</url>
      
        <content type="html"><![CDATA[<h2 id="球状闪电阅读摘抄"><a href="#球状闪电阅读摘抄" class="headerlink" title="球状闪电阅读摘抄"></a>球状闪电阅读摘抄</h2><p>三体前传：球状闪电  刘慈欣</p><h3 id="◆-序曲"><a href="#◆-序曲" class="headerlink" title="◆ 序曲"></a>◆ 序曲</h3><blockquote><p>理想主义者和玩世不恭的人都觉得对方很可怜，可他们实际都很幸运</p></blockquote><h3 id="◆-大学"><a href="#◆-大学" class="headerlink" title="◆ 大学"></a>◆ 大学</h3><blockquote><p>传来了爸爸的声音：“美妙人生的关键在于你能迷上什么东西。”我现在真正体会到他这话的正确，我现在的人生好比一颗疾飞的炮弹，除了对到达目标时那一声爆炸的渴望之外什么都没有。这个目标完全是非功利的，达到它就意味着生活的完结，我不知道为什么要去那儿，我只是想去，这就够了，这是人类最本源的冲动。很奇怪的，到现在为止，我一次都没有去查过它的资料。我和它，像两个要用一生时间准备一场决斗的骑士，当我没准备好的时候，既不去见它也不去想它。</p></blockquote><h3 id="◆-球状闪电"><a href="#◆-球状闪电" class="headerlink" title="◆ 球状闪电"></a>◆ 球状闪电</h3><blockquote><p>各种数学工具如脱缰的野马一般难以掌握<br>一接触到复杂的电磁和流体结构，数学描述就变得面目狰狞起来，怪异的偏微方程像一道道绞索，烦琐的矩阵如插满利刃的陷阱。<br>你需要的只是一支铅笔一张纸，你要做的就是构筑出一个球状闪电的数学模型，这应该是一个自洽的模型，在理论上要有独创性，在数学上要完美精致，在计算机上要玩得转，你就当自己在做一个理论艺术品。<br>“黑洞能被接受吗？在至今没有其存在的直接证据的情况下，你看看天体物理学界已把它的理论发展到了何等地步，有多少人靠它吃饭？球状闪电至少是确实存在的！不要怕，如果达到我上面的要求，而论文还通不过，我就辞职，与你一起从这个大学滚蛋！”</p></blockquote><h3 id="◆-林云之一"><a href="#◆-林云之一" class="headerlink" title="◆ 林云之一"></a>◆ 林云之一</h3><blockquote><p>远远的街灯明了，好像是闪着无数的星星。<br>天上的明星现了，好像是点着无数的街灯。”<br>我想那缥缈的空中，定然有美丽的街市。<br>街市上陈列的一些物品，定然是世上没有的珍奇。</p></blockquote><h3 id="◆-张彬"><a href="#◆-张彬" class="headerlink" title="◆ 张彬"></a>◆ 张彬</h3><blockquote><p>那我这话就更好说了。说实在的，高教授，我还从未见过您这么有才气的人，这绝不是恭维，但恕我直言，我觉得您这人干事总缺少恒心，比如前一阵那个建筑防雷系统CAD，多好的项目，只是花点力气就完成了，结果您把开拓性的工作做完后又嫌麻烦推给了别人。”<br>“哈，像这样的恒心，像这样一辈子干一件事已不符合时代潮流了，这个时代，除了基础科学，其他的研究都应快刀斩乱麻。我这次来就是向你进一步证明我是如何缺乏恒心的，还记得我说过的话吗？如果你的论文通不过，我就辞职。<br>看过一本俄文小说，说一个富裕的庄园主，生活中唯一的乐趣是美酒。有一次他从一个神秘的旅人那里买到一个从古代沉船里打捞上来的酒瓶，瓶底还剩一点点酒，他把那点酒喝了以后就全部身心陶醉于其中。旅人告诉他，那艘沉船中一共捞上来两瓶这样的酒，另一瓶不知流落何方。庄园主开始没在意，但对那酒的回味使他日不能终夜不能寐，以至于最后卖掉了庄园和所有的财产，浪迹天涯去寻找那另一瓶酒。他历尽千辛万苦，走遍了世界，从年轻找到年老，最后终于找到了，这时他已是一个病魔缠身的老乞丐，他喝光了那瓶酒，然后在幸福中死去。</p></blockquote><h3 id="◆-晴空霹雳"><a href="#◆-晴空霹雳" class="headerlink" title="◆ 晴空霹雳"></a>◆ 晴空霹雳</h3><blockquote><p>在我告诉高波将随他去雷电研究所的决定时，他说：“在你做出最终决定前，我应把事情说清楚：我知道你现在满脑子想的是球状闪电，虽然我们的出发点不同，我也对这个项目看好，但你要知道，一开始，我不可能让所里用很大的力量搞你这个项目。你知道张彬为什么失败吗？他钻到理论里出不来了！但这也不能怪他，实在是条件所限。这两年我给你的印象是忽视实验，错了，你做博士项目时我没考虑实验，是因为这种实验的投入太高了，照我们现有的条件，根本做不好，不精确甚至不真实的实验结果会拖理论的后腿，最后理论和实验都搞不出什么东西。我招你来，是让你搞球状闪电研究的，这点毫无疑问，但必须在实验基础都具备时才能正式开始搞。现在我们需要的第一是钱，第二是钱，第三还是钱，你要和我齐心协力去搞钱，明白吗？”这番话使我重新认识了高波这人，像他这样在学术上思想如此活跃，在社会上又如此现实的人真是不多见，这可能就是麻省理工出来的人的特点吧。<br>上世纪所有的重大科学进展，比如航天、核能、计算机等等，都是科学家和军人这两帮不同路的人把他们各自目标的共同点放在一起的结果。我们目标的共同之处很明显：人工产生球状闪电，只不过这对你是终点而对我仅仅是开始。我这次来，不是向你解释我的目的，在这方面我们要相互理解是很难的；我只是来帮助你减少一些对雷电武器的厌恶感。”</p></blockquote><h3 id="◆-SETI-home"><a href="#◆-SETI-home" class="headerlink" title="◆ SETI@home"></a>◆ SETI@home</h3><blockquote><p>到江星辰的第一眼，就让我明白同他竞争是毫无意义的。与现在习惯于在潜在竞争者面前咄咄逼人地显示力量的都市男性相反，他每时每刻都努力将自己的力量隐藏起来，这是一种善意，怕这种力量伤害了像我这样的人。他仿佛时时都在说：我真的很抱歉，让您在她面前感到自卑，这不是故意的，让我们共同改变这种状况吧。<br>“为了您的航母，我们每个老百姓平均要纳十元的税。”我试图使自己轻松起来，话一出口才发现是那么的笨拙。<br>“这还不包括舰载机和护航的巡洋舰，所以，每次出航我们都像是把它扛在肩上一样。”他认真地说，再一次成功地释放了我的紧张感。<br>集中精力研制一种供电力系统使用的新型雷电定位系统，同时完成首都大剧院的防雷工程设计，这样大型机的事自然没戏，连球状闪电研究本身以后也只能业余搞了。<br>我知道你们在计算什么，BL，别浪费生命了，来找我！——俄罗斯联邦新西伯利亚州诺克思柏克科市24街106幢561号</p></blockquote><h3 id="◆-西伯利亚"><a href="#◆-西伯利亚" class="headerlink" title="◆ 西伯利亚"></a>◆ 西伯利亚</h3><blockquote><p>在莫斯科的一个傍晚，林云向团长请假后出去了，深夜才回到饭店。我去她的房间里看她，见她一个人呆呆地坐在那儿，眼睛红着，脸上有泪痕，这让我很惊奇，在我的印象中她是不会哭的。她什么也没有说，我也不好问，以后在莫斯科的三天里，她的情绪一直很低落。从这件事我发现，林云的生活远比我想象的复杂<br>那个浪漫时代留给我们的记忆只有失败了。<br>但从扉页那幅头顶上长着世界地图的作者像上就知道它是什么了。林云把书拿过去看了一眼，又放回去。<br>关于苏维埃社会主义联盟建立新民主体制并融入民主社会并成为其亲密一员的可能性的新思维<br>西伯利亚，苦难、浪漫、理想、献身……<br>你说的是过去的和小说中的西伯利亚，现在这里只剩下失落和贪婪了，在下面的这块土地上，到处是无节制的砍伐和猎取，从油田泄漏的黑色原油到处流淌……<br>四十多年前，我在莫斯科大学获得物理学博士学位，现在还清楚地记得那一天，我同成千上万的人一起，看着刚从太空返回的加加林乘坐的敞篷吉普车穿过红场。他挥着鲜花，胸前挂满勋章。那时我热血沸腾，怀着去一个全新的世界创造一个伟大业绩的渴望，主动要求去正在组建的苏联科学院西伯利亚分院<br>项目负责人是尼古拉伊•纳尔诺夫院士，这是个极其少见的人，即便在当时，他也属于在政治上反常狂热的那一类，他偷偷看托洛茨基的著作，对全球革命的思想入了迷。当我问他3141项目的内容时，他这么说：‘格莫夫同志，我知道最近太空飞行的成就对你很有感召力，但那算什么？加加林在轨道上并不能把一块石头扔到华尔街那些资本家的头上；我们的项目就不同了，如果我们成功，将使帝国主义的所有坦克变成玩具，将使他们的机群像蝴蝶一样脆弱，将使他们的舰队像一堆浮在水面上的硬纸箱一样不堪一击！’<br>以后的事情我就不详细说了，即使有时间，我也怀疑自己的精神是否能承受。你们只需要知道，我们所在的地方，曾是世界上最大的球状闪电研究基地，在这里，对球状闪电的研究持续了三十年时间，最多的时候，曾有五千多人在这里工作，苏联最优秀的物理学家和数学家，都或多或少地卷入过这项研究。为了说明在这项研究上进行了多么巨大的投入，我只举一个例子，你们看——”<br>当时球状闪电在我们眼中只是一个普通的电磁现象，3141项目最初并没打算做到很大的规模，当时上自科学院和红军的最高领导者，下至参加项目的科学家和工程师都认为，对于一个已经把人送上太空的国家来说，只要集中科研力量，人工生成球状闪电只是时间问题，事实上，研究拖了三年才出成果已经出乎大多数人的预料了。当那个球状闪电出现时，我们的感觉只是如释重负，谁都没有想到，还有二十七年漫长的岁月和最后的失败在等着我们。<br>纳尔诺夫捧着那一大摞资料，说：‘我们把导弹撤回来没什么，还有更能让帝国主义胆寒的东西！’<br>决定论和机械论是压倒一切的思维方式，研究者们认为自然界是由铁一般的因果关系主宰着。这种思维方式是由政治环境决定的<br>于是纳尔诺夫对这五万次试验的结果给出了一个理所当然的解释：第一次产生球状闪电的那次试验参数记录有误。<br>纳尔诺夫在技术上却离不了我，就向上面建议，让我服刑期间回基地继续原来的工作。回到基地后，我过着低人一等的生活，没有人身自由，活动范围只能在基地之内，连穿的工作服颜色都同别人不一样。最难受的还是孤独，除了在工作中，没人愿意同我接触，只有组里一位刚分配来的女大学生平等地对待我，给了我许多温暖，后来她成了我的妻子<br>141基地拥有世界上最大的雷电模拟系统，在进行球状闪电研究的同时，也进行一些其他的军用或民用实验研究项目。在一次为防雷工程进行的试验中，竟意外地再次产生了球状闪电！这次闪电的参数，同我们第一次成功试验的参数相差甚远，没有任何共同之处；至于各种外加因素，如磁场和微波激射等，这次试验中根本就没有，只是一次纯闪电<br>回到格莫夫的住处后，我们三个整夜无节制地喝酒。西伯利亚的狂风在窗外呼号，《新思维》一本接一本地在壁炉中化为灰烬。墙上和天花板上无数个球状闪电围着我旋转，越转越快，我仿佛陷入一个白色光球的旋涡中。<br>格莫夫朝林云扬起一只手，“不，少校，我让你们来的目的就是想把这一切公之于世，我想让人们知道，在那个可悲的理想主义年代，有一群共青团员来到了西伯利亚的密林深处，在那里追逐一个幽灵，并为此献出了一生……”我们紧紧拥抱，泪流满面。</p><p> 傍晚的北京春风拂面，有一种令人陶醉的温馨，一时还看不出战争的阴影。冰雪中的西伯利亚这时对我来说已是一个无比遥远、似乎只在梦中存在过的世界。其实现在看来，我以前的所有生活也是一场梦，现在梦醒了。<br> 在华灯初上的长安街上，我和林云相视无语。我们本不是同一条路上的人，我们各自的世界相距那么远，是球状闪电把我们联到一起，现在，这个纽带不存在了。张彬、郑敏、格莫夫……在那个祭坛上被肢解的人已经够多了，再加上我一个也没有太大的意义，我感觉到自己心中那已经熄灭的希望之火又被泼上了冷水，现在那里只剩下浸在冰水中的灰了。</p></blockquote><h3 id="◆-灯塔启示"><a href="#◆-灯塔启示" class="headerlink" title="◆ 灯塔启示"></a>◆ 灯塔启示</h3><blockquote><p>我努力使自己适应新的生活。开始上网玩游戏，开始去看球赛，也自己打球了，打牌可以到很晚，还去图书馆把所有的专业书都还了，然后抱回一大摞DVD；我开始试着炒股，还打算养只小狗；我继续着在西伯利亚引发的酒瘾，有时自己喝，有时与正在结识的越来越多的各式各样的朋友喝……我甚至打算找一个女朋友，建立一个家庭，只是一时还没有机会罢了。再也用不着在午夜两点还盯着一堆偏微分方程发呆，再也用不着一连十几个小时守着计算机，等着那注定要让自己失望的结果；以前对我来说万分珍贵的时间，现在变得用之不竭了；第一次知道了什么是轻松和休闲，第一次看到生活原来还有这么丰富的内容，第一次恍然大悟：那些过去被自己轻视甚至可怜的人，原来都过得比我好。一个多月后，我开始发胖了，已掉得有些稀的头发又开始长密了，我不止一次地为自己庆幸：醒得还不算晚。<br>我总觉得是睡在那个遥远的地下洞厅里，梯形的祭坛耸立在黑暗中，上面有许多蛇形的曲线……但很快，窗帘上被路灯摇曳出的树影使我意识到自己在哪儿，然后总能很快地再次睡去。这就像你把一具尸体埋在后院里，埋得很深，你自以为摆脱了它；可是不然，你总是知道它在那儿，更重要的是，你总知道你知道。你后来明白要想真正摆脱它，就要去后院把它再挖出来，到远远的地方去烧掉，但你已经没有精神力量去做这件事了，埋得越深，你就越难把它挖出来，你更不敢想象它在地里已变成了什么样儿。<br>的这种新生活本来会舒适平滑地延续下去，我会坠入爱河，然后会有家，会有孩子，在事业上会有人们都想得到的那种成功，总之我会有一个与大多数人一样的平凡而幸福的人生。也许，在我的暮年，坐在夕阳下的沙滩上，记忆最深处的东西会浮上来一些，我会想起那云南的小镇、雷雨中的泰山、北京近郊的那个雷电武器基地和风雪中的西伯利亚，会想起那个穿军装的姑娘和别在她胸前的利剑……但那时，这些一定都十分遥远了，像是发生在另一个时空里。<br>其实，也不要被他们那种巨大投入和长周期吓住，从林云回来后的介绍，我看出一点：苏联人是在用僵化的武器研究机制来研究自然科学界的一个基础课题，其过程中不免缺少新思想，缺少想象力和创造力。”<br>那灯本来就在那里的，但只有亮的时候你才能看到……</p></blockquote><h3 id="◆-林峰将军"><a href="#◆-林峰将军" class="headerlink" title="◆ 林峰将军"></a>◆ 林峰将军</h3><blockquote><p>有时你飞到了头，却发现还不如中间掉下来<br>我们也许可以硬扭着方程式搞出一个牵强的数学模型，但直觉告诉我那不是真的。它能量施放的选择性和穿透性这类不可思议的特性，确实不是传统理论能解释的。”<br>球状闪电并不是由闪电产生的，而是自然界早已存在的一种结构。”<br>林将军是哈军工的高才生</p></blockquote><h3 id="◆-雷球"><a href="#◆-雷球" class="headerlink" title="◆ 雷球"></a>◆ 雷球</h3><blockquote><p>我们都是凡人，虽然我们用超过常人的努力去探寻，可我们还是凡人，只能在基础理论提供的框架中进行推演，不可能越雷池半步，否则就像步入没有空气的虚空一样，但在这个框架中，我们什么也推演不出来</p></blockquote><h3 id="◆-宏电子"><a href="#◆-宏电子" class="headerlink" title="◆ 宏电子"></a>◆ 宏电子</h3><blockquote><p>我知道，有很多人为解决这个自然之谜进行了艰苦的努力，其中包括陈博士和林少校这样的人。他们用尽毕生精力，把那些电磁和流体方程式缠扭到令人头晕目眩的程度，使它们接近断裂的极限；再打上一个摞一个的补丁，以补上到处出现的漏洞；架上一根又一根额外的支杆，以撑住那摇摇欲坠的大厦；最后出现的是一个庞大复杂、奇丑无比的东西……陈博士，知道你们失败在什么地方吗？你们不是想得不够复杂，而是想得不够简单。”<br> 这话我在林云的父亲那里也听到过，两个不同领域的超人在这个高度上不谋而合。</p></blockquote><h3 id="◆-武器"><a href="#◆-武器" class="headerlink" title="◆ 武器"></a>◆ 武器</h3><blockquote><p>我无所谓，我所研究的东西，尺度要么在十的负三十次方厘米以下，要么在一百亿光年以上，在这两个尺度上，地球和人类都微不足道。”<br> “生命微不足道吗？”<br> “从物理学的角度看，生命这种物质运动形式，与其他的物质运动相比并没有更高的含义，从生命中你找不到新的物理规律，所以从我的角度看，一个人的死与一块冰的消融没有本质的区别。陈博士，你这人有时候想得太多，你应该学会从宇宙终极规律的角度看待生活，这样过得就舒服多了</p></blockquote><h3 id="◆-观察者"><a href="#◆-观察者" class="headerlink" title="◆ 观察者"></a>◆ 观察者</h3><blockquote><p>是的，但观察的强度是有极大区别的，摄下影像是强观察，而地面的沙粒被震离原位只是弱观察，弱观察也能引起量子状态的坍缩，但很微小。”</p></blockquote><h3 id="◆-异象之四"><a href="#◆-异象之四" class="headerlink" title="◆ 异象之四"></a>◆ 异象之四</h3><blockquote><p>被烧毁的CPU和内存条也像宏电子那样处于量子态？</p></blockquote><h3 id="◆-“珠峰号”沉没"><a href="#◆-“珠峰号”沉没" class="headerlink" title="◆ “珠峰号”沉没"></a>◆ “珠峰号”沉没</h3><blockquote><p>珠峰号’航母战斗群在海上遭遇大批巡航导弹的袭击</p></blockquote><h3 id="◆-海上伏击"><a href="#◆-海上伏击" class="headerlink" title="◆ 海上伏击"></a>◆ 海上伏击</h3><blockquote><p>共有三十五艘水面舰只。潜艇的情况还不太清楚，估计有十艘左右的攻击潜艇。下面大家看到的是舰队的队形布局示意图。”大屏幕上出现的图形，像是一个由许多长条形棋子组成的复杂棋局。“这是我们的伏击队形。”在示意图中敌舰队行进方向的两侧，出现了两排小点，每排二十五个。“大家按这个图形，就很容易确定自己的负责的目标。这里要说明：敌舰队进入近海后，可能要改变队形，不过目前显示的已经是典型的近海防御布局，估计变动不会太大，到时候各火力点依实际情况重新调整目标。<br>“这里要特别强调打击的重点：我刚才了解了一下，大家一致认为打击重点是航母。陆军的同志这样想还情有可原，但有些海军的同志也持这个想法就很可笑了，记住：不要理会航母，打击的重点是巡洋舰！它们是舰队宙斯盾防御系统电子部分的主干和控制中心，然后是驱逐舰，它们是防御系统的有机组成部分，只要这些一瘫痪，整个舰队就是一堆案板上的肉了！同时，从位置上看，它们也是距离各火力点最近的，如果不顾外围先打核心的舰母，那后果不堪设想。再重复一遍：航母是肉，巡洋舰和驱逐舰是舰队的骨头！对每艘巡洋舰，至少要分配八百发，每艘驱逐舰一百五十至两百发。”<br>大屏幕上出现了一幅一艘军舰的纵剖面图，显示出的内部结构复杂得令人目眩。接着从舰桥上延伸出一条绿线，弯弯曲曲地贯穿了大部分舰体，像一条舰体内的蛔虫。<br> “这是一艘提康德罗加级巡洋舰的剖面图，这条绿线就是雷球机枪的扫射路线。”<br> 那条弯曲绿线上的不同位置出现了许多小圆圈，每个圆圈旁边都有一个数字。<br> “现在标出的是重点打击部位，旁边的数字是该部位建议分配的雷球数量。刚刚给你们每人发的那本图册，就是敌舰队所有舰只的剖面图和相应的扫射路线，这么点时间都背下来不可能，每人重点记住自己负责的目标。对于陆军的同志，理解这幅图的原理困难一些，只好死记硬背了。但我可以简单地说明：对于巡洋舰和驱逐舰重点打击其宙斯盾的计算机系统。下面请武器系统技术负责人再补充一些细节。”林云走到前面说：“该说的我们在北京训练中心都已经说过了，这里我只想再提醒大家一次：按照雷球机枪的平均射速，你们对每个目标的射击将在四十秒至一分钟的时间内完成，这是相当长的一段时间。所以大家不要慌，雷球的弹道很清晰，你们就像用普通机枪打曳光弹那样，先把稳定的弹道建立起来，再开始移动弹着点进行扫射。<br>“舰队造成的尾浪是一大问题，我们的船都很小，因而造成的波动肯定影响射击。当敌舰队完全进入伏击海域时，伏击线的前半部分还没有尾浪，后半部分的尾浪已基本平息，所以射击时受影响最大的是伏击线的中部，我们在那里部署的是最熟练的火力小组，他们曾在海上训练过，对在海浪的颠簸中射击较有经验……这些本来应该进行更长时间的训练，但来不及了，只能靠大家战场上发挥了！”</p></blockquote><blockquote><p>它们是防御系统的有机组成部分，只要这些一瘫痪，整个舰队就是一堆案板上的肉了！同时，从位置上看，它们也是距离各火力点最近的，如果不顾外围先打核心的舰母，那后果不堪设想。再重复一遍：航母是肉，巡洋舰和驱逐舰是舰队的骨头！对每艘巡洋舰，至少要分配八百发，每艘驱逐舰一百五十至两百发。</p></blockquote><h3 id="◆-宏聚变"><a href="#◆-宏聚变" class="headerlink" title="◆ 宏聚变"></a>◆ 宏聚变</h3><blockquote><p>电话另一端沉默了两秒钟，也只有两秒钟，林将军语气平静地问：“这需要请示吗？”</p></blockquote><h3 id="◆-林云之二"><a href="#◆-林云之二" class="headerlink" title="◆ 林云之二"></a>◆ 林云之二</h3><blockquote><p>的，随着我的成长，我对音乐、文学和艺术之美的认识和敏感已超过了大多数同龄人，而这种能力对我最大的意义，就是让我在更深的层次上感受到武器之美，我意识到，那些能让大多数人陶冶性情的美是软弱无力的，真正的美要有内在的力量来支撑，它是通过像恐惧和残酷这类更有穿透力的感觉来展现自己的，你能够从它获得力量，也可能死在它上面，武器将这种美体现得最为淋漓尽致。从此，我对武器的迷恋便上升到美学和哲学高度，这大概是我上高中的时候，而这一升华，别伤心爸爸，确实是您帮我完成的。”</p></blockquote><h3 id="◆-量子玫瑰"><a href="#◆-量子玫瑰" class="headerlink" title="◆ 量子玫瑰"></a>◆ 量子玫瑰</h3><blockquote><p>那个超级观察者觉察到我们对它的觉察了<br>从量子力学的角度来讲，人的死亡过程就是由一个强观察者变为弱观察者再变为非观察者的过程，当我变成弱观察者时，玫瑰的概率云向毁灭态的坍缩速度就会慢一些，我就有希望看到它。</p></blockquote><h3 id="◆-后记"><a href="#◆-后记" class="headerlink" title="◆ 后记"></a>◆ 后记</h3><blockquote><p>是1981年夏季作者在河北邯郸市的一次大雷雨中的亲眼所见，地点是中华路南头，当时那里还比较僻静，向前走就是大片农田了。</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 生活 </category>
          
          <category> 读书&amp;影评 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 摘抄 </tag>
            
            <tag> 读书 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Code-server配置方法</title>
      <link href="/2022/08/30/Code-server%E9%85%8D%E7%BD%AE%E6%96%B9%E6%B3%95/"/>
      <url>/2022/08/30/Code-server%E9%85%8D%E7%BD%AE%E6%96%B9%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<h2 id="开始"><a href="#开始" class="headerlink" title="开始"></a>开始</h2><p>一般来说，Vscode可由<a href="https://vscode.dev/">https://vscode.dev</a> ，在浏览器中运行一个轻量化的编辑器，支持在本地机器打开文件夹并开始工作。这里支持文件系统访问 API（目前的 Edge 和 Chrome）的现代浏览器允许网页访问本地文件系统（在你的许可下）。（图片来自官网）</p><p><img src="/2022/08/30/Code-server%E9%85%8D%E7%BD%AE%E6%96%B9%E6%B3%95/code.png"></p><p>这个简单的本地机器网关，快速打开了一些使用 VS Code for the Web 作为零安装本地开发工具的有趣场景，例如：</p><p>1、本地文件查看和编辑。在 Markdown 中快速记笔记（和预览！）。即使你在无法安装完整 VS Code 的受限机器上，仍然可以使用 vscode.dev 查看和编辑本地文件。</p><p>2、结合浏览器工具构建客户端 HTML、JavaScript 和 CSS 应用程序以进行调试。</p><p>3、在 Chromebook 等低功率机器上编辑代码，因为你无法（或者说 “轻松地”）在 Chromebook 安装 VS Code。</p><p>4、在 iPad 上开发。你可以上传 &#x2F; 下载文件（甚至使用 Files 应用程序将它们存储在云中），以及使用内置的 GitHub 存储库扩展远程打开存储库。<br>而且，如果浏览器不支持本地文件系统 API，仍然可以通过浏览器上传和下载单个文件来打开它们。</p><h2 id="在线部署"><a href="#在线部署" class="headerlink" title="在线部署"></a>在线部署</h2><p>如果需要在服务器上部署VSCode服务端，可实现无论什么环境，只需要一台可以上网具有浏览器的设备，也可以方便使用VSCode编辑和运行代码的功能。</p><p>例如针对iPad，它没有Mac上的Code应用程序，但由此即可完成随时随地写代码、维护服务器文件、博客等桌面级功能。VSCode的各种插件甚至可以让它成为一个简易的IDE</p><p>Code-server的Github地址为<a href="https://github.com/coder/code-server">https://github.com/coder/code-server</a><br>上面强调了其优点是：</p><p>1、在具有一致开发环境的任何设备上编写代码</p><p>2、使用云服务器加速测试、编译、下载等</p><p>3、在旅途中保持电池寿命；所有密集型任务都在您的服务器上运行</p><h2 id="安装方法"><a href="#安装方法" class="headerlink" title="安装方法"></a>安装方法</h2><p>具体安装教程可参考：<a href="https://coder.com/docs/code-server/latest/install%EF%BC%8C%E5%AE%98%E7%BD%91%E4%B8%8A%E6%8F%90%E4%BE%9B%E4%BA%86%E5%9B%9B%E7%A7%8D%E6%96%B9%E5%BC%8F%EF%BC%9A">https://coder.com/docs/code-server/latest/install，官网上提供了四种方式：</a></p><p>1、使用安装脚本，它可以自动执行大部分过程，但对网络条件有要求</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">curl -fsSL https://code-server.dev/install.sh | sh<br></code></pre></td></tr></table></figure><p>2、手动安装代码服务器</p><p>3、使用coder&#x2F;coder将代码服务器部署到团队</p><p>4、使用一键式按钮和指南将代码服务器部署到云提供商<br><a href="https://github.com/coder/deploy-code-server">https://github.com/coder/deploy-code-server</a></p><p>本文主要介绍离线安装包安装。</p><h2 id="具体过程"><a href="#具体过程" class="headerlink" title="具体过程"></a>具体过程</h2><p>最新安装包下载地址<a href="https://github.com/coder/code-server/releases">https://github.com/coder/code-server/releases</a></p><p>下载完成后，在目录下安装</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo dpkg -i code-server_4.6.0_amd64.deb<br></code></pre></td></tr></table></figure><p>先试运行一次，生成配置文件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">code-server<br></code></pre></td></tr></table></figure><p>修改个人的配置文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">vim ~/.config/code-server/config.yaml<br></code></pre></td></tr></table></figure><p>端口、密码可自行更改，地址写为0.0.0.0，这样网页可直接访问服务器公网ip:端口号即可访问。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 远程访问需要把127.0.0.1换成0.0.0.0，端口也可设置</span><br>bind-addr: 0.0.0.0:8080<br> <br><span class="hljs-comment"># 保持默认</span><br>auth: password<br> <br><span class="hljs-comment"># 设置登入密码</span><br>password: ****<br><br><span class="hljs-comment"># 保持默认</span><br>cert: <span class="hljs-literal">false</span><br></code></pre></td></tr></table></figure><p>修改配置文件后，需要重启服务。</p><p>开启服务</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo systemctl start code-server@huhong<br></code></pre></td></tr></table></figure><p>开机自启</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo systemctl <span class="hljs-built_in">enable</span> code-server@huhong<br></code></pre></td></tr></table></figure><p>到这里就完成了，非常简单。</p><h2 id="其他事项"><a href="#其他事项" class="headerlink" title="其他事项"></a>其他事项</h2><p>1、Code-server相关命令</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs py"><span class="hljs-comment">#启动</span><br>systemctl --user enable --now code-server<br><br><span class="hljs-comment"># 重启</span><br>systemctl --user restart code-server<br><br><span class="hljs-comment"># 查看code-server状态</span><br>systemctl status code-server@root.service<br> <br><span class="hljs-comment"># 查看code-server进程</span><br>ps -aux | grep code-server<br> <br><span class="hljs-comment"># 停止code-server服务</span><br>systemctl stop code-server@root.service<br> <br><span class="hljs-comment"># 杀死code-server进程</span><br>kill &lt;pid&gt;<br></code></pre></td></tr></table></figure><p>2、如果要迁移插件目录</p><p>不同系统下目录分别为：</p><p>Ubuntu+code-server：~&#x2F;.local&#x2F;share&#x2F;code-server&#x2F;extensions&#x2F;</p><p>linux：~&#x2F;.vscode&#x2F;extensions,不同发行版可能不同</p><p>windows：C:&#x2F;Users&#x2F;（你的用户名）&#x2F;.vscode&#x2F;extensions</p><p>Mac：User&#x2F;（你的用户名）&#x2F;.vscode&#x2F;extensions</p><p>将对应目录的插件迁移过去即可</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">#先将插件打包（全选各个插件文件夹然后打包），再使用scp上传</span><br>scp extensions.zip user@host:~/local/share/code-server/extensions/<br><br><span class="hljs-comment">#解压</span><br>unzip extensions.zip<br></code></pre></td></tr></table></figure><p>3、开机自启服务相关的参考<br><a href="https://zhuanlan.zhihu.com/p/496990810">https://zhuanlan.zhihu.com/p/496990810</a></p>]]></content>
      
      
      <categories>
          
          <category> 编程 </category>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> VSCode </tag>
            
            <tag> 配置 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>虚无主义思考</title>
      <link href="/2022/08/23/%E8%99%9A%E6%97%A0%E4%B8%BB%E4%B9%89/"/>
      <url>/2022/08/23/%E8%99%9A%E6%97%A0%E4%B8%BB%E4%B9%89/</url>
      
        <content type="html"><![CDATA[<h2 id="虚无主义"><a href="#虚无主义" class="headerlink" title="虚无主义"></a>虚无主义</h2><h3 id="虚无主义用大白话讲，就是我找不到生活的理由，意义和目的了。"><a href="#虚无主义用大白话讲，就是我找不到生活的理由，意义和目的了。" class="headerlink" title="虚无主义用大白话讲，就是我找不到生活的理由，意义和目的了。"></a>虚无主义用大白话讲，就是我找不到生活的理由，意义和目的了。</h3><h3 id="用哲学的话语来讲，就是主体丧失了把自己的生命组织起来，把自己的精神动员起来的能力"><a href="#用哲学的话语来讲，就是主体丧失了把自己的生命组织起来，把自己的精神动员起来的能力" class="headerlink" title="用哲学的话语来讲，就是主体丧失了把自己的生命组织起来，把自己的精神动员起来的能力"></a>用哲学的话语来讲，就是主体丧失了把自己的生命组织起来，把自己的精神动员起来的能力</h3><h3 id="尼采曾说过，虚无主义意味着最高价值的自我贬黜和自我扬弃。虚无主义代表着由启蒙运动的方案开发出来现代世界，有着根本的缺陷，而它现在难以为继了，支撑着现代世界的那些原则，走向了自我否定。"><a href="#尼采曾说过，虚无主义意味着最高价值的自我贬黜和自我扬弃。虚无主义代表着由启蒙运动的方案开发出来现代世界，有着根本的缺陷，而它现在难以为继了，支撑着现代世界的那些原则，走向了自我否定。" class="headerlink" title="尼采曾说过，虚无主义意味着最高价值的自我贬黜和自我扬弃。虚无主义代表着由启蒙运动的方案开发出来现代世界，有着根本的缺陷，而它现在难以为继了，支撑着现代世界的那些原则，走向了自我否定。"></a>尼采曾说过，虚无主义意味着最高价值的自我贬黜和自我扬弃。虚无主义代表着由启蒙运动的方案开发出来现代世界，有着根本的缺陷，而它现在难以为继了，支撑着现代世界的那些原则，走向了自我否定。</h3><p>人们不相信宗教、党派、主义可以将祖国重新粘合。</p><p>当一件事的难度大到不可想象时，革命者走向瓦解，艺术家们就容易走向荒诞与自嘲，把革命民族宗教体质全数打翻解构，最后只剩下虚空。漂泊的土地和理想成了再也无法实现的乡愁幻梦。</p><h2 id="资产阶级法权"><a href="#资产阶级法权" class="headerlink" title="资产阶级法权"></a>资产阶级法权</h2><p>劳动创造了价值，劳动者创造了产品，二者却又被剥离开来，资产阶级法权主导了这种剥离，又将其所拥有的全部社会力量精确地定位了劳动者的身份和社会地位，使劳动者自以为合理合法地“参与”到了自由市场中，此时的劳动者失去了一切封建的依附关系，自由到只有主动接受剥削才能生存，他们不得不出卖更多的劳动来换取显然低于自身劳动量的生活资料，并且沉醉在自我折磨、主动要求剥削的“奋斗”之中，人与人之间通过包含等量劳动的物质交换的平等关系被消费主义的面纱所掩盖，人们追逐着明星娱乐网红产品不亦乐乎，永远地忘记了自己作为商品监护人、劳动所有者的身份，欢呼着跪倒在自己创造的物质世界面前，仿佛资本主义世界早已产生也将永恒地存在下去。</p><h2 id="天道"><a href="#天道" class="headerlink" title="天道"></a>天道</h2><p>修行以行制性，悟道以性施行。</p><p>觉者由心生律，修者以律制心。</p><p>所谓真经，就是能够达到寂空涅碦的究竟法门，可悟不可修。修为成佛，在求。悟为明性，在知。修行以行制性，悟道以性施行，觉者由心生律，修者以律制心。不落恶果者有信无证，住因住果、住念住心，如是生灭。不昧因果者无住而住，无欲无不欲，无戒无不戒，如是涅碦。</p><p>透视社会依次为三个层面：技术、制度和文化，小到一个人，大到一个国家，一个民族，任何一种命运归根到底都是那种文化属性的产物，强势文化造就强者，弱势文化造就弱者，这是规律，也可以理解为天道，不以人的意志为转移”；“”。强势文化就是遵循事物规律的文化，弱势文化就是依赖强者的道德期望破格获取的文化”；“中国为什么穷，穷就穷在幼稚的思维，穷在期望救主、期望救恩的文化上，这是一个渗透到民族骨子里的价值判断体系，太可怕了”。</p><p>如果一个民族的文化从骨子里就是弱势文化属性，怎么可能去承载强势文化的政治、经济？衡量一种文化属性不是看他积淀的时间长短，而是看他与客观规律的距离。五千年的文化是光辉的，是灿烂的，这个没有问题。但是传统和习俗得过过客观规律的筛子”。中国是文明古国，几千年的文化为世界文明做出了贡献，但在近代工业革命的浪潮中落后了，特别是二战后，西方的经济、科技突飞猛进，我们跟在后面举步维艰；改革开放迎来曙光，技术进步了，制度改良了，但几千年弱势文化的根扎得太深，靠恩典吃饭、凑付过日子的思想绵延太长。因此，诸多现象还是弱势文化的反映：嘴上要民主，给你民主也不会用，看着人家议会打仗直摇头；上面政策不对、做法不好，别人能接受咱也不作声；下岗心里难受，领上一袋面一瓶油愁云就没了；碰上不公或骗子，忍了最好，讨个说法摆不平还得忍。老祖宗留下的宝贝大部分是孔孟文化，中国老百姓脑里装着“君臣父子”、“仁义道德”，面朝黄土背朝天几千年。但仁人志士自古有之，鲁迅是现代撞击弱势文化的旗手，孙中山赶跑了皇帝，从此，中国文化属性有变化了，这是东西文化交流的缘故。现在，到西方留学、参观、旅游者，回来后都说外国好，岂不知除了文化差异我们绝不差，这个差异是在哲学、政治、经济领域强弱文化的反映不同。</p>]]></content>
      
      
      <categories>
          
          <category> 生活 </category>
          
          <category> 政治&amp;哲学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 思考 </tag>
            
            <tag> 哲学 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Dang政体制思辨</title>
      <link href="/2022/08/20/Dang%E6%94%BF%E4%BD%93%E5%88%B6%E6%80%9D%E8%BE%A8/"/>
      <url>/2022/08/20/Dang%E6%94%BF%E4%BD%93%E5%88%B6%E6%80%9D%E8%BE%A8/</url>
      
        <content type="html"><![CDATA[<p>传统国家的重新组织本质上是资本主义性质的市民社会动用自己在封建专制母腹中日趋壮大的组织力量对国家进行扬弃和重建的过程。没有市民社会的自组织，很难想象有民族国家的再组织。</p><h2 id="党政体制由来"><a href="#党政体制由来" class="headerlink" title="党政体制由来"></a>党政体制由来</h2><h3 id="西方市民社会演变"><a href="#西方市民社会演变" class="headerlink" title="西方市民社会演变"></a>西方市民社会演变</h3><p>西欧民族国家的建立实际上是现代化对传统国家的重新组织。按照经典现代化理论，传统国家重新组织的动力来自市民社会的资本及相关组织的扩张要求，如城市自治组织，契约观念塑造的市民团体与制度，与财产、能力、才智及职业活动紧密相关的＂中产阶级“，采用资本主义原则经营投资与放贷的商人集团、银行、企业、运输系统等私人机构等，正是这些初步自我组织的资本的力量(“现代性的因素”)逐步构成了布莱克所说的“现代化的领导“，从而开启了“经济和社会的转型” -—－从乡村和农业的生活方式转变为城市和工业的生活方式，表现在政治上，其标志性事件就是法国大革命，最终达成“社会的一体化” ——社会结构的根本性改组。换句话说，<strong>在西欧民族国家的成长过程中，中世纪后期出现的市民社会组织为经济和社会的转型以及现代国家的到来提供了不可或缺的组织资源</strong>。</p><p>在欧美工业化国家，现代意义的政党是伴随着代议民主制而出现的， <strong>是为了适应阶级和阶层利益的表达与综合，最大限度进行选票动员，进而获得组织政府的权力而存在的</strong>。政党由此被视为介千国家和市民社会之间的政治组织，政党的权利不过是宪法规定的公民权利的组织化的延伸，政党只有进入国家，并通过既定的程序和方式以国家的名义说话和行事，才能成为政治生活中与国家机关具有某种同等分量的因素。</p><h3 id="中国政治进程演变"><a href="#中国政治进程演变" class="headerlink" title="中国政治进程演变"></a>中国政治进程演变</h3><p>但在中国现代政治史上，政党的存在及其与国家的关系同欧美国家不可等量齐观，最明显的区别是，政党无法在体制内依靠既存的机制从事政治动员并由此获得国家权力，这迫使它不得不从体制外谋求社会改造和推动政治发展。</p><p>20 世纪的中国政治进程表明，政党最初是旧国家的敌人，经过规模、性质和暴烈程度不等的革命取得国家权力，进而变成新国家的支柱。孙中山的以党建国、以党治国是如此，共产党的社会革命、开国建政亦是如此。经由这种方式立国主政，政党就成为国家特殊的支配性的组织和力量，因而可以把政党的组织、制度和价值输入国家，从而决定国家的命脉、形构、方向、进程和特征。<strong>这样一种融政党千国家并与国家权力高度结合的政治形态，构成了当代中国党政体制的内在规定和根本特征。</strong></p><h3 id="使命型政党"><a href="#使命型政党" class="headerlink" title="使命型政党"></a>使命型政党</h3><p>中国的党政体制的政治特征有三重面相：<strong>首先，作为一种动员型政治，政党是国家和社会政治运行与变革的发动机，政党的意识形态充当了“启蒙”和＂唤醒“国民、推动现代政治进程的工具，并由此获得了统摄、规划和引领人们的观念与行为规范的地位。其次，作为一种整合型政治，政党的各级组织机构遍布全国，按照中央制定的路线、方针、政策，自上而下地将地方机构、社会团体和政治入口“整编“纳入既定的政治框架中，形成行政性的、组织化的政治社会。最后，作为一种全控型政治，通过垄断全部暴力资源和大部分人力、组织资源，主导国家的政治方向，规定国家的政治过程，决定政治价值的配置，政党成为国家和社会政治体制的核心结构，使整个社会政治生活具有浓厚的政党、国家与社会三者边界彼此重合、功能高度重叠的总体化色彩。</strong>当然，不是所有的政党都具有建构这种党政体制的<strong>意愿和能力</strong>，也不是所有掌控了执政权力的政党都意味着必然走向党政一体化的形式。建构这种党政体制的政党至少需要具备几个条件或特质： （ 1) 有一套精致而系统的理论学说作为思想基础； （ 2) 有一个关于未来社会远景的构想作为奋斗目标；(3) 有精心设计的并获得理论支持的战略和策略作为实现目标的手段； （ 4) 有统一严密的中央、地方和基层组织网络作为行动支撑； （ 5) 有成熟而富有经验和激情的职业化政治精英集团作为协调行动的“总参谋部“; （ 6) 有倡导为主义不惜献身的精神教育作为党员的道德律令。这样一种政党又被称为<strong>“使命型政党”、“动员型政党”或“意识形态型政党”</strong> 。在中国现代政治史上，具备这些特质的政党屈指可数孙中山仿苏俄方式改组后的国民党可算一个，它曾试图按此方向建设和提升党的品质，但最终只是在一定形式上获得其中的某几项特征，相比之下，完全符合以上条件或特质而且一直坚持将其作为党建任务和目标的政党则是中国共产党。</p><h2 id="社会的组织状态"><a href="#社会的组织状态" class="headerlink" title="社会的组织状态"></a>社会的组织状态</h2><p>理解当代中国党政体制的发生和发展，应注意：其一，把中国共产主义革命置于20 世纪中国现代化的世界历史场景之中。一方面，要看到中国与外部世界接触后出现的结构性的总体危机，这种总体危机集中表现在政治领域，但<strong>其根源在于社会和经济，在内部结构受到国际环境的强烈影响包括中国在国际权力结构中地位的变化，发达国家提出的挑战与提供的模式，资本主义世界经济和政治的输入与入侵</strong>。这是一个基本的结构约束。另一方面，要看到结构的约束不是机械的、静止的、线性的，结构本身不过是人们集体行动的产物，因此行为主体在结构中仍然拥有选择的自由，在一定条件下能够随着宏观历史与行为主体的交互作用而改变这种结构。其二，把中国共产主义革命和中国现代国家建设联系起来的中观视角（“中层理论”)，通过这样的中观视角来使宏观历史场景成为一个有理论假设和经验事实支持的＂具体的宏观和具体的抽象” 。这一视角并不排斥关千中国可以和西方社会分享现代性因素的论证，所需要的只是将此置于逻辑和证据有机关联的基础上，通过比较中国国家建设和西欧国家建设的异同来揭示革命与现代化在中国的特殊历程。例如，<strong>精英如何对大众动员，建立一个强有力的政党，用它的政治力量、组织方法，深入和控制每一个阶层与每一个领域，达到改造或重建社会、国家和各领域的组织制度，以最终克服结构性的总体危机。</strong>这种中观视角的旨趣之一就是2 0 世纪初中国社会的组织化状态与中国党政体制兴起的历史关联。</p><p>西欧的国家建设经验表明，<strong>社会自组织的存在是传统国家向现代国家转型的动力和基础</strong>。在这方面． 中国的民族国家建设是不同的。1 9 世纪中叶以后，中国在外强入侵和内部危机频发的环境下开始了自己的现代国家建设，但它可资利用的组织资源是相当匮乏的，主要表现在三个方面：第一，<strong>在（州） 县以下不设职能性官员和机构的乡村地区</strong>，基层社会的治理很大程度上只能靠地方士绅集团。但是，<strong>1905年科举制废除后</strong>，作为＂乡村组织的基石”的士绅集团急速分化解体·——科举时代对于收拢农民起过重大社会作用的士绅向城市不断单向迁移，滞留于乡村的士绅日益沦为＂土豪劣绅“，地方精英集团的品质迅速恶化，导致了地方社会秩序的紊乱；第二，在社会团体相对集中的通商口岸，各种商业组织既缺乏严密的专业分工，也缺乏市场竞争性的自主交往性质，<strong>业缘性的城市组织（如行会）被地缘性和血缘性的同乡组织覆盖，凭借千宗族和乡籍关系</strong>，这些组织成功地在异地环境中保住了自己的利益，也保持了与整个城市社区的距离。在某些民用工业领域，由于一开始就采取了“官督商办”的办法，结果导致了“商人”、”绅士”、“买办“和“官吏”之间身份角色的模糊不清，对行业帮会的依赖和对官府的依赖限制了这些组织的正常发育；第三，晚清官僚机构在开创治局和维系社会秩序方面，更多的是依靠伦理纲常而不是正规组织，更多的是专注于基层政治安全而不是地方、区域和全国性整合的统治目标，由于<strong>其治理方式是伦理性的而非行政性的，官僚录用是诗文性的而非技术性的，统治取向是维持性的而非变革性的，主导社会的组织原则是分散化的而不是动员化的，因此极大地抑制了统治者创造各种有效组织手段的动力，也极大地限制了统治者开发各种组织资源的能力。</strong></p><p>罗兹曼在把中国同日本、俄国的现代化做比较后说： ”概言之，中国的组织状况看上去大不同于日本和俄国……中国人有时能在重大问题上成功地动员起来，但国家却从未认真地建立起组织构架，以便待久地积聚资源。组织的延续性是与缓慢演进的（甚至在地方上是繁荣而自由发展的）前现代社会相适应的，但<strong>这个社会并非广泛动员起来的社会，因而无法对现代变革作出进一步的有力反应，更谈不上能应付现代化势力的挑战了</strong>。”</p><p>中国社会的这种组织状态． 一言以蔽之，即<strong>低组织化状态，是中国现代化失败的主要原因</strong>，这在当时已为大多数先进的中国人所认识。例如孙中山的＂宗族团体论”、梁启超的“新民团体论”、梁漱淏的“集团生活论”、毛泽东的“民众大联合论”等等，都是针对这种低组织化状态开出的”组织革命”的药方。他们都认识到“团体”、”组织”这些社会政治要件对千中国现代国家建设的决定性作用，<strong>中国人唯有通过组织，才能激活民族的“机能“，振奋民族的精神，而在一个缺乏”组织”的国度， ”组织起来“天然具有一种“根本解决“ 、”急进革命”、＂刻不容缓” 的性质，这是来自西方的个入主义在20世纪的中国迅速屈从千同样来自西方的团体主义、社会主义的根本原因。总之，中国如果不发动一场组织运动，就不能摆脱后发现代化国家面临的内外困境。</strong></p><h2 id="组织建设途径"><a href="#组织建设途径" class="headerlink" title="组织建设途径"></a>组织建设途径</h2><p>组织的途径曾有不同的构想（如合宗族为民族、联职业团体为国家），但是比较而言，最直接、最有效、最能代表中国人学习西方民族国家建设经验的努力，因而也<strong>最“现代化”的方式就是组织政党</strong>。当时的舆论认为：** “欧西各国政治，皆操之于政党。政党者，聚全国爱国之士，以参与一国之政；聚全国舌辩之士，以议论一国之政者也。凡设立内阁，则内阁之大臣，皆政党之魁首。召集会议，则议会之议员，皆政党之名士。用以抵抗暴政， 则暴政绝迹而不行；用以代表民情，则民情无微而弗达…… 故吾国国民而坐视吾国之亡则亡，苟不忍吾国之亡，则必大声疾呼，号召国之志士，联为大群，不论为士为农为工为商，苟痛心疾首以四万万之水深火热为己忧者，皆听其入会，立一中国三千年来所未有之大党，其而后中国之元气，乃聚而不散，一而不纷，风霜不能侮，刀火不能侵，暴君民贼不能制，异国异族不能灭，非中国历史上一大盛事乎？**） 这种主张采行西方议会政治、政党政治，以政党形式把中国人“联为大群”、“合为大党”的呼声表明，中国的政党时代到来了。虽然“毁党”、“造党”的争议时有起伏，但随着西方政治观念的不断传入，政党对于民族国家建设的重要作用逐渐成为共识。</p><p>民国初期是政党组织纷呈迭出，即多党政治的黄金时代，<strong>几乎所有的西方政党类型都可以在中国找到</strong>。孙中山这样的革命党人也一度认可多党竞争的必要性与合理性。不过人们很快发现，<strong>多党竞争的必要性与合理性只能停留在西方政治的理论层面，而在中国政治土壤中却发生了橘积之变。</strong>随着袁世凯称帝运动的表面化，议会政治、政党政治的乐观情绪很快便被冷峻的利益较量和严酷的武力政治所湮没。<strong>政党的引入本来是为了组织社会进而组织国家，但在一个民族资本发展缓慢、专制势力强大、缺乏自主参政和政治妥协传统、内外危机日益深重的国家，其结果却是加剧了社会和国家的非组织化。人</strong>们注意到，民国初期的政党政治败千政治强人，但政治强人不是凭空而出的，政治强人之所以能够运用非法律、非程序的强力左右政治的进程，恰恰说明这个社会在性质上存在着一种集权政治的逻辑：<strong>分散的社会只有强有力的政治才能整合，强大的专制只有更强大的力量才能制服，在政党来临的时代，要形成更强大的力量，只能组织更强大的政党。</strong>适合这样一个强大政党的活动及其诉求的政治条件，必定是一个更有效的政党体制．它不能是原来的多党体制，因为“在任何进行现代化的国家里，多党体制都是软弱无力的政党体制”，更不能回到无党体制的时代，因为作为无党体制基础的传统君主政体已经被打破。 事实表明，<strong>多党体制和无党体制都不能改变中国的低组织化和非组织化的状态，都不能完成现代民族国家建设的使命。于是，组织化的话语便转化为社会革命的话语，政党政治的话语便转化为党建国家、党治国家的话语。</strong></p><p>无论是国民党还是共产党，按照列宁式而非西方式政党结构，实行党治国家战略，建构一个融政党千国家并与国家权力高度结合的党政体制，<strong>本质上都是20 世纪的中国在现代化压力之下，欲采取革命动员方式摆脱中国社会“低组织化状态”约束、进行现代国家建设的一种选择。</strong>1921 年，在共产国际的扶待下，中国出现了马克思列宁主义的共产党。三年以后，在多党政治的失败中饱经创痛的国民党，在苏俄和中国共产党的帮助下，开始了“以俄为师”的党务革新。国民党的改组，奠定了＂党治国家”的思想和组织基础，在成功北伐之后，形成了＂党国体制”的政治形态；共产党在其后与国民党的战争中摧毁了国民党的党国结构． 并依托在革命动员过程中积聚起来的强大的政治权威，以一种更为有力的方式，刷新和重建了“党治国家“赖以存在的社会组织网络。</p><p>正如邹说所言： <strong>“在20 世纪初极度无组织的中国社会，传统秩序已经崩溃，对取而代之的基本原则并未达成共识，政治权力不得不以一种明确的意识形态为基础，并以新的组织结构为中心建立起来…… 马列主义和列宁式政党结构被一群激进的异化知识分子接受。然后他们根据这种意识形态寻求中国社会的全面改造……随着1949 年内战的最后胜利，它成为列宁式政党国家的执政党。党外不存在任何抗衡力量对其权力进行制衡。在实施改造社会分层制度和建立社会主义的纲领中，政党国家对市民社会的渗透更加深入，对各种社会团体和个人的控制日益严厉·… . . ）</strong></p><p>中国共产党的领导在国家政治生活中起主导作用，国家的实际权力核心是政党而不是政府。这样一种政治体制弥补了传统中国“治国“资源的匮乏（尤其是组织资源严重不足），<strong>实现了在落后的、分散的、低组织化的社会里开始现代国家建设的可能性</strong>。完成这一过程包含两个重要的方面：<strong>一是中国共产党自身具有高度的组织性和纪律性，是一个严格实行民主集中制的政党；二是中国共产党将自身的组织方法通过党和国家体制拓展到整个社会，形成党治国家的格局。</strong></p><h2 id="政治FB"><a href="#政治FB" class="headerlink" title="政治FB"></a>政治FB</h2><p>改革开放后，在国家和社会关系出现分离、中央向地方放权让利、市场和社会逐渐发育成长的趋势下，<strong>一元化领导的范围、形式和强度发生着变化</strong>，这种变化主要表现为：其一，权力的集中不再是专断性地集中千少数个人，而是明确要求在民主的基础上集中于领导集体，集体领导与个人负责取得了某种平衡；其二，权力的形态不再是粗放式的、强制般的功能重叠与结构统合，而是按照现代政府原理科学地划分结构与功能，因而党政不分、以党代政的局面有了程度不同的改观；其三，权力的作用范围不再是不加区分地覆盖整个社会领域，而是主要地以合乎程序的方式施加于国家公权系统，即使是涉及社会政治性事务，也并非诉诸直接的、命令的方式，而是采取间接的、引导的方式；其四，最重要的是，<strong>权力的行使开始纳入宪法和法律的轨道，依法治国、依法执政、依法行政作为新的领导方式被明确提出</strong>，表明了一元化领导受到法治国家建设目标的约束，因而在一定程度上开始了一元化权力的法律化和制度化进程。</p><p><strong>党的领导体制和领导方式最核心的问题是处理党和国家、社会的关系。</strong>党和国家的关系涉及党的执政方式，即党权如何与政权发生关联，如何在国家活动中贯彻党的路线、方针和政策。<strong>党和社会的关系则集中表现为党如何动员、组织和整合社会，如何巩固和扩大党的社会群众基础</strong>。随着市场化改革的启动和演进，中国的社会、经济、政治生活逐步摆脱了计划体制的束缚，出现了许多深刻的变化，其中在国家与社会关系领域， 一方面是国家与社会发生了一定程度的分离，不再是过去国家高度覆盖社会的状态；另一方面是社会组织在迅速发育成长．社会自主性的发展对国家建设的推动作用越来越明显。**在此过程中，如何依据现实社会的发展逻辑，平衡和调适国家与社会的关系，引导和保持政治与经济的良性互动，建立党领导国家和组织社会的有效体制， 是中国共产党在新时期面临的深刻挑战。</p><p>1980 年8 月18 日，邓在中共中央政治局扩大会议上发表了题为《党和国家领导制度的改革》的重要讲话，这个讲话通常被视为中国政治体制改革的纲领性宣言。这个讲话把基于计划经济体制的制度缺陷归结为＂权力过分集中“，提出必须解决高度集权所导致的党政不分、以党代政的问题．以及<strong>提出建立退休制度，实现干部队伍革命化、年轻化、知识化和专业化的战略措施</strong>，其主旨是改善党的领导，发扬人民民主，使民主制度化和法律化。</p><p>1987 年10 月召开的党的十三大，是贯彻邓关于政治体制改革思想的里程碑。党的十三大报告对党的领导作了一个重要界定： <strong>＂党的领导是政治领导，即政治原则、政治方向、重大决策的领导和向国家政权机关推荐重要干部。党对国家事务实行政治领导的主要方式是：使党的主张经过法定程序变成国家意志，通过党组织的活动和党员的模范作用带动广大人民群众．实现党的路线、方针、政策。”</strong>值得注意的是，在党的十三大通过的党章修正案中．党的领导仍然沿用过去的提法，即“政治领导、思想领导和组织领导”的三位一体｀而党的十三大报告只提“政治领导“，并没有把“思想领导”和”组织领导“纳入其中。人们当时倾向于认为，要改变党政不分、以党代政的局面，党就需要从行政和社会事务中超脱出来，党的领导应主要体现为掌控大政方针及向国家机关推荐党的重要干部（由此摆脱以往党权直接运作或指挥政权的权力模式），以及在公共生活中诉诸党员的模范作用和感召力（由此代替过去意识形态思想动员的灌输模式）。</p><p><strong>在中国，党的领导在国家政治生活中起主导作用，国家的实际权力核心是政党而不是政府</strong>。这样一种政治体制弥补了传统中国“治国“资源的匮乏（尤其是组织资源严重不足），实现了在落后的、分散的、低组织化的社会里开始现代国家建设的可能性，<strong>但完成这一过程包含两个重要的方面：一是中国共产党自身具有高度的组织性和纪律性，是一个严格实行民主集中制的政党；二是中国共产党将自身的组织方法通过党和国家体制拓展到整个社会，形成党治国家的格局。</strong></p><p>就党的十三大报告所提的“政治领导”的内涵而言，“政治原则、政治方向、重大决策的领导和向国家政权机关推荐重要干部“虽然没有改变市场经济条件下党和国家关系的基本特征，而“使党的主张经过法定程序变成国家意志，通过党组织的活动和党员的模范作用带动广大入民群众，实现党的路线、方针、政策”的法治化和制度化的途径，与现代政府原理相契合，但在中国现代化对党和国家一体化仍存有极大需求的情况下，设想让党从实际控制的政府部门和社会基层退出来（如十三大报告中关千取消政府内部的党组设置、把基层党组织的作用由“领导核心”转为“保证监督”等提法），在政治实践中很可能导致“政治领导“失去组织和意识形态的依托。</p><p>1989 年政治风波发生后，中国共产党中央领导集体对政治体制改革中党的领导、党政分开及其在基层的实践等问题进行了反思。在当年8 月召开的全国组织部长会议上，时任总书记江指出： ＂党的领导作用只提政治领导不够，还应该有思想领导和组织领导。”“党组织还是要管干部。党是政治领导核心，离开了组织领导、思想领导，那个核心就是空的！这一点在思想上要明确。”</p><h2 id="意识形态"><a href="#意识形态" class="headerlink" title="意识形态"></a>意识形态</h2><h3 id="意识形态特色"><a href="#意识形态特色" class="headerlink" title="意识形态特色"></a>意识形态特色</h3><p><strong>人类政治经验表明，任何一个阶级若不能掌握意识形态的领导权，就不能掌握或不能长期掌握国家政权。</strong>，<strong>意识形态在哲学上是指关千客观世界与行动主体间关系的知识、观念体系，在政治学上是指统治阶级关于政治统治合法性（正当性）的一套有机论证，通常以学说、理论和战略阐释为表现形式。</strong></p><p><strong>中国共产党是一个使命型政党，为完成其宏大的改造社会与国家结构的使命，对历史与未来、阶级与政治、国家与革命、领袖与群众、执政与治理、战略目标与行动策略等都有相对完整而精致的理论建构，这种理论建构对于形成高度的思想统一以达成高度的一致行动是不可或缺的</strong></p><p>这种强烈的意识形态色彩主要体现为三个方面： 第一，意识形态构成了党的路线、方针、政策的依据，<strong>党在不同历史时期工作重心的转换首先是通过意识形态的再阐释来开道</strong>的，无论是发动“文化大革命”还是结束“文化大革命”以开启改革开放，都经历了意识形态的斗争（前者表现为“以阶级斗争为纲＂，后者表现为“思想解放运动”)，形成了不同的理论阐释系统（如“无产阶级专政下继续革命”理论和“社会主义初级阶段“理论） 。第二，意识形态和党的政治纪律紧密联系在一起，<strong>党内允许不同意见的存在和争论，但不允许逾越意识形态的底线</strong>，尤其是在党的大政方针确定之后，不允许党员公开发表有违千此的言论，全体党员特别是党的高层的思想统一是党追求的目标，党的政治纪律则是维持思想统一的重要保证之一。第三，党的意识形态扩展和渗透到社会生活的各个方面，成为约束和规范社会思想与行为的“主流意识形态”，<strong>为了实现意识形态的这一主导功能，“社会主义核心价值观”的提出与传播、新闻出版网络的监控、思想文化舆论的引导，以及关于意识形态”阵地意识”的强化、对异端意识形态的批判抵制、意识形态主管部门工作的持续加强等，都发挥着极为重要的作用</strong>。</p><p>一般来说，共产党是按照马克思列宁主义原理组建的政党，马克思列宁主义原理由一整套理论学说构成，通常被称为共产党人的意识形态。意识形态被认为是由体现一定社会阶级利益的各种具体的意识形式构成的有机的思想理论体系，在现代社会分裂为资产阶级和无产阶级以后，则形成了资产阶级的意识形态和无产阶级的意识形态。对无产阶级政党来说，<strong>意识形态是关于历史与未来、国家与革命、阶级与党派及其利益诉求和行动方略的世界观与方法论，它以解释、分析和评价现存秩序的方式来动员、组织与指导社会政治世界的改造和重建，并在解决社会冲突和维护新的统治秩序过程中具有重要的功能。</strong>中国共产党是一个意识形态特征鲜明的政党，不仅因为它向来高度重视和强调意识形态领域无产阶级和资产阶级的斗争，而且因为意识形态以上这些特质和功能深刻主导与影响了它的组织建设、行动纲领和行为规范。</p><p>1949 年，中国共产党摧毁了旧国家的社会政治结构，建立起相对完备的国家政治与行政体系，改变了过去国家无力深入渗透社会、中央政府政令无法贯彻到基层的局面，为中国的现代化和现代国家建设奠定了坚实的政治基础。在这个过程中．中国共产党的组织及其所掌控的巨大的政治权力成为重组中国社会、推进工业化和现代化的决定性因素。党的意识形态成为国家的主流意识形态。<strong>这种意识形态本质上是关于中国国家建设的现代化方案的阐释，这个现代化方案是建立在马克思列宁主义对资本主义现代性的批判的基础上的</strong>，因此，对西方资本主义现代性的批评和抵制贯穿了新中国主流意识形态的三个部分。</p><p>19 世纪以来世界资本主义向中国的输入及其与中国落后经济关系的畸形结合所造成的社会衰败，都使马克思对资本主义的批判和对未来理想社会的揭示在中国共产主义革命中产生了强烈的反响。在中国共产党的意识形态中，反对私有财产制度、阶级剥削和社会压迫、作为“资产阶级法权“基础的个人主义、脱离群众的官僚主义、专家治国论，乃至反对市场主义和利润挂帅的思想路线，以及鼓励旨在缩小与消灭三大差别的共产主义“新公社”运动、作为道德规范的集体主义精神和“社会主义新人“风尚，强调群众路线、群众首创性、群众政治参与和革命无私奉献精神的思想取向， 一起构成了意识形态的价值一信仰部分的正反两个方面。</p><h3 id="意识形态变化"><a href="#意识形态变化" class="headerlink" title="意识形态变化"></a>意识形态变化</h3><p>中国共产党通过国家宣传、党团组织和其他社会机构，<strong>在相当长一个时期广泛传播和灌输阶级斗争、群众运动、思想革命化等政治信息与象征符号，以配合中央集权、赶超战略、社会重建、国民训练、理想过渡等国家政治目标的施行。</strong>其中，阶级斗争和群众运动是这个时期意识形态的行动一策略层面的最鲜明的特征，它们通过排除一般的公民权所隐含的抽象的法律权利平等观念，以阶级身份的归属和由此承载的具体的经济社会权利的享有，实现了国家与社会的联系。</p><p>改开以后，在价值—信仰层面，把“建设有中国特色的社会主义”、建设“高度民主、高度文明的社会主义现代化国家”、“实现中华民族的伟大复兴”作为人民的共同理想，把以法律和制度为支撑的人民民主、以共产主义思想道德为基础的精神文明和以避免两极分化为前提的共同富裕作为中国社会发展的奋斗目标。在肯定这些理想价值的同时，也强调“物质鼓励”的不可或缺；在重提“人是要有一点精神的“ 的同时，也承认市场经济的逻辑，主张把生产者和经营者的物质利益与他们的经济活动绩效联系起来。意识形态的价值取向显示出某种世俗化的特征。在认知—阐释层面，<strong>辩证唯物主义与历史唯物主义的世界观和方法论仍然得以坚持，阶级分析的观点仍然受到尊重</strong>，但是关于当代中国社会的性质和主体、所处阶段和时代、目标任务的表达已经纳入了 <strong>“社会主义初级阶段论”</strong>的阐释范式。社会主义初级阶段，即不发达的社会主义阶段，其主要矛盾是日益增长的物质文化需要同落后的社会生产力之间的矛盾，这被视为事关全局的基本国情。”为了摆脱贫穷和落后，尤其要把发展生产力作为全部工作的中心。是否有利千发展生产力｀应当成为我们考虑一切问题的出发点和检验一切工作的根本标准。”</p><p>随着市场经济体制的逐步构建、社会组织与公共领域的逐步成长，政治调控战略由一元统治转向多中心治理，政党行为从革命方式转向执政方式，意识形态的三个部分出现了一些新的特点。在价值—信仰方面，党的十六届三中全会提出“以人为本”是一个意义深远的突破，虽然关于“人”的界定仍然存在一些争议，但是，<strong>“以每个人的全面而自由的发展为基本原则的社会形式”则越来越为大多数人所认同。“</strong>以人为本“观念既接续了作为执政党指导思想的马克思主义的传统，<strong>也反映了西方文化中具有人类文明价值的优秀成果</strong>，同时还可以看作对中国传统政治思想精华的批判性继承。正是在这一点上，<strong>主流意识形态和非主流意识形态（ 社会其他思想意识）取得了价值上的某种共识</strong>。在认知—阐释方面，“科学发展观”和“和谐社会”的提出是另一个具有重大意义的命题。“科学发展观”是根据“以人为本”的价值观念对中国国家建设的发展内涵、发展本质、发展方式、发展难题的重新认识，谋求和落实全面的、协调的和可持续的发展已经成为主流意识形态在新时期的认知—阐释系统的重要维度。同样，”和谐社会”也标志着执政党对“中国特色社会主义规律”认识发生的新发展，把中国国家建设的总体布局由经济建设（市场经济）、政治建设（民主政治）、文化建设(“先进文化”)的三位一体，扩展为包括社会建设（“和谐社会”)和生态文明建设在内的五位一体，体现了当代社会不同群体与成员追求平等和幸福生活的共同要求，也反映了改革开放以来主流意识形态关千治国理念和施政方略的深刻转折。作为行动一策略部分的主流意识形态也开始逐步转变自己的灌输、传播方式。由千中国的改革开放是从松动国家对社会的控制、促成中国社会自主性成长开始的，所以主流意识形态不能不力图保持自己与社会领域的有效互动，既要努力从社会实践与行动领域检验、修正和发展自己的义理、话语和论证机制，也要从价值一信仰、认知— 阐释出发对社会实践与行动领域保持其指导、规范和引领作用。在这些方面，人们可以看到主流意识形态对公民政治参与、基层和社区自治、协商民主、民意表达、民间维权行动、地方治理、民生幸福乃至以“突发事件”出现的社会抗议等，所表现出来的某种包容性、调适性、对话性、吸纳性等特点。</p><p>可以说，改革开放30 余年，从话语特征来看，<strong>中国共产党的意识形态大致显现了从超越性（脱离生产力发展的生产关系革命）到世俗性（以经济建设和社会建设为中心，重视民生发展和共同富裕目标）、从排斥性（“以阶级斗争为纲＂的非此即彼的思想斗争）到包容性（人类优秀文化的＂兼容并蓄”和社会主义价值观的“共建共享＂）的变迁轨迹</strong>。</p><p>美国学者沈大伟以 <strong>“收缩与调适”</strong>为主题对中国共产党的意识形态的变迁过程作了比较完整的描述心所谓“收缩”主要就是<strong>扬弃原来的超越性目标中的乌托邦成分</strong>，撤出或减弱对一些领域的控制，<strong>放下身段以适应世俗化的要求和品味</strong>；“调适”则是有意识地利用市场、商业资源，与传统媒体和新媒体合作．<strong>通过话语与意义的创造性转换来重建中国共产党的使命性基础</strong>。</p><h2 id="困境"><a href="#困境" class="headerlink" title="困境"></a>困境</h2><p>1978 年启动的改革开放结束了中国的封闭状态，开始了中国全面而有选择地加入全球化的进程。全球化最大的特征是信息技术革命带来的贸易、投资和金融的大规模跨国流动，以及资讯传播、网络社会和公共领域的超常规发展，这对大众政治参与和国家治理模式的现代化产生了巨大影响。中国共产党深刻感受到了这个变化世界的压力和挑战，认识到 <strong>“社会主义要赢得与资本主义相比较的优势，就必须大胆吸收和借鉴人类社会创造的一切文明成果，吸收和借鉴当今世界各国包括资本主义发达国家的一切反映现代社会化生产规律的先进经营方式、管理方法”</strong></p><p>从党的十一届三中全会以来，主流意识形态逐步形成了一种<strong>放眼世界、海纳百川、与时俱进</strong>的品质，正如具有全球眼光的邓小平所指出的：“现存我们干的是中国几千年来从未干过的事。这场改革不仅影响中国，而且会影响世界。” “我们的改革不仅在中国，而且在国际范围内也是一种试验，我们相信会成功。如果成功了，可以对世界上的社会主义事业和不发达国家的发展提供某些经验。心） 或如有的学者所表述的，这是一种<strong>新的全球主义的心态，因此领导人把中国有选择地融入全球体系看作中国成为强大民族国家的必经之路，调整了中国的政治秩序以适应正在兴起的以利益为基础的经济秩序，重建了国家官僚系统和经济制度以推动经济发展和培育新生的市场经济</strong>。 这种具备世界视野的意识形态越来越重视理论的创新，并把理论创新作为制度创新、科技创新、文化创新以及其他各方面创新的前提和关键，由此创造性地形成了邓小平理论、“ 三个代表”重要思想和科学发展观。其中，作为中国共产党意识形态创新范例的“ 三个代表”重要思想具有里程碑式的意义，它是中国共产党对全球化条件下信息技术革命、市场化改革、社会组织结构分层化以及社会思想和生活方式多元化趋势的重大回应。</p><p>在全球化信息技术革命和世界历史变化的条件下，政党政治遇到的问题是当代中国发展进程中的时代性和结构性问题，这些问题的解决有赖于经济、政治体制的“第二次革命” 。为解决这些问题，它<strong>必须积极吸收工业文明国家的现代理论成果</strong>，如<strong>现代化理论、比较优势发展理论、市场经济理论、国家建设理论、社会建设理论、民主法治理论</strong>等理论资源，同时着眼千中国的实际，经由理论和实际的结合，并通过实践的检验，形成一系列不同于以往时代的旨在回答“什么是社会主义”、“如何建设社会主义”的理论观点，这些理论观点充满”中国意义”、“中国意识”、“中国元素” 、“中国风格”， 一言以蔽之，即具有新的“中国特色“，其内容包括中国特色社会主义本质论、中国特色社会主义改革开放论、中国特色社会主义市场经济论、中国特色社会主义民主政治论、中国特色社会主义先进文化论、中国特色社会主义和谐社会论、中国特色社会主义生态文明建设论、中国特色社会主义国家统一论、中国特色社会主义和平外交论、中国特色社会主义政党建设论等等。当然，中国特色社会主义理论体系是不断发展的开放的理论体系，它是在当代中国改革开放和现代化建设的实践中逐步形成与发展起来的，也必将随着中国改革开放和现代化建设实践的不断推进而日益深化与完善。</p><p>总而言之，中国共产党的意识形态发生了很大的变化，就中国改革开放本质上是社会主义的自我更新和自我完善而言，这些变化应被理解为意识形态在坚持马克思主义前提下的发展和创新的过程。换言之，<strong>意识形态的内核或许并没有改变，改变的只是边层</strong>，<strong>内核是由基本原理和基本符号构成的，边层则由原理及符号的具体化和灵活化的叙事表达构成。边层的变化当然会对内核构成某种压力，从而使内核发生变化，但因后者涉及意识形态的基本规定，其变化是相对缓慢的。</strong></p><p><strong>从根本上说，意识形态有两条底线是不能逾越的，这就是马克思列宁主义语境中的社会主义道路与共产党领导，它们构成意识形态的核心符号，前者指涉国家走向（方向）问题，后者指涉国家性质问题。</strong>显然，这是意识形态的”重大问题”。虽然社会主义道路不再是简单地作为资本主义的对立面，但是，在中国这样一个发展中国家，<strong>既要充分吸纳资本主义的文明成果，又要避免资本主义的两极分化，既要“集中力量办大事”，快速地发展综合国力，又要达致平等、和谐、共同富裕的目标，社会主义的方向是不可偏离的</strong>。</p><p>同理，虽然共产党领导这样一个极具政治本质的“根本问题“不再是从“阶级”、“阶级斗争”、“国家与革命”的总体性决战的对抗性思维来理解它对历史、现实和未来的意义，党的领导也不再像以往所表达的那样具有以党代政、凌驾千宪法和法律之上的特殊含义，而是强调它同人民民主与依法治国的“有机结合”，但在一个规模超大、人均资源贫弱而正处千现代化转型的国家，党的领导对于确保国家的社会主义方向、对于现代化的平稳过渡、对千公共政策的合理制定、对于人力资源的供给、对于国家政权建设的推动、对千社会和人心的维系等，仍然是不可摆脱、不容颠覆的。意识形态的这些本质规定对国家的政治生态构成了内在的制约，给政党的组织结构和特性提供了深层的文化支持。</p><h2 id="民主集中制的思考"><a href="#民主集中制的思考" class="headerlink" title="民主集中制的思考"></a>民主集中制的思考</h2><p>中国共产党的组织特性从根本上说是由民主集中制的组织原则决定的。<strong>民主集中制是马克思列宁主义政党区别于其他政党的标志性特征</strong>，是中国共产党内部政治生活包括<strong>组建、议事、决策、行动以及解决内部权力</strong>关系的最高法则。在马克思恩格斯看来，民主制不是集中制，但民主制包含集中和权威，也需要集中和权威，只不过这种集中和权威是建立在党员授权的基础上并受党员的监督而已。在这里，民主制是一个包容性结构—一集中或集权是民主制的题中应有之义。马克思恩格斯对民主制的强调和西欧议会民主政治的相对发达是分不开的。</p><p>而在列宁的著述中，集中制有突出的地位和作用。在1899 年的《我们的当前任务》中，列宁指出， “社会民主党地方性活动必须完全自由，同时又必须成立统一的因而也是集中制的党” 。集中制的党本质上是以那些完全献身千革命、在理论和实际活动方面最有修养、对革命最忠诚、同无产阶级保持密切联系的职业革命家为中央领导核心组织起来的“职业革命家组织“,“给我们一个革命家组织，我们就能把俄国翻转过来”立集中制其实所有革命党的个性特征，<strong>革命党以颠覆(“翻转”)现存秩序为己任，就把自己推到了现存秩序的对立面；革命党运用暴力手段改造社会政治结构，就使自己与现存秩序之间的关系具有极度紧张与不妥协的性质，这两点决定了革命党生存环境的压迫性与严酷性</strong>。</p><p>所以列宁说，<strong>一个处在专制高压统治下的革命党试图像德国社会民主党那样按照“广泛民主原则”来建设自己的组织结构是幼稚可笑的</strong>，因为“广泛民主原则”所依赖的两个条件，即“完全的公开性”与“一切职务经选举产生“，在俄国如此恶劣的政治环境中根本无法实行。只有到1905 年之后，由于沙皇政府被迫承认人民的集会结社自由，社会民主工党的活动条件有所改善，列宁才把民主制作为平衡集中制的因素引入党内，第一次提出“在党组织中真正实现民主集中制的原则” ，创造了“民主集中制”这个概念。<strong>从根本上说，共产党旨在彻底改造社会政治、经济结构的使命及其遭遇的来自传统势力的顽强抵抗是其组织建制最重要的约束条件，传统势力越是强大，党的组织结构就越是趋向集权，以便积聚起更加强大的力量来制服这个强大的传统势力。</strong></p><p>政党以获取公共权力为目的，现代民主条件下政党最显著的政治功能不外乎集中在这样几个方面：选举动员、控制议会、组织政府、施行政纲，借此维护和实现政党以及政党所代表的阶级的利益。马克思列宁主义政党同样具备一般意义的政党的政治功能，如参加选举、争夺议席、组织和控制政府、推动社会改革等，但由于意识形态的规定（两个“彻底决裂”)，<strong>它在“进入国家”的道路上面临着既存体制的天然拒斥，这迫使它不得不在体制外发动群众，诉诸暴力手段摧毁横亘在通往权力之路的障碍</strong>。如前所述，在这个过程中，它对宏观理论战略、微观大众动员机制、超凡政治权威、超强组织力量、全面系统控制的高度依赖和运用，最终克服了旧国家的结构性障碍，在社会重组的基础上建立起一个强有力的党政体制。中国共产党的革命建政就是如此。因此，作为马克思列宁主义政党的中国共产党，在革命后的国家，具有西方类型的政党没有或难以拥有的许多功能。这些功能最深刻的含义是，党的所有“执政”行为本质上都是一种“领导“行为，党对整个社会和国家实行的组织、管理、控制和引导，实际上体现了党在公共生活空间的全面的领导权。</p><p>虽然“领导”与“执政”是两个重复率和互换使用率极高的概念，但从权力的意义上看，或者从支配的意义上看．两者是相通的，都是<strong>指主体所具有的对客体施加影响、控制以达到自己目的的能力和过程</strong>。但两者不能简单地等址齐观。“领导“偏重政治性质，是指主体基于其道义、价值和理论上的正当性与公信力去说服、劝导、引领对象的过程；“执政”则偏重法理性质．是指主体基千法律、制度和程序上的“合法性”去要求、规范、支配对象的过程。前者主要发生在社会和公民之中，所针对的是全部社会政治生活；后者主要发生在与公共权力相联系的正式领域，如国家领域中，所针对的是国家政权的运作过程．是取得执政地位的政党以公共权力的强制力为后盾，并以公共权力的名义所采取的行动。正因为是一种强制力，所以公共权力的使用有严格限制，表现为执政活动受到宪法和法律的规范与制约。对西方多数政党而言，拥有执政权未必拥有领导权，因为在多元自由主义社会，承认和服从某个政党的执政权，并不意味着其他社会政治集团必然接受其领导权。对中国共产党而言，它在革命中已经以它卓有成效的宣传、动员和组织在社会政治领域建立起统摄一切的领导权，拥有领导权必然要求执政权，从革命到建国、在政治与法统之间的逻辑就是如此， 反过来，拥有执政权亦绝不放弃领导权，只有落实了领导权才有巩固的执政权，这就是党重视意识形态工作和在社会各个层面扩展它的组织网络的原因，也是中国共产党区别千西方政党最重要的特征。</p>]]></content>
      
      
      <categories>
          
          <category> 生活 </category>
          
          <category> 政治&amp;哲学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 政治 </tag>
            
            <tag> 意识形态 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>就业去向分析</title>
      <link href="/2022/08/11/%E5%B0%B1%E4%B8%9A%E5%8E%BB%E5%90%91/"/>
      <url>/2022/08/11/%E5%B0%B1%E4%B8%9A%E5%8E%BB%E5%90%91/</url>
      
        <content type="html"><![CDATA[<p>就业去向看到的一个评论，有点意思，摘抄一下：</p><p>80年代大家都是挤破脑袋进体制内。公务员和军队是一等人，国企事业单位次之。私企？个体户？那是资本主义的尾巴，哪天说割就割了。</p><p>然而，90年代实现双轨制。造导弹的不如卖茶叶蛋的，一大堆体制内下海经商，国企后来迎来改制（破产）潮，公务员也不受待见。90年代最热的，其实是外企，福利好，地位高，管理先进。那时候，宝洁、强生、辉瑞、联合利华这些公司也是一波一波收割名校毕业生。另外一个热门就是出国，由于基础科学出国更容易，在90年代末00初造就了“21世纪是xx的世纪”的传说。</p><p>然后亚洲金融风暴、国企抓大放小，然后发现外企天花板明显，国企反而强势起来。至于21世纪的科学，大家都明白怎么回事了。电网两油三大运营商四大行，在00-10年代最热。基建、垄断相关专业，这时候最热门，比如土建、电气、通信等等，在08年的4万亿之后达到顶峰。</p><p>过去十年，垄断国企被迫割肉让利，民营企业——尤其是高科技和互联网民企，一轮一轮冒出来。华为、阿里、腾讯、字节等等成为大家热衷去的企业。前些年大家还在吹嘘互联网颠覆这个颠覆那个，这两年是不是开始被敲打了？</p><p>疫情来了，大家发现这个泡沫也就这么回事。而十八大以来持续整顿公务员队伍，导致公务员的管理明显改善。国家对政府执政能力要求提高，也增加了对高学历公务员的需求，造就了这几年繁荣。</p><p>其实太阳底下无新鲜事。80年代也搞过提升学历、干部年轻化。但当年去当公务员的大学生发展一定好吗？</p><p>我认识一个80年代厦门大学毕业的，在一个偏远县耗了一辈子，卡在正科上不去，都快退休了。80年代，全部大学生才几十万一年，想想当时的厦大什么概念？</p><p>今天跟八九十年代一样，大家都热衷于进体制内。体制内就已经不是最好的机会了（当然也不会太差），进去之后要服从组织分配，卡在某个地方、某个位置几十年很常见：国家最缺公务员的地方，一般发展都比较差。而发展好的地方常常不缺人，自然没什么上升空间。</p><p>今天看得到的最大机会，其实还是是去亚非拉。就像八九十年代最大的机会是闯广东一样。不要说亚非拉乱，广东90年代到00初能好到哪里去？飞车党了解下？孙志刚了解下？<br>但这个说着容易，实际上呢？换到当时，你怎么知道要去深圳而不是汕头海南？都是经济特区，汕头还有李嘉诚等潮汕商人加持，当时谁知道汕头会发展这么差？亦或者闯海南，遇到房地产泡沫破裂，背一辈子债？<br>所以，你现在去闯亚非拉，哪知道哪个地方会成为深圳，哪个地方成为海南，哪个地方成为汕头？判断错了，可是要命的事情（可能真的是字面意义上要命）。</p><p>人人都以为自己是算无遗策的诸葛亮，找个好的路径就能躺赢。<br>但是看看诸葛亮自己怎么说的：<br>夫难平（评）者，事也。…..凡事如是，难可逆见。臣鞠躬尽瘁，死而后已。至于成败利钝，非臣之明所能逆睹也。</p><p>还有人说什么公务员待遇稳定，不会失业…再数一数：<br>80年代冷战还没结束，就搞了大裁军。越南阿富汗还在打仗，苏东接下来就剧变，危机存亡之秋，我国先把军队裁掉了100万…..<br>90年代国企维持不下去，但工人阶级是我们国家的统治阶级，社会主义的工人怎么能失业？但我们国家说社会主义没有失业，但是可以下岗嘛。看成败、人生豪迈、只不过是重头再来….<br>2001年加入WTO，国家扩大开放，按理外企应该生意越做越大，谁知道外企会被国货打得节节败退，整个部门的裁…<br>2008-2010时一群人吹垄断国企躺着挣钱、能源银行乃百业之母。你看这十来年强迫几大垄断企业降价降了多少次？<br>为什么总有人相信我们国家会养闲人，而且一养就是三五十年呢？这几十年我们宪法都改了几次了？</p><p>历史潮流滚滚向前，因果轮回难以预料。<br>你问我，怎么才能不落因果、不入轮回？<br>我只能回答：不昧因果，不惧轮回。</p>]]></content>
      
      
      <categories>
          
          <category> 生活 </category>
          
          <category> 就业&amp;思考 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 思考 </tag>
            
            <tag> 就业 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Github-Pages+CheapName域名配置</title>
      <link href="/2021/08/02/Github-Pages-CheapName-%E5%9F%9F%E5%90%8D%E9%85%8D%E7%BD%AE/"/>
      <url>/2021/08/02/Github-Pages-CheapName-%E5%9F%9F%E5%90%8D%E9%85%8D%E7%BD%AE/</url>
      
        <content type="html"><![CDATA[<h2 id="整体思路"><a href="#整体思路" class="headerlink" title="整体思路"></a>整体思路</h2><p>个人Blog是使用Hexo+Github Pages搭建的。Pages的域名都是默认<a href="https://github.com/XXX/XXX.github.io%E3%80%82">https://github.com/XXX/XXX.github.io。</a> 如果要绑定域名，需要在域名解析服务商和Github两边都完成操作。具体思路为：<br>1、在域名解析商处注册个人域名，并配置域名解析，将域名绑定到个人的XXX.github.io<br>2、在github pages设置页面配置CNAME文件重定向到解析商得到的域名。<br>类似于双向握手，两边信息匹配握手成功即可。</p><h2 id="域名解析配置"><a href="#域名解析配置" class="headerlink" title="域名解析配置"></a>域名解析配置</h2><p>这里使用的是Namecheap上注册的域名，官网是<a href="https://www.namecheap.com/">https://www.namecheap.com/</a> 。 如果有Github认证学生身份，可以在GitHub Student Developer Pack里找到。感觉这家的域名足够的短，最终注册了huhong.me的个人域名。<br><img src="/2021/08/02/Github-Pages-CheapName-%E5%9F%9F%E5%90%8D%E9%85%8D%E7%BD%AE/name.png"></p><p>通过学生身份，可以得到一年的域名和SSL认证 <a href="https://education.github.com/pack/offers%E3%80%82">https://education.github.com/pack/offers。</a><br>如果不需要SSL认证（即使用HTTPS），只需要在Domain List-Advanced DNS处增加三条内容即可：<br><img src="/2021/08/02/Github-Pages-CheapName-%E5%9F%9F%E5%90%8D%E9%85%8D%E7%BD%AE/dns.png"><br>第三条根据自己的情况填写。需要注意的是，github.io.后面有个点，不能省略。<br>到这里，保存后即完成域名解析的配置。</p><h2 id="CNAME文件配置"><a href="#CNAME文件配置" class="headerlink" title="CNAME文件配置"></a>CNAME文件配置</h2><p>配置CNAME文件是为了使得 GitHub Page个人网站.github.io解析到个人申请购买的云服务器域名，也就是当你输入.github.io时会自动DNS解析访问至云服务器域名。</p><p>知道思路配置非常简单，直接在自己github.io仓库的Settings-Pages项里，设置Custom domain。设置完后系统会自动在你的仓库里添加一个CNAME文件<br><img src="/2021/08/02/Github-Pages-CheapName-%E5%9F%9F%E5%90%8D%E9%85%8D%E7%BD%AE/pages.png"></p><p>如果不配置SSL的强制HTTPS，到这里就结束了（配置SSL证书在NameCheap官网里有教程）。</p><h2 id="其他问题"><a href="#其他问题" class="headerlink" title="其他问题"></a>其他问题</h2><h4 id="1、连接Github连不上或访问慢"><a href="#1、连接Github连不上或访问慢" class="headerlink" title="1、连接Github连不上或访问慢"></a>1、连接Github连不上或访问慢</h4><p>如果出现了github有时连不上或者访问慢的情况，通常的方法是修改hosts文件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">#修改 /etc/hosts</span><br>sudo vim /etc/hosts<br></code></pre></td></tr></table></figure><p>hosts里添加Github的ip地址</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">140.82.113.4 github.com<br>199.232.5.194 github.global.ssl.fastly.net<br>54.231.114.219 github-cloud.s3.amazonaws.com<br></code></pre></td></tr></table></figure><p>也可以尝试访问下<a href="https://ipaddress.com/website/www.github.com">https://ipaddress.com/website/www.github.com</a> 去查看目前Github的实际IP。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">#更新一下hosts</span><br><span class="hljs-built_in">source</span> /etc/hosts<br></code></pre></td></tr></table></figure><p>也使用Github国内镜像网站的方法，在clone某个项目的时候将github.com替换为github.com.cnpmjs.org或git.sdut.me即可。个人没有试过，供参考：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs bash">//这是我们要<span class="hljs-built_in">clone</span>的<br>git <span class="hljs-built_in">clone</span> https://github.com/Hackergeek/architecture-samples<br>//使用镜像<br>git <span class="hljs-built_in">clone</span> https://github.com.cnpmjs.org/Hackergeek/architecture-samples<br>//或者使用镜像<br>git <span class="hljs-built_in">clone</span> https://git.sdut.me/Hackergeek/architecture-samples<br></code></pre></td></tr></table></figure><h4 id="2、CNAME文件每次被覆盖"><a href="#2、CNAME文件每次被覆盖" class="headerlink" title="2、CNAME文件每次被覆盖"></a>2、CNAME文件每次被覆盖</h4><p>如果发现hexo 每次Deploy后需要手动在 Github Pages 的 Setting 里重新设置自定义域名，具体有四个解决方法：</p><p>方法一（最推荐）：在source文件夹里将CNAME内容改为huhong.me （即你自己网站的域名）。</p><p>方法二：每次 hexo d 之后，去 GitHub 仓库根目录新建 CNAME文件</p><p>方法三：每次 hexo d 之后，按照上述CNAME文件配置处，重新在自己github.io仓库的Settings-Pages项里，设置一遍Custom domain</p><p>方法四：通过安装插件（不太推荐）：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">npm install hexo-generator-cname --save<br></code></pre></td></tr></table></figure><p>然后在_config.yml中添加一条</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">Plugins: - hexo-generator-cname<br></code></pre></td></tr></table></figure><h4 id="3、README-md文件每次被覆盖"><a href="#3、README-md文件每次被覆盖" class="headerlink" title="3、README.md文件每次被覆盖"></a>3、README.md文件每次被覆盖</h4><p>同理，若想避免 README.md 文件被解析，可在执行hexo deploy前把在本地写好的README.md文件复制到.deploy文件夹中，再去执行hexo deploy。</p><p>因为Hexo原理就是hexo在执行hexo generate时会在本地先把博客生成的一套静态站点放到public文件夹中，在执行hexo deploy时将其复制到.deploy文件夹中。Github的版本库通常建议同时附上README.md说明文件，但是hexo默认情况下会把所有md文件解析成html文件，所以即使你在线生成了 README. md，它也会在你下一次部署时被删去。</p>]]></content>
      
      
      <categories>
          
          <category> 博客 </category>
          
          <category> 域名 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Github </tag>
            
            <tag> 域名 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ubuntu中Nodejs安装的问题</title>
      <link href="/2021/07/03/ubuntu%E4%B8%ADNodejs%E5%AE%89%E8%A3%85%E7%9A%84%E9%97%AE%E9%A2%98/"/>
      <url>/2021/07/03/ubuntu%E4%B8%ADNodejs%E5%AE%89%E8%A3%85%E7%9A%84%E9%97%AE%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<h2 id="方法零-2023年1月5日更新"><a href="#方法零-2023年1月5日更新" class="headerlink" title="方法零(2023年1月5日更新)"></a>方法零(2023年1月5日更新)</h2><p>使用nvm安装nodejs，这是一个非常好的node.js版本管理器，例如</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs bash">nvm use 16<br><span class="hljs-comment">#Now using node v16.9.1 (npm v7.21.1)</span><br>node -v<br><span class="hljs-comment">#v16.9.1</span><br>nvm use 14<br><span class="hljs-comment">#Now using node v14.18.0 (npm v6.14.15)</span><br>node -v<br><span class="hljs-comment">#v14.18.0</span><br>nvm install 12<br><span class="hljs-comment">#Now using node v12.22.6 (npm v6.14.5)</span><br>node -v<br><span class="hljs-comment">#v12.22.6</span><br></code></pre></td></tr></table></figure><p>NVM的仓库在<a href="https://github.com/nvm-sh/nvm">https://github.com/nvm-sh/nvm</a> 上，安装方法为：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.3/install.sh | bash<br><span class="hljs-comment">#或者</span><br>wget -qO- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.3/install.sh | bash<br></code></pre></td></tr></table></figure><p>如果下载不动，可能是GitHub的raw.githubusercontent.com域名解析被污染了，通过修改hosts解决此问题。可在<a href="https://www.ipaddress.com/">https://www.ipaddress.com/</a> 查询raw.githubusercontent.com的真实IP。</p><p>修改hosts：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">sudo vim /etc/hosts<br></code></pre></td></tr></table></figure><p>输入：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">199.232.96.133 raw.githubusercontent.com<br></code></pre></td></tr></table></figure><p>查看nvm是否安好：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">nvm --version<br></code></pre></td></tr></table></figure><p>确认安好后，输入下命令即可：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">sudo apt-get remove nodejs<br>nvm install 16.15.1<br></code></pre></td></tr></table></figure><p>参考：<a href="https://stackoverflow.com/questions/72921215/getting-glibc-2-28-not-found">https://stackoverflow.com/questions/72921215/getting-glibc-2-28-not-found</a></p><h2 id="方法一：下载源码，直接软连接"><a href="#方法一：下载源码，直接软连接" class="headerlink" title="方法一：下载源码，直接软连接"></a>方法一：下载源码，直接软连接</h2><p>目前Node最新版本为16.15.1，npm 8.11.0。但通过：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">$ </span><span class="language-bash">sudo apt install nodejs</span><br></code></pre></td></tr></table></figure><p>安装的并不是最新版（目前安装下来的Node为v8.10.0，npm为3.5.2）。此时可以选择下下来后去进行软连接的思路。</p><p>登陆官网<a href="https://nodejs.org/en/download/">https://nodejs.org/en/download/</a>    ，下载源码<br><img src="/2021/07/03/ubuntu%E4%B8%ADNodejs%E5%AE%89%E8%A3%85%E7%9A%84%E9%97%AE%E9%A2%98/node.png"></p><p>接下来解压，cd进目录检查此包内node版本</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">$ </span><span class="language-bash">tar xf  node-v16.15.1-linux-x64.tar.xz       // 解压</span><br><span class="hljs-meta prompt_">$ </span><span class="language-bash"><span class="hljs-built_in">cd</span> node-v16.15.1-linux-x64/                  // 进入解压目录</span><br><span class="hljs-meta prompt_">$ </span><span class="language-bash"> ./bin/node -v                               // 执行node命令 查看版本</span><br>// bin目录下有执行文件npm和node 做软链接<br></code></pre></td></tr></table></figure><p>注意软连接需要写绝对路径，软连接到&#x2F;usr&#x2F;local&#x2F;bin&#x2F;下：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">$ </span><span class="language-bash"><span class="hljs-built_in">ln</span> -s  /home/huhong/Downloads/node-v16.15.1-linux-x64/bin/node  /usr/local/bin/</span><br><span class="hljs-meta prompt_">$ </span><span class="language-bash"><span class="hljs-built_in">ln</span> -s /home/huhong/Downloads/node-v16.15.1-linux-x64/bin/npm  /usr/local/bin/</span><br>// 注意要写文件的绝对路径<br></code></pre></td></tr></table></figure><p>如果创建软连的时候，出现npm已经存在,node 已经存在，解决方案是删除 &#x2F;usr&#x2F;local&#x2F;bin&#x2F;目录下的node，npm：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">$ </span><span class="language-bash"><span class="hljs-built_in">rm</span> -rf /usr/local/bin/node</span><br><span class="hljs-meta prompt_">$ </span><span class="language-bash"><span class="hljs-built_in">rm</span> -rf /usr/local/bin/npm</span><br></code></pre></td></tr></table></figure><p>之后创建软连接，即可（不了解rm含义慎用）。</p><h2 id="方法二：通过更新工具"><a href="#方法二：通过更新工具" class="headerlink" title="方法二：通过更新工具"></a>方法二：通过更新工具</h2><p>也可以考虑通过n这个用于更新node 版本的工具，并通过n下载最新的稳定版本</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">$ </span><span class="language-bash">sudo npm install n -g</span><br><span class="hljs-meta prompt_">$ </span><span class="language-bash">sudo n stable</span><br></code></pre></td></tr></table></figure><p>结果为：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">$ </span><span class="language-bash">sudo n stable</span><br>  installing : node-v16.15.1<br>       mkdir : /usr/local/n/versions/node/16.15.1<br>       fetch : https://nodejs.org/dist/v16.15.1/node-v16.15.1-linux-x64.tar.xz<br>     copying : node/16.15.1<br>   installed : v16.15.1 (with npm 8.11.0)<br></code></pre></td></tr></table></figure><p>可见，最新版本为v16.15.1。</p><h2 id="几个坑点："><a href="#几个坑点：" class="headerlink" title="几个坑点："></a>几个坑点：</h2><h4 id="1、shell不显示更新"><a href="#1、shell不显示更新" class="headerlink" title="1、shell不显示更新"></a>1、shell不显示更新</h4><p>如果经过以上方法后，使用node-v依然是先前的版本，可考虑根据不同的shell执行hash -r。</p><p>我使用的是zsh，执行hash -r 后显示正确。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">$ </span><span class="language-bash">node -v</span><br>v8.10.0<br><span class="hljs-meta prompt_">$ </span><span class="language-bash">npm -v</span><br>3.5.2<br><span class="hljs-meta prompt_">$ </span><span class="language-bash"><span class="hljs-built_in">hash</span> -r</span><br><span class="hljs-meta prompt_">$ </span><span class="language-bash">node -v</span><br>v16.15.1<br><span class="hljs-meta prompt_">$ </span><span class="language-bash">npm -v</span><br>8.11.0<br></code></pre></td></tr></table></figure><h4 id="2、watchers超过限制"><a href="#2、watchers超过限制" class="headerlink" title="2、watchers超过限制"></a>2、watchers超过限制</h4><p>我在启动hexo -s 时遇到err: Error: ENOSPC: System limit for number of file watchers reached<br>具体为：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">$ </span><span class="language-bash">hexo s</span><br>INFO  Validating config<br>WARN  Deprecated config detected: &quot;use_date_for_updated&quot; is deprecated, please use &quot;updated_option&quot; instead. See https://hexo.io/docs/configuration for more details.<br>INFO  Start processing<br>FATAL &#123;<br>  err: Error: ENOSPC: System limit for number of file watchers reached, watch &#x27;/home/huhong/My_Blog/themes/aria/&#x27;<br>      at FSWatcher.&lt;computed&gt; (node:internal/fs/watchers:244:19)<br>      at Object.watch (node:fs:2264:34)<br>      at createFsWatchInstance (/home/huhong/My_Blog/node_modules/chokidar/lib/nodefs-handler.js:119:15)<br>      at setFsWatchListener (/home/huhong/My_Blog/node_modules/chokidar/lib/nodefs-handler.js:166:15)<br>      at NodeFsHandler._watchWithNodeFs (/home/huhong/My_Blog/node_modules/chokidar/lib/nodefs-handler.js:331:14)<br>      at NodeFsHandler._handleDir (/home/huhong/My_Blog/node_modules/chokidar/lib/nodefs-handler.js:567:19)<br>      at processTicksAndRejections (node:internal/process/task_queues:96:5)<br>      at async NodeFsHandler._addToNodeFs (/home/huhong/My_Blog/node_modules/chokidar/lib/nodefs-handler.js:617:16)<br>      at async /home/huhong/My_Blog/node_modules/chokidar/index.js:451:21<br>      at async Promise.all (index 0) &#123;<br>    errno: -28,<br>    syscall: &#x27;watch&#x27;,<br>    code: &#x27;ENOSPC&#x27;,<br>    path: &#x27;/home/huhong/My_Blog/themes/aria/&#x27;,<br>    filename: &#x27;/home/huhong/My_Blog/themes/aria/&#x27;<br>  &#125;<br>&#125; Something&#x27;s wrong. Maybe you can find the solution here: %s https://hexo.io/docs/troubleshooting.html<br></code></pre></td></tr></table></figure><p>参考博客[1]后，了解是watch的文件数问题，通过以下命令扩大成果解决。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">$ </span><span class="language-bash"><span class="hljs-built_in">echo</span> fs.inotify.max_user_watches=524288 | sudo <span class="hljs-built_in">tee</span> -a /etc/sysctl.conf &amp;&amp; sudo sysctl -p</span><br></code></pre></td></tr></table></figure><h4 id="3、ubuntu防火墙问题"><a href="#3、ubuntu防火墙问题" class="headerlink" title="3、ubuntu防火墙问题"></a>3、ubuntu防火墙问题</h4><p>本人没有遇到过防火墙问题，但发现较多在ubuntu上配置hexo都会出现此问题，提供一些相关命令参考[2]。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">$ </span><span class="language-bash">sudo ufw <span class="hljs-built_in">enable</span></span><br><span class="hljs-meta prompt_">$ </span><span class="language-bash">sudo ufw allow 4000</span><br><span class="hljs-meta prompt_">$ </span><span class="language-bash">sudo ufw allow http</span><br><span class="hljs-meta prompt_">$ </span><span class="language-bash">sudo ufw allow https</span><br><span class="hljs-meta prompt_">$ </span><span class="language-bash">sudo ufw status</span><br></code></pre></td></tr></table></figure><h4 id="4、报错gnutls-handshake-failed"><a href="#4、报错gnutls-handshake-failed" class="headerlink" title="4、报错gnutls_handshake() failed"></a>4、报错gnutls_handshake() failed</h4><p>具体体现为：gnutls_handshake() failed: The TLS connection was non-properly terminated.<br>此时为代理设置的问题，可重置代理：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">$ </span><span class="language-bash">git config --global  --<span class="hljs-built_in">unset</span> https.https://github.com.proxy</span> <br><span class="hljs-meta prompt_">$ </span><span class="language-bash">git config --global  --<span class="hljs-built_in">unset</span> http.https://github.com.proxy</span> <br></code></pre></td></tr></table></figure><p>若需使用代理，以8080端口为例,http协议和socket协议的配置分别如下：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs shell">//http<br>git config --global http.https://github.com.proxy http://127.0.0.1:8080<br>git config --global https.https://github.com.proxy https://127.0.0.1:8080<br>//socket<br>git config --global http.proxy &#x27;socks5://127.0.0.1:8080&#x27;<br>git config --global https.proxy &#x27;socks5://127.0.0.1:8080&#x27;<br></code></pre></td></tr></table></figure><h2 id="参考文献："><a href="#参考文献：" class="headerlink" title="参考文献："></a>参考文献：</h2><p>[1] <a href="https://www.jianshu.com/p/faff1b74bd37">https://www.jianshu.com/p/faff1b74bd37</a><br>[2] <a href="https://www.niuqi360.com/linux/install-and-create-blog-with-hexo-on-ubuntu-20-04/">https://www.niuqi360.com/linux/install-and-create-blog-with-hexo-on-ubuntu-20-04/</a></p>]]></content>
      
      
      <categories>
          
          <category> 博客 </category>
          
          <category> Nodejs </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> Nodejs </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>学术论文句式整理(保持更新)</title>
      <link href="/2020/10/02/%E5%AD%A6%E6%9C%AF%E8%AE%BA%E6%96%87%E5%8F%A5%E5%BC%8F%E6%95%B4%E7%90%86/"/>
      <url>/2020/10/02/%E5%AD%A6%E6%9C%AF%E8%AE%BA%E6%96%87%E5%8F%A5%E5%BC%8F%E6%95%B4%E7%90%86/</url>
      
        <content type="html"><![CDATA[<h2 id="批判性描述"><a href="#批判性描述" class="headerlink" title="批判性描述"></a>批判性描述</h2><h3 id="突出以往研究的不足（Highlighting-inadequacies-of-previous-studies）"><a href="#突出以往研究的不足（Highlighting-inadequacies-of-previous-studies）" class="headerlink" title="突出以往研究的不足（Highlighting inadequacies of previous studies）"></a>突出以往研究的不足（Highlighting inadequacies of previous studies）</h3><p>Previous studies of X have not dealt with …<br>Researchers have not treated X in much detail.<br>Such expositions are unsatisfactory because they …<br>Most studies in the field of X have only focused on …<br>Such approaches, however, have failed to address …<br>Previous published studies are limited to local surveys.<br>Half of the studies evaluated failed to specify whether …<br>The research to date has tended to focus on X rather than Y.<br>Previously published studies on the effect of X are not consistent.<br>Smith’s analysis does not take account of …, nor does she examine …<br>The existing accounts fail to resolve the contradiction between X and Y.<br>Most studies of X have only been carried out in a small number of areas.<br>However, much of the research up to now has been descriptive in nature …<br>The generalisability of much published research on this issue is problematic.<br>Research on the subject has been mostly restricted to limited comparisons of …<br>However, few writers have been able to draw on any systematic research into …<br>Short-term studies such as these do not necessarily show subtle changes over time …<br>Although extensive research has been carried out on X, no single study exists which …<br>However, these results were based upon data from over 30 years ago and it is unclear if …<br>The experimental data are rather controversial, and there is no general agreement about …<br>以前对X的研究还没有涉及……<br>研究人员并未对X进行详细的处理。<br>这样的论述是不令人满意的，因为它们……<br>X领域的大多数研究仅集中于……<br>但是，这种方法却没有解决……<br>以前发表的研究仅限于本地调查。<br>评估的研究中有一半未能说明是否……<br>迄今为止，研究倾向于将重点放在X而不是Y上。<br>先前发表的关于X影响的研究不一致。<br>Smith的分析没有考虑…，也没有进行调查…<br>现有的说明无法解决X和Y之间的矛盾。X的<br>大多数研究仅在少数领域进行。<br>但是，到目前为止，许多研究本质上都是描述性的……<br>关于这一问题的许多已发表研究的普遍性是有问题的。<br>关于该主题的研究主要限于对…的有限比较。<br>但是，很少有作家能够对…进行任何系统的研究。<br>诸如此类的短期研究不一定会随着时间的流逝而发生细微的变化……<br>尽管已经进行了广泛的研究。在X上，没有一项单独的研究……<br>但是，这些结果是基于30年前的数据而来的，目前尚不清楚……<br>实验数据是否颇具争议，并且关于……还没有普遍的共识。</p><h3 id="识别单个研究或论文中的弱点-Identifying-a-weakness-in-a-single-study-or-paper-close"><a href="#识别单个研究或论文中的弱点-Identifying-a-weakness-in-a-single-study-or-paper-close" class="headerlink" title="识别单个研究或论文中的弱点(Identifying a weakness in a single study or paper - close)"></a>识别单个研究或论文中的弱点(Identifying a weakness in a single study or paper - close)</h3><p> (However,)Smith fails to fully define what …<br>Jones fails to acknowledge the significance of …<br>the author overlooks the fact that X contributes to Y.<br>what Smith fails to do is to draw a distinction between …<br>the paper would appear to be over-ambitious in its claims.<br>another weakness is that we are given no explanation of how …<br>no attempt was made to quantify the association between X and Y.<br>the main weakness of the study is the failure to address how …<br>the study fails to consider the differing categories of damage that …<br>the research does not take into account pre-existing … such as …<br>the author offers no explanation for the distinction between X and Y.<br>Smith makes no attempt to differentiate between different types of X. | </p><p>（然而，）史密斯未能完全定义……<br>琼斯未能承认……的意义……<br>作者忽视了X对Y作出贡献的事实。<br>史密斯未能做的是在两者之间做出区分……<br>论文似乎在主张上过于雄心勃勃 。<br>另一个弱点是我们没有解释如何……<br>没有尝试量化X和Y之间的关联<br>该研究的主要弱点是无法解决……<br>该研究没有考虑到不同的损害类别……<br>该研究没有考虑诸如……之类的先前存在的内容。<br>作者没有对X和Y之间的区别进行解释。<br>Smith并未尝试区分不同类型的X。 </p><p>Smith，The paper，The book、fails to；does not<br>makes no attempt to<br>specify …<br>quantify …<br>compare …<br>separate …<br>account for …<br>suggest why …<br>analyse how …<br>ascertain whether …<br>distinguish between …<br>explain the meaning of …<br>provide information on …<br>address the question of …<br>assess the effectiveness of …<br>use a standardised method of …<br>give sufficient consideration to …<br>consider the long term impact of …<br>offer an adequate explanation for …<br>engage with current discourses on …<br>determine the underlying causes of …<br>systematically review all the relevant literature. </p><p>史密斯、论文、书失败地；没有<br>没有尝试<br>指定…<br>量化……<br>比较……<br>分离开……<br>证明…<br>说明为什么……<br>分析如何…<br>确定是否……<br>在之间…区分<br>解释词义的…<br>提供…信息<br>地址的问题…<br>评估的有效性……<br>用……的标准化方法<br>给予足够的考虑…<br>考虑…的长期影响…<br>为…从事有关…的当前论述提供适当的解释…<br>确定…的根本原因…<br>系统地审查所有相关文献。</p><h3 id="提供建设性建议"><a href="#提供建设性建议" class="headerlink" title="提供建设性建议"></a>提供建设性建议</h3><p>The study would have been more interesting<br>The study would have been more interesting if it had included …<br>These studies would have been more useful if they had focused on …<br>The study would have been more relevant if the researchers had asked …<br>The questionnaire would have been more useful if it had asked participants about …<br>The research would have been more relevant if a wider range of X had been explored<br>A more comprehensive study would include all the groups of …<br>A better study would examine a large, randomly selected sample of societies with …<br>A much more systematic approach would identify how X interacts with other variables that are believed to be linked to …<br>如果包含以下内容，则该研究会更有趣… …<br>如果专注于这些研究，这些研究将更为有用…<br>如果研究人员提出..要求，则该研究将更加相关…<br>如果询问参与者，该问卷将更加有用。关于…<br>如果探索更广泛的X，则该研究将更有意义。<br>一项更全面的研究将包括…的所有群体。<br>一项更好的研究将通过…研究一个随机选择的大型社会样本。<br>一种更为系统的方法将确定X如何与被认为与…关联的其他变量相互作用。</p><h3 id="介绍问题和局限性：理论或论点"><a href="#介绍问题和局限性：理论或论点" class="headerlink" title="介绍问题和局限性：理论或论点"></a>介绍问题和局限性：理论或论点</h3><p>The main weakness with this theory is that …<br>The key problem with this explanation is that …<br>However, this theory does not fully explain why …<br>One criticism of much of the literature on X is that …<br>However, there is an inconsistency with this argument.<br>A serious weakness with this argument, however, is that …<br>One question that needs to be asked, however, is whether …<br>Smith’s argument relies too heavily on qualitative analysis of …<br>Smith’s interpretation overlooks much of the historical research …<br>Many writers have challenged Smith’s claim on the grounds that …<br>Smith’s analysis does not take account of X, nor does he examine …<br>It seems that Jones’ understanding of the X framework is questionable.<br>The existing accounts fail to resolve the contradiction between X and Y.<br>One of the limitations with this explanation is that it does not explain why…</p><p>该理论的主要弱点是：…<br>这种解释的关键问题是…<br>但是，该理论不能完全解释原因…<br>对X上许多文献的一种批评是…<br>但是，该论点存在矛盾之处。<br>但是，该论点的一个严重缺陷是……但是，<br>需要提出的一个问题是……<br>史密斯的论点是否过于依赖定性分析……<br>史密斯的解释忽视了<br>许多历史研究……许多作家对史密斯的主张提出了质疑。理由是……<br>史密斯的分析没有考虑X，也没有审查……<br>似乎琼斯对X框架的理解是有问题的。<br>现有帐户无法解决X和Y之间的矛盾。<br>这种解释的局限性之一是它不能解释为什么……</p><h3 id="问题和局限性介绍：方法或实践（drawbacks，limitations，weaknesses，shortcomings，disadvantages-）"><a href="#问题和局限性介绍：方法或实践（drawbacks，limitations，weaknesses，shortcomings，disadvantages-）" class="headerlink" title="问题和局限性介绍：方法或实践（drawbacks，limitations，weaknesses，shortcomings，disadvantages.）"></a>问题和局限性介绍：方法或实践（drawbacks，limitations，weaknesses，shortcomings，disadvantages.）</h3><p>One major drawback of this approach is that …<br>Selection bias is another potential concern because …<br>Perhaps the most serious disadvantage of this method is that …<br>The main limitation of biosynthetic incorporation, however, is …<br>Non-government agencies are also very critical of the new policies.<br>All the studies reviewed so far, however, suffer from the fact that …<br>Critics of laboratory-based experiments contend that such studies …<br>Another problem with this approach is that it fails to take X into account.<br>Difficulties arise, however, when an attempt is made to implement the policy.<br>Critics have also argued that not only do surveys provide an inaccurate measure of X, but the …<br>Nevertheless, the strategy has not escaped criticism from governments, agencies and academics.</p><p>这种方法的主要缺点是…<br>选择偏见是另一个潜在的问题，因为…<br>该方法最严重的缺点是…<br>但是，生物合成掺入的主要局限性是…<br>非政府机构对新方法也非常批评政策。<br>但是，到目前为止，所有复习的研究都受到以下事实的困扰<br>：基于实验室的实验的批评者认为，此类研究……<br>这种方法的另一个问题是，它没有考虑X。<br>但是，当尝试执行该策略时会遇到困难。<br>评论家们还指出，不仅调查提供的X值不准确，而且…<br>然而，该策略并未逃脱政府，机构和学者的批评。</p><h3 id="使用评估形容词评论研究"><a href="#使用评估形容词评论研究" class="headerlink" title="使用评估形容词评论研究"></a>使用评估形容词评论研究</h3><p>useful，timely，seminal，detailed，thorough，excellent，influential，important，innovative，pioneering，impressive，wide-ranging，comprehensive，ground-breaking </p><p>study (of X), survey (of X), analysis (of X), examination (of X), investigation (into X), </p><p>Smith (2012) showed that …<br>Jones (2013) concluded that … </p><h3 id="介绍一般批评"><a href="#介绍一般批评" class="headerlink" title="介绍一般批评"></a>介绍一般批评</h3><p>Critics question the ability of poststructuralist theory to provide …<br>Non-government agencies are also very critical of the new policies.<br>Smith’s meta-analysis has been subjected to considerable criticism.<br>The most important of these criticisms is that Smith failed to note that …<br>The X theory has been vigorously challenged in recent years by a number of writers.<br>These claims have been strongly contested in recent years by a number of writers.<br>More recent arguments against X have been summarised by Smith and Jones (1982):<br>Critics have also argued that not only do surveys provide an inaccurate measure of X, but the …<br>Many analysts now argue that the strategy of X has not been successful. Jones (2003), for example, argues that …</p><p>批评者质疑后结构主义理论提供的能力……<br>非政府机构也非常批评新政策。<br>史密斯的荟萃分析受到了相当多的批评。<br>这些批评中最重要的是史密斯未能指出……<br>近年来，许多作家对X理论提出了严峻的挑战。<br>近年来，许多作家都强烈质疑这些主张。<br>史密斯和琼斯（Smith and Jones，1982）总结了反对X的最新观点：<br>批评者还认为，不仅调查提供的X度量不准确，而且……<br>许多分析家现在认为X的策略并未成功。例如，琼斯（Jones）（2003）认为……</p><h3 id="介绍特定作家的批评立场"><a href="#介绍特定作家的批评立场" class="headerlink" title="介绍特定作家的批评立场"></a>介绍特定作家的批评立场</h3><p>Jones (2003) has also questioned why …<br>However, Jones (2003) points out that …<br>The author challenges the widely held view that …<br>Smith (1999) takes issue with the contention that …<br>The idea that … was first challenged by Smith (1992).<br>Smith is critical of the tendency to compartmentalise X.<br>However, Smith (1967) questioned this hypothesis and …<br>Smith (1980) broke with tradition by raising the question of …<br>Jones (2003) has challenged some of Smith’s conclusions, arguing that …<br>Another major criticism of Smith’s study, made by Jones (2003), is that …<br>Jones (2003) is critical of the conclusions that Smith draws from his findings.<br>An alternative interpretation of the origins of X can be found in Smith (1976).<br>Jones (2003) is probably the best known critic of the X theory. He argues that …<br>In her discussion of X, Smith further criticises the ways in which some authors …<br>Smith’s decision to reject the classical explanation of X merits some discussion …<br>The latter point has been devastatingly critiqued by Jones (2003), who argues that …<br>In a recent article in <em>Academic Journal</em>, Smith (2014) questions the extent to which …<br>A recently published article by Smith <em>et al</em>. (2011) casts doubt on Jones’ assumption that …<br>Other authors (see Harbison, 2003; Kaplan, 2004) question the usefulness of such an approach.</p><p>琼斯（2003）也质疑为什么……<br>但是，琼斯（2003）指出…<br>作者挑战了……<br>史密斯（1999）对<br>以下观点的质疑：……最早由史密斯（1992）提出质疑的观点）。<br>史密斯（Smith）对将X划分的趋势提出了批评。<br>然而，史密斯（1967）质疑了这一假设，<br>史密斯（1980）通过提出问题来打破了传统……<br>琼斯（2003）挑战了史密斯的某些结论，认为…<br>另一个主要问题琼斯（2003）对史密斯研究的批评是……<br>琼斯（2003）批评史密斯从他的发现中得出的结论。<br>X起源的另一种解释可以在Smith（1976）中找到。<br>琼斯（2003）可能是X理论最著名的批评家。他辩称：…<br>在对X的讨论中，史密斯进一步批评了一些作者的方式…<br>史密斯拒绝接受X的经典解释的决定值得进行讨论…<br>琼斯（2003）毁灭性地批评了后者，他认为… Smith（2014）<br>在《Academic Journal》上的最新文章中质疑……<br>Smith等人最近发表的文章的程度。（2011年）对琼斯的假设产生了怀疑。<br>其他作者（见Harbison，2003年； Kaplan，2004年）质疑这种方法的有效性。</p>]]></content>
      
      
      <categories>
          
          <category> 科研 </category>
          
          <category> 论文写作 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 总结与摘抄 </tag>
            
            <tag> 写作 </tag>
            
            <tag> 保持更新 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>厦门&amp;鼓浪屿</title>
      <link href="/2020/07/25/%E5%8E%A6%E9%97%A8&amp;%E9%BC%93%E6%B5%AA%E5%B1%BF/"/>
      <url>/2020/07/25/%E5%8E%A6%E9%97%A8&amp;%E9%BC%93%E6%B5%AA%E5%B1%BF/</url>
      
        <content type="html"><![CDATA[<p><img src="/2020/07/25/%E5%8E%A6%E9%97%A8&%E9%BC%93%E6%B5%AA%E5%B1%BF/first.jpg"></p><p><img src="/2020/07/25/%E5%8E%A6%E9%97%A8&%E9%BC%93%E6%B5%AA%E5%B1%BF/123.jpg"></p><p><img src="/2020/07/25/%E5%8E%A6%E9%97%A8&%E9%BC%93%E6%B5%AA%E5%B1%BF/4.jpg"></p><p><img src="/2020/07/25/%E5%8E%A6%E9%97%A8&%E9%BC%93%E6%B5%AA%E5%B1%BF/8.jpg"></p><p><img src="/2020/07/25/%E5%8E%A6%E9%97%A8&%E9%BC%93%E6%B5%AA%E5%B1%BF/5.jpg"></p><p><img src="/2020/07/25/%E5%8E%A6%E9%97%A8&%E9%BC%93%E6%B5%AA%E5%B1%BF/fdw.jpg"></p><p><img src="/2020/07/25/%E5%8E%A6%E9%97%A8&%E9%BC%93%E6%B5%AA%E5%B1%BF/6.jpg"></p>]]></content>
      
      
      <categories>
          
          <category> 生活 </category>
          
          <category> 心情&amp;日记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 心情 </tag>
            
            <tag> 照片 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PyTorch常用代码段合集（保持更新）</title>
      <link href="/2020/06/29/PyTorch%E5%B8%B8%E7%94%A8%E4%BB%A3%E7%A0%81%E6%AE%B5%E5%90%88%E9%9B%86/"/>
      <url>/2020/06/29/PyTorch%E5%B8%B8%E7%94%A8%E4%BB%A3%E7%A0%81%E6%AE%B5%E5%90%88%E9%9B%86/</url>
      
        <content type="html"><![CDATA[<script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML"></script><p>一些Pytorch常用的代码段，会慢慢继续填充。</p><p>$$x_2$$</p><p>$$sin^2\theta + cos^2\theta &#x3D; 1$$</p><p>首先需要调用的基本包大致为：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> collections<br><span class="hljs-keyword">import</span> os<br><span class="hljs-keyword">import</span> shutil<br><span class="hljs-keyword">import</span> tqdm<br><br><span class="hljs-keyword">import</span> numpy <span class="hljs-keyword">as</span> np<br><span class="hljs-keyword">import</span> PIL.Image<br><span class="hljs-keyword">import</span> torch<br><span class="hljs-keyword">import</span> torchvision<br></code></pre></td></tr></table></figure><h2 id="基础配置"><a href="#基础配置" class="headerlink" title="基础配置"></a><strong>基础配置</strong></h2><h3 id="检查-PyTorch-版本"><a href="#检查-PyTorch-版本" class="headerlink" title="检查 PyTorch 版本"></a><strong>检查 PyTorch 版本</strong></h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs python">torch.__version__               <span class="hljs-comment"># PyTorch version</span><br>torch.version.cuda              <span class="hljs-comment"># Corresponding CUDA version</span><br>torch.backends.cudnn.version()  <span class="hljs-comment"># Corresponding cuDNN version</span><br>torch.cuda.get_device_name(<span class="hljs-number">0</span>)   <span class="hljs-comment"># GPU type</span><br></code></pre></td></tr></table></figure><h3 id="更新PyTorch"><a href="#更新PyTorch" class="headerlink" title="更新PyTorch"></a><strong>更新PyTorch</strong></h3><p>PyTorch 将被安装在 anaconda3&#x2F;lib&#x2F;python3.7&#x2F;site-packages&#x2F;torch&#x2F;目录下。</p><figure class="highlight vb"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs vb">conda update pytorch torchvision -c pytorch<br></code></pre></td></tr></table></figure><h3 id="固定随机种子"><a href="#固定随机种子" class="headerlink" title="固定随机种子"></a><strong>固定随机种子</strong></h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs python">torch.manual_seed(<span class="hljs-number">0</span>)<br>torch.cuda.manual_seed_all(<span class="hljs-number">0</span>)<br></code></pre></td></tr></table></figure><h3 id="指定程序-运行在特定GPU卡上"><a href="#指定程序-运行在特定GPU卡上" class="headerlink" title="指定程序 运行在特定GPU卡上"></a><strong>指定程序 运行在特定GPU卡上</strong></h3><p>在命令行指定环境变量</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python">CUDA_VISIBLE_DEVICES=<span class="hljs-number">0</span>,<span class="hljs-number">1</span> python train.py<br></code></pre></td></tr></table></figure><p>或在代码中指定</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs Python">os.environ[<span class="hljs-string">&#x27;CUDA_VISIBLE_DEVICES&#x27;</span>] = <span class="hljs-string">&#x27;0,1&#x27;</span><br></code></pre></td></tr></table></figure><p>判断是否有 CUDA 支持</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs Python">torch.cuda.is_available()<br></code></pre></td></tr></table></figure><h3 id="设置为-cuDNN-benchmark-模式"><a href="#设置为-cuDNN-benchmark-模式" class="headerlink" title="设置为 cuDNN benchmark 模式"></a><strong>设置为 cuDNN benchmark 模式</strong></h3><p>Benchmark 模式会提升计算速度，但是由于计算中有随机性，每次网络前馈结果略有差异。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs Python">torch.backends.cudnn.benchmark = <span class="hljs-literal">True</span><br></code></pre></td></tr></table></figure><p>如果想要避免这种结果波动，设置</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs Python">torch.backends.cudnn.deterministic = <span class="hljs-literal">True</span><br></code></pre></td></tr></table></figure><h3 id="清除-GPU-存储"><a href="#清除-GPU-存储" class="headerlink" title="清除 GPU 存储"></a><strong>清除 GPU 存储</strong></h3><p>有时 Control-C 中止运行后 GPU 存储没有及时释放，需要手动清空。在 PyTorch 内部可以</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs Python">torch.cuda.empty_cache()<br></code></pre></td></tr></table></figure><p>或在命令行可以先使用 ps 找到程序的 PID，再使用 kill 结束该进程</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs Python">ps aux | grep pythonkill -<span class="hljs-number">9</span> [pid]<br></code></pre></td></tr></table></figure><p>或者直接重置没有被清空的 GPU</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs Python">nvidia-smi --gpu-reset -i [gpu_id]<br></code></pre></td></tr></table></figure><h2 id="张量处理"><a href="#张量处理" class="headerlink" title="张量处理"></a><strong>张量处理</strong></h2><h3 id="张量基本信息"><a href="#张量基本信息" class="headerlink" title="张量基本信息"></a><strong>张量基本信息</strong></h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs Python">tensor.<span class="hljs-built_in">type</span>()   <span class="hljs-comment"># Data type</span><br>tensor.size()   <span class="hljs-comment"># Shape of the tensor. It is a subclass of Python tuple</span><br>tensor.dim()    <span class="hljs-comment"># Number of dimensions.</span><br></code></pre></td></tr></table></figure><h3 id="数据类型转换"><a href="#数据类型转换" class="headerlink" title="数据类型转换"></a><strong>数据类型转换</strong></h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs Python"><span class="hljs-comment"># Set default tensor type. Float in PyTorch is much faster than double.</span><br>torch.set_default_tensor_type(torch.FloatTensor)<br><br><span class="hljs-comment"># Type convertions.</span><br>tensor = tensor.cuda()<br>tensor = tensor.cpu()<br>tensor = tensor.<span class="hljs-built_in">float</span>()<br>tensor = tensor.long()<br></code></pre></td></tr></table></figure><h3 id="torch-Tensor-与-np-ndarray-转换"><a href="#torch-Tensor-与-np-ndarray-转换" class="headerlink" title="torch.Tensor 与 np.ndarray 转换"></a><strong>torch.Tensor 与 np.ndarray 转换</strong></h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs Python"><span class="hljs-comment"># torch.Tensor -&gt; np.ndarray.</span><br>ndarray = tensor.cpu().numpy()<br><br><span class="hljs-comment"># np.ndarray -&gt; torch.Tensor.</span><br>tensor = torch.from_numpy(ndarray).<span class="hljs-built_in">float</span>()<br>tensor = torch.from_numpy(ndarray.copy()).<span class="hljs-built_in">float</span>()  <span class="hljs-comment"># If ndarray has negative stride</span><br></code></pre></td></tr></table></figure><h3 id="torch-Tensor-与-PIL-Image-转换"><a href="#torch-Tensor-与-PIL-Image-转换" class="headerlink" title="torch.Tensor 与 PIL.Image 转换"></a><strong>torch.Tensor 与 PIL.Image 转换</strong></h3><p>PyTorch 中的张量默认采用 N×D×H×W 的顺序，并且数据范围在 [0, 1]，需要进行转置和规范化。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs Python"><span class="hljs-comment"># torch.Tensor -&gt; PIL.Image.</span><br>image = PIL.Image.fromarray(torch.clamp(tensor * <span class="hljs-number">255</span>, <span class="hljs-built_in">min</span>=<span class="hljs-number">0</span>, <span class="hljs-built_in">max</span>=<span class="hljs-number">255</span><br>    ).byte().permute(<span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">0</span>).cpu().numpy())<br>image = torchvision.transforms.functional.to_pil_image(tensor)  <span class="hljs-comment"># Equivalently way</span><br><br><span class="hljs-comment"># PIL.Image -&gt; torch.Tensor.</span><br>tensor = torch.from_numpy(np.asarray(PIL.Image.<span class="hljs-built_in">open</span>(path))<br>    ).permute(<span class="hljs-number">2</span>, <span class="hljs-number">0</span>, <span class="hljs-number">1</span>).<span class="hljs-built_in">float</span>() / <span class="hljs-number">255</span><br>tensor = torchvision.transforms.functional.to_tensor(PIL.Image.<span class="hljs-built_in">open</span>(path))  <span class="hljs-comment"># Equivalently way</span><br></code></pre></td></tr></table></figure><h3 id="np-ndarray-与-PIL-Image-转换"><a href="#np-ndarray-与-PIL-Image-转换" class="headerlink" title="np.ndarray 与 PIL.Image 转换"></a><strong>np.ndarray 与 PIL.Image 转换</strong></h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs Python"><span class="hljs-comment"># np.ndarray -&gt; PIL.Image.</span><br>image = PIL.Image.fromarray(ndarray.astypde(np.uint8))<br><br><span class="hljs-comment"># PIL.Image -&gt; np.ndarray.</span><br>ndarray = np.asarray(PIL.Image.<span class="hljs-built_in">open</span>(path))<br></code></pre></td></tr></table></figure><h3 id="从只包含一个元素的张量中提取值"><a href="#从只包含一个元素的张量中提取值" class="headerlink" title="从只包含一个元素的张量中提取值"></a><strong>从只包含一个元素的张量中提取值</strong></h3><p>这在训练时统计 loss 的变化过程中特别有用。否则这将累积计算图，使 GPU 存储占用量越来越大。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs Python">value = tensor.item()<br></code></pre></td></tr></table></figure><h3 id="张量形变"><a href="#张量形变" class="headerlink" title="张量形变"></a><strong>张量形变</strong></h3><p>张量形变常常需要用于将卷积层特征输入全连接层的情形。相比 torch.view，torch.reshape 可以自动处理输入张量不连续的情况。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs Python">tensor = torch.reshape(tensor, shape)<br></code></pre></td></tr></table></figure><h3 id="打乱顺序"><a href="#打乱顺序" class="headerlink" title="打乱顺序"></a><strong>打乱顺序</strong></h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs Python">tensor = tensor[torch.randperm(tensor.size(<span class="hljs-number">0</span>))]  <span class="hljs-comment"># Shuffle the first dimension</span><br></code></pre></td></tr></table></figure><h3 id="水平翻转"><a href="#水平翻转" class="headerlink" title="水平翻转"></a><strong>水平翻转</strong></h3><p>PyTorch 不支持 tensor[::-1] 这样的负步长操作，水平翻转可以用张量索引实现。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs Python"><span class="hljs-comment"># Assume tensor has shape N*D*H*W.tensor = tensor[:, :, :, torch.arange(tensor.size(3) - 1, -1, -1).long()]</span><br></code></pre></td></tr></table></figure><h3 id="复制张量"><a href="#复制张量" class="headerlink" title="复制张量"></a><strong>复制张量</strong></h3><p>有三种复制的方式，对应不同的需求。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs Python"><span class="hljs-comment"># Operation                 |  New/Shared memory | Still in computation graph |</span><br>tensor.clone()            <span class="hljs-comment"># |        New         |          Yes               |</span><br>tensor.detach()           <span class="hljs-comment"># |      Shared        |          No                |</span><br>tensor.detach.clone()()   <span class="hljs-comment"># |        New         |          No                |</span><br></code></pre></td></tr></table></figure><h3 id="拼接张量"><a href="#拼接张量" class="headerlink" title="拼接张量"></a><strong>拼接张量</strong></h3><p>注意 torch.cat 和 torch.stack 的区别在于 torch.cat 沿着给定的维度拼接，而 torch.stack 会新增一维。例如当参数是 3 个 10×5 的张量，torch.cat 的结果是 30×5 的张量，而 torch.stack 的结果是 3×10×5 的张量。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs Python">tensor = torch.cat(list_of_tensors, dim=<span class="hljs-number">0</span>)<br>tensor = torch.stack(list_of_tensors, dim=<span class="hljs-number">0</span>)<br></code></pre></td></tr></table></figure><h3 id="将整数标记转换成独热（one-hot）编码"><a href="#将整数标记转换成独热（one-hot）编码" class="headerlink" title="将整数标记转换成独热（one-hot）编码"></a><strong>将整数标记转换成独热（one-hot）编码</strong></h3><p>PyTorch 中的标记默认从 0 开始。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs Python">N = tensor.size(<span class="hljs-number">0</span>)<br>one_hot = torch.zeros(N, num_classes).long()<br>one_hot.scatter_(dim=<span class="hljs-number">1</span>, index=torch.unsqueeze(tensor, dim=<span class="hljs-number">1</span>), src=torch.ones(N, num_classes).long())<br></code></pre></td></tr></table></figure><h3 id="得到非零-x2F-零元素"><a href="#得到非零-x2F-零元素" class="headerlink" title="得到非零&#x2F;零元素"></a><strong>得到非零&#x2F;零元素</strong></h3><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs jboss-cli">torch.nonzero<span class="hljs-params">(tensor)</span>               <span class="hljs-comment"># Index of non-zero elements</span><br>torch.nonzero<span class="hljs-params">(<span class="hljs-attr">tensor</span> == 0)</span>          <span class="hljs-comment"># Index of zero elements</span><br>torch.nonzero<span class="hljs-params">(tensor)</span><span class="hljs-string">.size</span><span class="hljs-params">(0)</span>       <span class="hljs-comment"># Number of non-zero elements</span><br>torch.nonzero<span class="hljs-params">(<span class="hljs-attr">tensor</span> == 0)</span><span class="hljs-string">.size</span><span class="hljs-params">(0)</span>  <span class="hljs-comment"># Number of zero elements</span><br></code></pre></td></tr></table></figure><h3 id="张量扩展"><a href="#张量扩展" class="headerlink" title="张量扩展"></a><strong>张量扩展</strong></h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs Python"><span class="hljs-comment"># Expand tensor of shape 64*512 to shape 64*512*7*7.</span><br>torch.reshape(tensor, (<span class="hljs-number">64</span>, <span class="hljs-number">512</span>, <span class="hljs-number">1</span>, <span class="hljs-number">1</span>)).expand(<span class="hljs-number">64</span>, <span class="hljs-number">512</span>, <span class="hljs-number">7</span>, <span class="hljs-number">7</span>)<br></code></pre></td></tr></table></figure><h3 id="矩阵乘法"><a href="#矩阵乘法" class="headerlink" title="矩阵乘法"></a><strong>矩阵乘法</strong></h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs Python"><span class="hljs-comment"># Matrix multiplication: (m*n) * (n*p) -&gt; (m*p).</span><br>result = torch.mm(tensor1, tensor2)<br><br><span class="hljs-comment"># Batch matrix multiplication: (b*m*n) * (b*n*p) -&gt; (b*m*p).</span><br>result = torch.bmm(tensor1, tensor2)<br><br><span class="hljs-comment"># Element-wise multiplication.</span><br>result = tensor1 * tensor2<br></code></pre></td></tr></table></figure><h3 id="计算两组数据之间的两两欧式距离"><a href="#计算两组数据之间的两两欧式距离" class="headerlink" title="计算两组数据之间的两两欧式距离"></a><strong>计算两组数据之间的两两欧式距离</strong></h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs Python"><span class="hljs-comment"># X1 is of shape m*d.</span><br>X1 = torch.unsqueeze(X1, dim=<span class="hljs-number">1</span>).expand(m, n, d)<br><span class="hljs-comment"># X2 is of shape n*d.</span><br>X2 = torch.unsqueeze(X2, dim=<span class="hljs-number">0</span>).expand(m, n, d)<br><span class="hljs-comment"># dist is of shape m*n, where dist[i][j] = sqrt(|X1[i, :] - X[j, :]|^2)</span><br>dist = torch.sqrt(torch.<span class="hljs-built_in">sum</span>((X1 - X2) ** <span class="hljs-number">2</span>, dim=<span class="hljs-number">2</span>))<br></code></pre></td></tr></table></figure><h2 id="模型定义"><a href="#模型定义" class="headerlink" title="模型定义"></a><strong>模型定义</strong></h2><h3 id="卷积层"><a href="#卷积层" class="headerlink" title="卷积层"></a><strong>卷积层</strong></h3><p>最常用的卷积层配置是</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs Python">conv = torch.nn.Conv2d(in_channels, out_channels, kernel_size=<span class="hljs-number">3</span>, stride=<span class="hljs-number">1</span>, padding=<span class="hljs-number">1</span>, bias=<span class="hljs-literal">True</span>)conv = torch.nn.Conv2d(in_channels, out_channels, kernel_size=<span class="hljs-number">1</span>, stride=<span class="hljs-number">1</span>, padding=<span class="hljs-number">0</span>, bias=<span class="hljs-literal">True</span>)<br></code></pre></td></tr></table></figure><p>如果卷积层配置比较复杂，不方便计算输出大小时，可以利用如下可视化工具辅助</p><p>链接：<a href="https://ezyang.github.io/convolution-visualizer/index.html">https://ezyang.github.io/convolution-visualizer/index.html</a></p><h3 id="0GAP（Global-average-pooling）层"><a href="#0GAP（Global-average-pooling）层" class="headerlink" title="0GAP（Global average pooling）层"></a><strong>0GAP（Global average pooling）层</strong></h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs Python">gap = torch.nn.AdaptiveAvgPool2d(output_size=<span class="hljs-number">1</span>)<br></code></pre></td></tr></table></figure><h3 id="双线性汇合（bilinear-pooling）"><a href="#双线性汇合（bilinear-pooling）" class="headerlink" title="双线性汇合（bilinear pooling）"></a><strong>双线性汇合（bilinear pooling）</strong></h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs Python">X = torch.reshape(N, D, H * W)                        <span class="hljs-comment"># Assume X has shape N*D*H*W</span><br>X = torch.bmm(X, torch.transpose(X, <span class="hljs-number">1</span>, <span class="hljs-number">2</span>)) / (H * W)  <span class="hljs-comment"># Bilinear pooling</span><br><span class="hljs-keyword">assert</span> X.size() == (N, D, D)<br>X = torch.reshape(X, (N, D * D))<br>X = torch.sign(X) * torch.sqrt(torch.<span class="hljs-built_in">abs</span>(X) + <span class="hljs-number">1e-5</span>)   <span class="hljs-comment"># Signed-sqrt normalization</span><br>X = torch.nn.functional.normalize(X)                  <span class="hljs-comment"># L2 normalization</span><br></code></pre></td></tr></table></figure><h3 id="多卡同步-BN（Batch-normalization）"><a href="#多卡同步-BN（Batch-normalization）" class="headerlink" title="多卡同步 BN（Batch normalization）"></a><strong>多卡同步 BN（Batch normalization）</strong></h3><p>当使用 torch.nn.DataParallel 将代码运行在多张 GPU 卡上时，PyTorch 的 BN 层默认操作是各卡上数据独立地计算均值和标准差，同步 BN 使用所有卡上的数据一起计算 BN 层的均值和标准差，缓解了当批量大小（batch size）比较小时对均值和标准差估计不准的情况，是在目标检测等任务中一个有效的提升性能的技巧。</p><p>链接：<a href="https://github.com/vacancy/Synchronized-BatchNorm-PyTorch">https://github.com/vacancy/Synchronized-BatchNorm-PyTorch</a></p><h3 id="类似-BN-滑动平均"><a href="#类似-BN-滑动平均" class="headerlink" title="类似 BN 滑动平均"></a><strong>类似 BN 滑动平均</strong></h3><p>如果要实现类似 BN 滑动平均的操作，在 forward 函数中要使用原地（inplace）操作给滑动平均赋值。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs Python"><span class="hljs-keyword">class</span> <span class="hljs-title class_">BN</span>(torch.nn.Module)<br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__init__</span>(<span class="hljs-params">self</span>):<br>        ...<br>        self.register_buffer(<span class="hljs-string">&#x27;running_mean&#x27;</span>, torch.zeros(num_features))<br><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">forward</span>(<span class="hljs-params">self, X</span>):<br>        ...<br>        self.running_mean += momentum * (current - self.running_mean)<br></code></pre></td></tr></table></figure><h3 id="计算模型整体参数量"><a href="#计算模型整体参数量" class="headerlink" title="计算模型整体参数量"></a><strong>计算模型整体参数量</strong></h3><figure class="highlight fortran"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs fortran">num_parameters = <span class="hljs-built_in">sum</span>(torch.numel(<span class="hljs-keyword">parameter</span>) for <span class="hljs-keyword">parameter</span> <span class="hljs-keyword">in</span> model.parameters())<br></code></pre></td></tr></table></figure><h3 id="类似-Keras-的-model-summary-输出模型信息"><a href="#类似-Keras-的-model-summary-输出模型信息" class="headerlink" title="类似 Keras 的 model.summary() 输出模型信息"></a><strong>类似 Keras 的 model.summary() 输出模型信息</strong></h3><p>链接：<a href="https://github.com/sksq96/pytorch-summary">https://github.com/sksq96/pytorch-summary</a></p><h3 id="模型权值初始化"><a href="#模型权值初始化" class="headerlink" title="模型权值初始化"></a><strong>模型权值初始化</strong></h3><p>注意model.modules() 和model.children() 的区别：model.modules() 会迭代地遍历模型的所有子层，而 model.children() 只会遍历模型下的一层。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs Python"><span class="hljs-comment"># Common practise for initialization.</span><br><span class="hljs-keyword">for</span> layer <span class="hljs-keyword">in</span> model.modules():<br>    <span class="hljs-keyword">if</span> <span class="hljs-built_in">isinstance</span>(layer, torch.nn.Conv2d):<br>        torch.nn.init.kaiming_normal_(layer.weight, mode=<span class="hljs-string">&#x27;fan_out&#x27;</span>,<br>                                      nonlinearity=<span class="hljs-string">&#x27;relu&#x27;</span>)<br>        <span class="hljs-keyword">if</span> layer.bias <span class="hljs-keyword">is</span> <span class="hljs-keyword">not</span> <span class="hljs-literal">None</span>:<br>            torch.nn.init.constant_(layer.bias, val=<span class="hljs-number">0.0</span>)<br>    <span class="hljs-keyword">elif</span> <span class="hljs-built_in">isinstance</span>(layer, torch.nn.BatchNorm2d):<br>        torch.nn.init.constant_(layer.weight, val=<span class="hljs-number">1.0</span>)<br>        torch.nn.init.constant_(layer.bias, val=<span class="hljs-number">0.0</span>)<br>    <span class="hljs-keyword">elif</span> <span class="hljs-built_in">isinstance</span>(layer, torch.nn.Linear):<br>        torch.nn.init.xavier_normal_(layer.weight)<br>        <span class="hljs-keyword">if</span> layer.bias <span class="hljs-keyword">is</span> <span class="hljs-keyword">not</span> <span class="hljs-literal">None</span>:<br>            torch.nn.init.constant_(layer.bias, val=<span class="hljs-number">0.0</span>)<br><br><span class="hljs-comment"># Initialization with given tensor.</span><br>layer.weight = torch.nn.Parameter(tensor)<br></code></pre></td></tr></table></figure><h3 id="部分层使用预训练模型"><a href="#部分层使用预训练模型" class="headerlink" title="部分层使用预训练模型"></a><strong>部分层使用预训练模型</strong></h3><p>注意如果保存的模型是 torch.nn.DataParallel，则当前的模型也需要是</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs Python">model.load_state_dict(torch.load(<span class="hljs-string">&#x27;model,pth&#x27;</span>), strict=<span class="hljs-literal">False</span>)<br></code></pre></td></tr></table></figure><h3 id="将在-GPU-保存的模型加载到-CPU"><a href="#将在-GPU-保存的模型加载到-CPU" class="headerlink" title="将在 GPU 保存的模型加载到 CPU"></a><strong>将在 GPU 保存的模型加载到 CPU</strong></h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs Python">model.load_state_dict(torch.load(<span class="hljs-string">&#x27;model,pth&#x27;</span>, map_location=<span class="hljs-string">&#x27;cpu&#x27;</span>))<br></code></pre></td></tr></table></figure><h2 id="数据准备、特征提取与微调"><a href="#数据准备、特征提取与微调" class="headerlink" title="数据准备、特征提取与微调"></a><strong>数据准备、特征提取与微调</strong></h2><h3 id="得到视频数据基本信息"><a href="#得到视频数据基本信息" class="headerlink" title="得到视频数据基本信息"></a><strong>得到视频数据基本信息</strong></h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs Python"><span class="hljs-keyword">import</span> cv2<br>video = cv2.VideoCapture(mp4_path)<br>height = <span class="hljs-built_in">int</span>(video.get(cv2.CAP_PROP_FRAME_HEIGHT))<br>width = <span class="hljs-built_in">int</span>(video.get(cv2.CAP_PROP_FRAME_WIDTH))<br>num_frames = <span class="hljs-built_in">int</span>(video.get(cv2.CAP_PROP_FRAME_COUNT))<br>fps = <span class="hljs-built_in">int</span>(video.get(cv2.CAP_PROP_FPS))<br>video.release()<br></code></pre></td></tr></table></figure><h3 id="TSN-每段（segment）采样一帧视频"><a href="#TSN-每段（segment）采样一帧视频" class="headerlink" title="TSN 每段（segment）采样一帧视频"></a><strong>TSN 每段（segment）采样一帧视频</strong></h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs Python">K = self._num_segments<br><span class="hljs-keyword">if</span> is_train:<br>    <span class="hljs-keyword">if</span> num_frames &gt; K:<br>        <span class="hljs-comment"># Random index for each segment.</span><br>        frame_indices = torch.randint(<br>            high=num_frames // K, size=(K,), dtype=torch.long)<br>        frame_indices += num_frames // K * torch.arange(K)<br>    <span class="hljs-keyword">else</span>:<br>        frame_indices = torch.randint(<br>            high=num_frames, size=(K - num_frames,), dtype=torch.long)<br>        frame_indices = torch.sort(torch.cat((<br>            torch.arange(num_frames), frame_indices)))[<span class="hljs-number">0</span>]<br><span class="hljs-keyword">else</span>:<br>    <span class="hljs-keyword">if</span> num_frames &gt; K:<br>        <span class="hljs-comment"># Middle index for each segment.</span><br>        frame_indices = num_frames / K // <span class="hljs-number">2</span><br>        frame_indices += num_frames // K * torch.arange(K)<br>    <span class="hljs-keyword">else</span>:<br>        frame_indices = torch.sort(torch.cat((                              <br>            torch.arange(num_frames), torch.arange(K - num_frames))))[<span class="hljs-number">0</span>]<br><span class="hljs-keyword">assert</span> frame_indices.size() == (K,)<br><span class="hljs-keyword">return</span> [frame_indices[i] <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(K)]<br></code></pre></td></tr></table></figure><h3 id="提取-ImageNet-预训练模型某层的卷积特征"><a href="#提取-ImageNet-预训练模型某层的卷积特征" class="headerlink" title="提取 ImageNet 预训练模型某层的卷积特征"></a><strong>提取 ImageNet 预训练模型某层的卷积特征</strong></h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs Python"><span class="hljs-comment"># VGG-16 relu5-3 feature.</span><br>model = torchvision.models.vgg16(pretrained=<span class="hljs-literal">True</span>).features[:-<span class="hljs-number">1</span>]<br><span class="hljs-comment"># VGG-16 pool5 feature.</span><br>model = torchvision.models.vgg16(pretrained=<span class="hljs-literal">True</span>).features<br><span class="hljs-comment"># VGG-16 fc7 feature.</span><br>model = torchvision.models.vgg16(pretrained=<span class="hljs-literal">True</span>)<br>model.classifier = torch.nn.Sequential(*<span class="hljs-built_in">list</span>(model.classifier.children())[:-<span class="hljs-number">3</span>])<br><span class="hljs-comment"># ResNet GAP feature.</span><br>model = torchvision.models.resnet18(pretrained=<span class="hljs-literal">True</span>)<br>model = torch.nn.Sequential(collections.OrderedDict(<br>    <span class="hljs-built_in">list</span>(model.named_children())[:-<span class="hljs-number">1</span>]))<br><br><span class="hljs-keyword">with</span> torch.no_grad():<br>    model.<span class="hljs-built_in">eval</span>()<br>    conv_representation = model(image)<br></code></pre></td></tr></table></figure><h3 id="提取-ImageNet-预训练模型多层的卷积特征"><a href="#提取-ImageNet-预训练模型多层的卷积特征" class="headerlink" title="提取 ImageNet 预训练模型多层的卷积特征"></a><strong>提取 ImageNet 预训练模型多层的卷积特征</strong></h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><code class="hljs Python"><span class="hljs-keyword">class</span> <span class="hljs-title class_">FeatureExtractor</span>(torch.nn.Module):<br>    <span class="hljs-string">&quot;&quot;&quot;Helper class to extract several convolution features from the given</span><br><span class="hljs-string">    pre-trained model.</span><br><span class="hljs-string"></span><br><span class="hljs-string">    Attributes:</span><br><span class="hljs-string">        _model, torch.nn.Module.</span><br><span class="hljs-string">        _layers_to_extract, list&lt;str&gt; or set&lt;str&gt;</span><br><span class="hljs-string"></span><br><span class="hljs-string">    Example:</span><br><span class="hljs-string">        &gt;&gt;&gt; model = torchvision.models.resnet152(pretrained=True)</span><br><span class="hljs-string">        &gt;&gt;&gt; model = torch.nn.Sequential(collections.OrderedDict(</span><br><span class="hljs-string">                list(model.named_children())[:-1]))</span><br><span class="hljs-string">        &gt;&gt;&gt; conv_representation = FeatureExtractor(</span><br><span class="hljs-string">                pretrained_model=model,</span><br><span class="hljs-string">                layers_to_extract=&#123;&#x27;layer1&#x27;, &#x27;layer2&#x27;, &#x27;layer3&#x27;, &#x27;layer4&#x27;&#125;)(image)</span><br><span class="hljs-string">    &quot;&quot;&quot;</span><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__init__</span>(<span class="hljs-params">self, pretrained_model, layers_to_extract</span>):<br>        torch.nn.Module.__init__(self)<br>        self._model = pretrained_model<br>        self._model.<span class="hljs-built_in">eval</span>()<br>        self._layers_to_extract = <span class="hljs-built_in">set</span>(layers_to_extract)<br><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">forward</span>(<span class="hljs-params">self, x</span>):<br>        <span class="hljs-keyword">with</span> torch.no_grad():<br>            conv_representation = []<br>            <span class="hljs-keyword">for</span> name, layer <span class="hljs-keyword">in</span> self._model.named_children():<br>                x = layer(x)<br>                <span class="hljs-keyword">if</span> name <span class="hljs-keyword">in</span> self._layers_to_extract:<br>                    conv_representation.append(x)<br>            <span class="hljs-keyword">return</span> conv_representation<br></code></pre></td></tr></table></figure><h3 id="其他预训练模型"><a href="#其他预训练模型" class="headerlink" title="其他预训练模型"></a><strong>其他预训练模型</strong></h3><p>链接：<a href="https://github.com/Cadene/pretrained-models.pytorch">https://github.com/Cadene/pretrained-models.pytorch</a></p><h3 id="微调全连接层"><a href="#微调全连接层" class="headerlink" title="微调全连接层"></a><strong>微调全连接层</strong></h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs Python">model = torchvision.models.resnet18(pretrained=<span class="hljs-literal">True</span>)<br><span class="hljs-keyword">for</span> param <span class="hljs-keyword">in</span> model.parameters():<br>    param.requires_grad = <span class="hljs-literal">False</span><br>model.fc = nn.Linear(<span class="hljs-number">512</span>, <span class="hljs-number">100</span>)  <span class="hljs-comment"># Replace the last fc layer</span><br>optimizer = torch.optim.SGD(model.fc.parameters(), lr=<span class="hljs-number">1e-2</span>, momentum=<span class="hljs-number">0.9</span>, weight_decay=<span class="hljs-number">1e-4</span>)<br></code></pre></td></tr></table></figure><h3 id="以较大学习率微调全连接层，较小学习率微调卷积层"><a href="#以较大学习率微调全连接层，较小学习率微调卷积层" class="headerlink" title="以较大学习率微调全连接层，较小学习率微调卷积层"></a><strong>以较大学习率微调全连接层，较小学习率微调卷积层</strong></h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs Python">model = torchvision.models.resnet18(pretrained=<span class="hljs-literal">True</span>)<br>finetuned_parameters = <span class="hljs-built_in">list</span>(<span class="hljs-built_in">map</span>(<span class="hljs-built_in">id</span>, model.fc.parameters()))<br>conv_parameters = (p <span class="hljs-keyword">for</span> p <span class="hljs-keyword">in</span> model.parameters() <span class="hljs-keyword">if</span> <span class="hljs-built_in">id</span>(p) <span class="hljs-keyword">not</span> <span class="hljs-keyword">in</span> finetuned_parameters)<br>parameters = [&#123;<span class="hljs-string">&#x27;params&#x27;</span>: conv_parameters, <span class="hljs-string">&#x27;lr&#x27;</span>: <span class="hljs-number">1e-3</span>&#125;, <br>              &#123;<span class="hljs-string">&#x27;params&#x27;</span>: model.fc.parameters()&#125;]<br>optimizer = torch.optim.SGD(parameters, lr=<span class="hljs-number">1e-2</span>, momentum=<span class="hljs-number">0.9</span>, weight_decay=<span class="hljs-number">1e-4</span>)<br></code></pre></td></tr></table></figure><h2 id="模型训练"><a href="#模型训练" class="headerlink" title="模型训练"></a><strong>模型训练</strong></h2><h3 id="常用训练和验证数据预处理"><a href="#常用训练和验证数据预处理" class="headerlink" title="常用训练和验证数据预处理"></a><strong>常用训练和验证数据预处理</strong></h3><p>其中 ToTensor 操作会将 PIL.Image 或形状为 H×W×D，数值范围为 [0, 255] 的 np.ndarray 转换为形状为 D×H×W，数值范围为 [0.0, 1.0] 的 torch.Tensor。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs Python">train_transform = torchvision.transforms.Compose([<br>    torchvision.transforms.RandomResizedCrop(size=<span class="hljs-number">224</span>,<br>                                             scale=(<span class="hljs-number">0.08</span>, <span class="hljs-number">1.0</span>)),<br>    torchvision.transforms.RandomHorizontalFlip(),<br>    torchvision.transforms.ToTensor(),<br>    torchvision.transforms.Normalize(mean=(<span class="hljs-number">0.485</span>, <span class="hljs-number">0.456</span>, <span class="hljs-number">0.406</span>),<br>                                     std=(<span class="hljs-number">0.229</span>, <span class="hljs-number">0.224</span>, <span class="hljs-number">0.225</span>)),<br> ])<br> val_transform = torchvision.transforms.Compose([<br>    torchvision.transforms.Resize(<span class="hljs-number">224</span>),<br>    torchvision.transforms.CenterCrop(<span class="hljs-number">224</span>),<br>    torchvision.transforms.ToTensor(),<br>    torchvision.transforms.Normalize(mean=(<span class="hljs-number">0.485</span>, <span class="hljs-number">0.456</span>, <span class="hljs-number">0.406</span>),<br>                                     std=(<span class="hljs-number">0.229</span>, <span class="hljs-number">0.224</span>, <span class="hljs-number">0.225</span>)),<br>])<br></code></pre></td></tr></table></figure><h3 id="训练基本代码框架"><a href="#训练基本代码框架" class="headerlink" title="训练基本代码框架"></a><strong>训练基本代码框架</strong></h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs Python"><span class="hljs-keyword">for</span> t <span class="hljs-keyword">in</span> epoch(<span class="hljs-number">80</span>):<br>    <span class="hljs-keyword">for</span> images, labels <span class="hljs-keyword">in</span> tqdm.tqdm(train_loader, desc=<span class="hljs-string">&#x27;Epoch %3d&#x27;</span> % (t + <span class="hljs-number">1</span>)):<br>        images, labels = images.cuda(), labels.cuda()<br>        scores = model(images)<br>        loss = loss_function(scores, labels)<br>        optimizer.zero_grad()<br>        loss.backward()<br>        optimizer.step()<br></code></pre></td></tr></table></figure><h3 id="标记平滑（label-smoothing）"><a href="#标记平滑（label-smoothing）" class="headerlink" title="标记平滑（label smoothing）"></a><strong>标记平滑（label smoothing）</strong></h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs Python"><span class="hljs-keyword">for</span> images, labels <span class="hljs-keyword">in</span> train_loader:<br>    images, labels = images.cuda(), labels.cuda()<br>    N = labels.size(<span class="hljs-number">0</span>)<br>    <span class="hljs-comment"># C is the number of classes.</span><br>    smoothed_labels = torch.full(size=(N, C), fill_value=<span class="hljs-number">0.1</span> / (C - <span class="hljs-number">1</span>)).cuda()<br>    smoothed_labels.scatter_(dim=<span class="hljs-number">1</span>, index=torch.unsqueeze(labels, dim=<span class="hljs-number">1</span>), value=<span class="hljs-number">0.9</span>)<br><br>    score = model(images)<br>    log_prob = torch.nn.functional.log_softmax(score, dim=<span class="hljs-number">1</span>)<br>    loss = -torch.<span class="hljs-built_in">sum</span>(log_prob * smoothed_labels) / N<br>    optimizer.zero_grad()<br>    loss.backward()<br>    optimizer.step()<br></code></pre></td></tr></table></figure><h3 id="Mixup"><a href="#Mixup" class="headerlink" title="Mixup"></a><strong>Mixup</strong></h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs Python">beta_distribution = torch.distributions.beta.Beta(alpha, alpha)<br><span class="hljs-keyword">for</span> images, labels <span class="hljs-keyword">in</span> train_loader:<br>    images, labels = images.cuda(), labels.cuda()<br><br>    <span class="hljs-comment"># Mixup images.</span><br>    lambda_ = beta_distribution.sample([]).item()<br>    index = torch.randperm(images.size(<span class="hljs-number">0</span>)).cuda()<br>    mixed_images = lambda_ * images + (<span class="hljs-number">1</span> - lambda_) * images[index, :]<br><br>    <span class="hljs-comment"># Mixup loss.    </span><br>    scores = model(mixed_images)<br>    loss = (lambda_ * loss_function(scores, labels) <br>            + (<span class="hljs-number">1</span> - lambda_) * loss_function(scores, labels[index]))<br><br>    optimizer.zero_grad()<br>    loss.backward()<br>    optimizer.step()<br></code></pre></td></tr></table></figure><h3 id="L1-正则化"><a href="#L1-正则化" class="headerlink" title="L1 正则化"></a><strong>L1 正则化</strong></h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs Python">l1_regularization = torch.nn.L1Loss(reduction=<span class="hljs-string">&#x27;sum&#x27;</span>)<br>loss = ...  <span class="hljs-comment"># Standard cross-entropy loss</span><br><span class="hljs-keyword">for</span> param <span class="hljs-keyword">in</span> model.parameters():<br>    loss += torch.<span class="hljs-built_in">sum</span>(torch.<span class="hljs-built_in">abs</span>(param))<br>loss.backward()<br></code></pre></td></tr></table></figure><h3 id="不对偏置项进行-L2-正则化-x2F-权值衰减（weight-decay）"><a href="#不对偏置项进行-L2-正则化-x2F-权值衰减（weight-decay）" class="headerlink" title="不对偏置项进行 L2 正则化&#x2F;权值衰减（weight decay）"></a><strong>不对偏置项进行 L2 正则化&#x2F;权值衰减（weight decay）</strong></h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs Python">bias_list = (param <span class="hljs-keyword">for</span> name, param <span class="hljs-keyword">in</span> model.named_parameters() <span class="hljs-keyword">if</span> name[-<span class="hljs-number">4</span>:] == <span class="hljs-string">&#x27;bias&#x27;</span>)<br>others_list = (param <span class="hljs-keyword">for</span> name, param <span class="hljs-keyword">in</span> model.named_parameters() <span class="hljs-keyword">if</span> name[-<span class="hljs-number">4</span>:] != <span class="hljs-string">&#x27;bias&#x27;</span>)<br>parameters = [&#123;<span class="hljs-string">&#x27;parameters&#x27;</span>: bias_list, <span class="hljs-string">&#x27;weight_decay&#x27;</span>: <span class="hljs-number">0</span>&#125;,                <br>              &#123;<span class="hljs-string">&#x27;parameters&#x27;</span>: others_list&#125;]<br>optimizer = torch.optim.SGD(parameters, lr=<span class="hljs-number">1e-2</span>, momentum=<span class="hljs-number">0.9</span>, weight_decay=<span class="hljs-number">1e-4</span>)<br></code></pre></td></tr></table></figure><h3 id="梯度裁剪（gradient-clipping）"><a href="#梯度裁剪（gradient-clipping）" class="headerlink" title="梯度裁剪（gradient clipping）"></a><strong>梯度裁剪（gradient clipping）</strong></h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs Python">torch.nn.utils.clip_grad_norm_(model.parameters(), max_norm=<span class="hljs-number">20</span>)<br></code></pre></td></tr></table></figure><h3 id="计算-Softmax-输出的准确率"><a href="#计算-Softmax-输出的准确率" class="headerlink" title="计算 Softmax 输出的准确率"></a><strong>计算 Softmax 输出的准确率</strong></h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs Python">score = model(images)<br>prediction = torch.argmax(score, dim=<span class="hljs-number">1</span>)<br>num_correct = torch.<span class="hljs-built_in">sum</span>(prediction == labels).item()<br>accuruacy = num_correct / labels.size(<span class="hljs-number">0</span>)<br></code></pre></td></tr></table></figure><h3 id="可视化模型前馈的计算图"><a href="#可视化模型前馈的计算图" class="headerlink" title="可视化模型前馈的计算图"></a><strong>可视化模型前馈的计算图</strong></h3><p>链接：<a href="https://github.com/szagoruyko/pytorchviz">https://github.com/szagoruyko/pytorchviz</a></p><h3 id="可视化学习曲线"><a href="#可视化学习曲线" class="headerlink" title="可视化学习曲线"></a><strong>可视化学习曲线</strong></h3><p>有 Facebook 自己开发的 Visdom 和 Tensorboard 两个选择。</p><p><a href="https://github.com/facebookresearch/visdom">https://github.com/facebookresearch/visdom</a></p><p><a href="https://github.com/lanpa/tensorboardX">https://github.com/lanpa/tensorboardX</a></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs Python"><span class="hljs-comment"># Example using Visdom.</span><br>vis = visdom.Visdom(env=<span class="hljs-string">&#x27;Learning curve&#x27;</span>, use_incoming_socket=<span class="hljs-literal">False</span>)<br><span class="hljs-keyword">assert</span> self._visdom.check_connection()<br>self._visdom.close()<br>options = collections.namedtuple(<span class="hljs-string">&#x27;Options&#x27;</span>, [<span class="hljs-string">&#x27;loss&#x27;</span>, <span class="hljs-string">&#x27;acc&#x27;</span>, <span class="hljs-string">&#x27;lr&#x27;</span>])(<br>    loss=&#123;<span class="hljs-string">&#x27;xlabel&#x27;</span>: <span class="hljs-string">&#x27;Epoch&#x27;</span>, <span class="hljs-string">&#x27;ylabel&#x27;</span>: <span class="hljs-string">&#x27;Loss&#x27;</span>, <span class="hljs-string">&#x27;showlegend&#x27;</span>: <span class="hljs-literal">True</span>&#125;,<br>    acc=&#123;<span class="hljs-string">&#x27;xlabel&#x27;</span>: <span class="hljs-string">&#x27;Epoch&#x27;</span>, <span class="hljs-string">&#x27;ylabel&#x27;</span>: <span class="hljs-string">&#x27;Accuracy&#x27;</span>, <span class="hljs-string">&#x27;showlegend&#x27;</span>: <span class="hljs-literal">True</span>&#125;,<br>    lr=&#123;<span class="hljs-string">&#x27;xlabel&#x27;</span>: <span class="hljs-string">&#x27;Epoch&#x27;</span>, <span class="hljs-string">&#x27;ylabel&#x27;</span>: <span class="hljs-string">&#x27;Learning rate&#x27;</span>, <span class="hljs-string">&#x27;showlegend&#x27;</span>: <span class="hljs-literal">True</span>&#125;)<br><br><span class="hljs-keyword">for</span> t <span class="hljs-keyword">in</span> epoch(<span class="hljs-number">80</span>):<br>    tran(...)<br>    val(...)<br>    vis.line(X=torch.Tensor([t + <span class="hljs-number">1</span>]), Y=torch.Tensor([train_loss]),<br>             name=<span class="hljs-string">&#x27;train&#x27;</span>, win=<span class="hljs-string">&#x27;Loss&#x27;</span>, update=<span class="hljs-string">&#x27;append&#x27;</span>, opts=options.loss)<br>    vis.line(X=torch.Tensor([t + <span class="hljs-number">1</span>]), Y=torch.Tensor([val_loss]),<br>             name=<span class="hljs-string">&#x27;val&#x27;</span>, win=<span class="hljs-string">&#x27;Loss&#x27;</span>, update=<span class="hljs-string">&#x27;append&#x27;</span>, opts=options.loss)<br>    vis.line(X=torch.Tensor([t + <span class="hljs-number">1</span>]), Y=torch.Tensor([train_acc]),<br>             name=<span class="hljs-string">&#x27;train&#x27;</span>, win=<span class="hljs-string">&#x27;Accuracy&#x27;</span>, update=<span class="hljs-string">&#x27;append&#x27;</span>, opts=options.acc)<br>    vis.line(X=torch.Tensor([t + <span class="hljs-number">1</span>]), Y=torch.Tensor([val_acc]),<br>             name=<span class="hljs-string">&#x27;val&#x27;</span>, win=<span class="hljs-string">&#x27;Accuracy&#x27;</span>, update=<span class="hljs-string">&#x27;append&#x27;</span>, opts=options.acc)<br>    vis.line(X=torch.Tensor([t + <span class="hljs-number">1</span>]), Y=torch.Tensor([lr]),<br>             win=<span class="hljs-string">&#x27;Learning rate&#x27;</span>, update=<span class="hljs-string">&#x27;append&#x27;</span>, opts=options.lr)<br></code></pre></td></tr></table></figure><h3 id="得到当前学习率"><a href="#得到当前学习率" class="headerlink" title="得到当前学习率"></a><strong>得到当前学习率</strong></h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs Python"><span class="hljs-comment"># If there is one global learning rate (which is the common case).</span><br>lr = <span class="hljs-built_in">next</span>(<span class="hljs-built_in">iter</span>(optimizer.param_groups))[<span class="hljs-string">&#x27;lr&#x27;</span>]<br><br><span class="hljs-comment"># If there are multiple learning rates for different layers.</span><br>all_lr = []<br><span class="hljs-keyword">for</span> param_group <span class="hljs-keyword">in</span> optimizer.param_groups:<br>    all_lr.append(param_group[<span class="hljs-string">&#x27;lr&#x27;</span>])<br></code></pre></td></tr></table></figure><h3 id="学习率衰减"><a href="#学习率衰减" class="headerlink" title="学习率衰减"></a><strong>学习率衰减</strong></h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs Python"><span class="hljs-comment"># Reduce learning rate when validation accuarcy plateau.</span><br>scheduler = torch.optim.lr_scheduler.ReduceLROnPlateau(optimizer, mode=<span class="hljs-string">&#x27;max&#x27;</span>, patience=<span class="hljs-number">5</span>, verbose=<span class="hljs-literal">True</span>)<br><span class="hljs-keyword">for</span> t <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">0</span>, <span class="hljs-number">80</span>):<br>    train(...); val(...)<br>    scheduler.step(val_acc)<br><br><span class="hljs-comment"># Cosine annealing learning rate.</span><br>scheduler = torch.optim.lr_scheduler.CosineAnnealingLR(optimizer, T_max=<span class="hljs-number">80</span>)<br><span class="hljs-comment"># Reduce learning rate by 10 at given epochs.</span><br>scheduler = torch.optim.lr_scheduler.MultiStepLR(optimizer, milestones=[<span class="hljs-number">50</span>, <span class="hljs-number">70</span>], gamma=<span class="hljs-number">0.1</span>)<br><span class="hljs-keyword">for</span> t <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">0</span>, <span class="hljs-number">80</span>):<br>    scheduler.step()    <br>    train(...); val(...)<br><br><span class="hljs-comment"># Learning rate warmup by 10 epochs.</span><br>scheduler = torch.optim.lr_scheduler.LambdaLR(optimizer, lr_lambda=<span class="hljs-keyword">lambda</span> t: t / <span class="hljs-number">10</span>)<br><span class="hljs-keyword">for</span> t <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">0</span>, <span class="hljs-number">10</span>):<br>    scheduler.step()<br>    train(...); val(...)<br></code></pre></td></tr></table></figure><h3 id="保存与加载断点"><a href="#保存与加载断点" class="headerlink" title="保存与加载断点"></a><strong>保存与加载断点</strong></h3><p>注意为了能够恢复训练，我们需要同时保存模型和优化器的状态，以及当前的训练轮数。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs Python"><span class="hljs-comment"># Save checkpoint.</span><br>is_best = current_acc &gt; best_acc<br>best_acc = <span class="hljs-built_in">max</span>(best_acc, current_acc)<br>checkpoint = &#123;<br>    <span class="hljs-string">&#x27;best_acc&#x27;</span>: best_acc,    <br>    <span class="hljs-string">&#x27;epoch&#x27;</span>: t + <span class="hljs-number">1</span>,<br>    <span class="hljs-string">&#x27;model&#x27;</span>: model.state_dict(),<br>    <span class="hljs-string">&#x27;optimizer&#x27;</span>: optimizer.state_dict(),<br>&#125;<br>model_path = os.path.join(<span class="hljs-string">&#x27;model&#x27;</span>, <span class="hljs-string">&#x27;checkpoint.pth.tar&#x27;</span>)<br>torch.save(checkpoint, model_path)<br><span class="hljs-keyword">if</span> is_best:<br>    shutil.copy(<span class="hljs-string">&#x27;checkpoint.pth.tar&#x27;</span>, model_path)<br><br><span class="hljs-comment"># Load checkpoint.</span><br><span class="hljs-keyword">if</span> resume:<br>    model_path = os.path.join(<span class="hljs-string">&#x27;model&#x27;</span>, <span class="hljs-string">&#x27;checkpoint.pth.tar&#x27;</span>)<br>    <span class="hljs-keyword">assert</span> os.path.isfile(model_path)<br>    checkpoint = torch.load(model_path)<br>    best_acc = checkpoint[<span class="hljs-string">&#x27;best_acc&#x27;</span>]<br>    start_epoch = checkpoint[<span class="hljs-string">&#x27;epoch&#x27;</span>]<br>    model.load_state_dict(checkpoint[<span class="hljs-string">&#x27;model&#x27;</span>])<br>    optimizer.load_state_dict(checkpoint[<span class="hljs-string">&#x27;optimizer&#x27;</span>])<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;Load checkpoint at epoch %d.&#x27;</span> % start_epoch)<br></code></pre></td></tr></table></figure><h3 id="计算准确率、查准率（precision）、查全率（recall）"><a href="#计算准确率、查准率（precision）、查全率（recall）" class="headerlink" title="计算准确率、查准率（precision）、查全率（recall）"></a><strong>计算准确率、查准率（precision）、查全率（recall）</strong></h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs Python"><span class="hljs-comment"># data[&#x27;label&#x27;] and data[&#x27;prediction&#x27;] are groundtruth label and prediction </span><br><span class="hljs-comment"># for each image, respectively.</span><br>accuracy = np.mean(data[<span class="hljs-string">&#x27;label&#x27;</span>] == data[<span class="hljs-string">&#x27;prediction&#x27;</span>]) * <span class="hljs-number">100</span><br><br><span class="hljs-comment"># Compute recision and recall for each class.</span><br><span class="hljs-keyword">for</span> c <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-built_in">len</span>(num_classes)):<br>    tp = np.dot((data[<span class="hljs-string">&#x27;label&#x27;</span>] == c).astype(<span class="hljs-built_in">int</span>),<br>                (data[<span class="hljs-string">&#x27;prediction&#x27;</span>] == c).astype(<span class="hljs-built_in">int</span>))<br>    tp_fp = np.<span class="hljs-built_in">sum</span>(data[<span class="hljs-string">&#x27;prediction&#x27;</span>] == c)<br>    tp_fn = np.<span class="hljs-built_in">sum</span>(data[<span class="hljs-string">&#x27;label&#x27;</span>] == c)<br>    precision = tp / tp_fp * <span class="hljs-number">100</span><br>    recall = tp / tp_fn * <span class="hljs-number">100</span><br></code></pre></td></tr></table></figure><h2 id="PyTorch-其他注意事项"><a href="#PyTorch-其他注意事项" class="headerlink" title="PyTorch 其他注意事项"></a><strong>PyTorch 其他注意事项</strong></h2><h3 id="模型定义部分"><a href="#模型定义部分" class="headerlink" title="模型定义部分"></a><strong>模型定义部分</strong></h3><ul><li><p>建议有参数的层和汇合（pooling）层使用 torch.nn 模块定义，激活函数直接使用 torch.nn.functional。</p></li><li><p>torch.nn 模块和 torch.nn.functional 的区别在于，torch.nn 模块在计算时底层调用了 torch.nn.functional，但 torch.nn 模块包括该层参数，还可以应对训练和测试两种网络状态。使用 torch.nn.functional 时要注意网络状态，如</p></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs Python"><span class="hljs-keyword">def</span> <span class="hljs-title function_">forward</span>(<span class="hljs-params">self, x</span>):<br>    ...<br>    x = torch.nn.functional.dropout(x, p=<span class="hljs-number">0.5</span>, training=self.training)<br></code></pre></td></tr></table></figure><ul><li>model(x) 前用 model.train() 和 model.eval() 切换网络状态。</li><li>不需要计算梯度的代码块用 with torch.no_grad() 包含起来。model.eval() 和 torch.no_grad() 的区别在于，model.eval() 是将网络切换为测试状态，例如 BN 和随机失活（dropout）在训练和测试阶段使用不同的计算方法。torch.no_grad() 是关闭 PyTorch 张量的自动求导机制，以减少存储使用和加速计算，得到的结果无法进行 loss.backward()。</li><li>torch.nn.CrossEntropyLoss 的输入不需要经过 Softmax。torch.nn.CrossEntropyLoss 等价于 torch.nn.functional.log_softmax + torch.nn.NLLLoss。</li><li>loss.backward() 前用 optimizer.zero_grad() 清除累积梯度。optimizer.zero_grad() 和 model.zero_grad() 效果一样。</li></ul><h3 id="性能与调试部分"><a href="#性能与调试部分" class="headerlink" title="性能与调试部分"></a><strong>性能与调试部分</strong></h3><ul><li>torch.utils.data.DataLoader 中尽量设置 pin_memory&#x3D;True，对特别小的数据集如 MNIST 设置 pin_memory&#x3D;False 反而更快一些。num_workers 的设置需要在实验中找到最快的取值。</li><li>用 del 及时删除不用的中间变量，节约 GPU 存储。</li><li>使用 inplace 操作可节约 GPU 存储，如</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs Python">x = torch.nn.functional.relu(x, inplace=<span class="hljs-literal">True</span>)<br></code></pre></td></tr></table></figure><ul><li>减少 CPU 和 GPU 之间的数据传输。例如如果你想知道一个 epoch 中每个 mini-batch 的 loss 和准确率，先将它们累积在 GPU 中等一个 epoch 结束之后一起传输回 CPU 会比每个 mini-batch 都进行一次 GPU 到 CPU 的传输更快。</li><li>使用半精度浮点数 half() 会有一定的速度提升，具体效率依赖于 GPU 型号。需要小心数值精度过低带来的稳定性问题。</li><li>时常使用 assert tensor.size() &#x3D;&#x3D; (N, D, H, W) 作为调试手段，确保张量维度和你设想中一致。</li><li>除了标记 y 外，尽量少使用一维张量，使用 n*1 的二维张量代替，可以避免一些意想不到的一维张量计算结果。</li><li>统计代码各部分耗时</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs Python"><span class="hljs-keyword">with</span> torch.autograd.profiler.profile(enabled=<span class="hljs-literal">True</span>, use_cuda=<span class="hljs-literal">False</span>) <span class="hljs-keyword">as</span> profile:<br>    ...<br><span class="hljs-built_in">print</span>(profile)<br></code></pre></td></tr></table></figure><p>或者在命令行运行</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">python -m torch.utils.bottleneck main.py<br></code></pre></td></tr></table></figure><p><strong>参考资料</strong></p><ul><li>PyTorch 官方代码：pytorch&#x2F;examples (<a href="https://link.zhihu.com/?target=https://github.com/pytorch/examples">https://link.zhihu.com/?target=https%3A//github.com/pytorch/examples</a>)</li><li>PyTorch 论坛：PyTorch Forums (<a href="https://link.zhihu.com/?target=https://discuss.pytorch.org/latest?order=views">https://link.zhihu.com/?target=https%3A//discuss.pytorch.org/latest%3Forder%3Dviews</a>)</li><li>PyTorch 文档：<a href="http://pytorch.org/docs/stable/index.html">http://pytorch.org/docs/stable/index.html</a> (<a href="https://link.zhihu.com/?target=http://pytorch.org/docs/stable/index.html">https://link.zhihu.com/?target=http%3A//pytorch.org/docs/stable/index.html</a>)</li><li>其他基于 PyTorch 的公开实现代码，来源互联网。</li></ul>]]></content>
      
      
      <categories>
          
          <category> 科研 </category>
          
          <category> Pytorch </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 代码摘抄 </tag>
            
            <tag> Pytorch </tag>
            
            <tag> DL </tag>
            
            <tag> 更新 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>多路电梯算法调度的解决思路——类设计角度</title>
      <link href="/2020/06/21/%E5%A4%9A%E8%B7%AF%E7%94%B5%E6%A2%AF%E7%AE%97%E6%B3%95%E8%B0%83%E5%BA%A6%E7%9A%84%E8%A7%A3%E5%86%B3%E6%80%9D%E8%B7%AF%E2%80%94%E2%80%94%E7%B1%BB%E8%AE%BE%E8%AE%A1%E8%A7%92%E5%BA%A6/"/>
      <url>/2020/06/21/%E5%A4%9A%E8%B7%AF%E7%94%B5%E6%A2%AF%E7%AE%97%E6%B3%95%E8%B0%83%E5%BA%A6%E7%9A%84%E8%A7%A3%E5%86%B3%E6%80%9D%E8%B7%AF%E2%80%94%E2%80%94%E7%B1%BB%E8%AE%BE%E8%AE%A1%E8%A7%92%E5%BA%A6/</url>
      
        <content type="html"><![CDATA[<p>这学期C++接触得有点多，为熟练类设计，做了一个多路电梯调度算法。</p><p>总的来说，这份代码主要包含调度核心算法、乘客行为设计、电梯动作函数设计等，最终完成了一个十路电梯的群控仿真算法系统。同时为了增强了整个电梯系统的控制简便性和高效性，还将电梯进行分组。也设计了不同时间段（早晚高峰、平时）的算法仿真流程。</p><p>OPP其实是一种思想，所以本博客的核心还是在于边写边继续加深面向对象编程的理解吧。</p><h2 id="整体代码框架"><a href="#整体代码框架" class="headerlink" title="整体代码框架"></a>整体代码框架</h2><p><img src="/2020/06/21/%E5%A4%9A%E8%B7%AF%E7%94%B5%E6%A2%AF%E7%AE%97%E6%B3%95%E8%B0%83%E5%BA%A6%E7%9A%84%E8%A7%A3%E5%86%B3%E6%80%9D%E8%B7%AF%E2%80%94%E2%80%94%E7%B1%BB%E8%AE%BE%E8%AE%A1%E8%A7%92%E5%BA%A6/kuangjia.png"></p><h2 id="整体调度思路"><a href="#整体调度思路" class="headerlink" title="整体调度思路"></a>整体调度思路</h2><p>总的来说，调度算法采用了短寻找楼层时间优先（SSTF-Shortest Seek Time First）算法，其分为<strong>内部调度</strong>和<strong>外部调度</strong>两个部分，最终形成每部电梯的任务库，每部电梯根据自己的任务库进行合理运行。</p><p><strong>内部调度</strong>中，电梯内部的楼层按钮被按下时，该任务即被送入此电梯的任务库中，等待被完成。</p><p><strong>外部调度</strong>则较为复杂，总体上来看，外部调度时通过计算电梯与外部请求发生的楼层距离，选择合理的、距离最近的电梯响应请求。如果所有的电梯都不是“合理的”，那么该请求被送入等待队列。其中，电梯的状态分为三类：1. 空闲电梯（“电梯空闲”状态）2. 上升电梯（“上升”状态和“上升中停靠”状态）3. 下降电梯（“下降”状态和“下降中停靠”状态）当外部请求发生时，调度算法将根据请求发生的楼层和请求的方向（向上或向下）从上面的三种状态的电梯中选择两种，从里面进行挑选。其中，“空闲电梯”是会一直被选中的，剩下一种要根据请求的方向确定，上升的请求就选中“上升电梯”，下降的请求就选中“下降电梯”。</p><p>确定候选电梯后需要对选出的可行电梯进行进一步筛选，筛选的原则是根据当前电梯的位置和乘客的位置赋予每部可行电梯一个权重，权重综合代表电梯和乘客之间的距离以及电梯目前的承载人数等，权重越大代表该部电梯越能快速接到该用户，最后将该乘客送入权重最大的电梯的任务库。</p><p>电梯类的<strong>状态转移图</strong>大致为：</p><p><img src="/2020/06/21/%E5%A4%9A%E8%B7%AF%E7%94%B5%E6%A2%AF%E7%AE%97%E6%B3%95%E8%B0%83%E5%BA%A6%E7%9A%84%E8%A7%A3%E5%86%B3%E6%80%9D%E8%B7%AF%E2%80%94%E2%80%94%E7%B1%BB%E8%AE%BE%E8%AE%A1%E8%A7%92%E5%BA%A6/b.png"></p><h2 id="具体代码"><a href="#具体代码" class="headerlink" title="具体代码"></a>具体代码</h2><h3 id="主函数Main-cpp"><a href="#主函数Main-cpp" class="headerlink" title="主函数Main.cpp"></a>主函数Main.cpp</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br></pre></td><td class="code"><pre><code class="hljs C++"><span class="hljs-comment">// lift.cpp : 此文件包含 &quot;main&quot; 函数。程序执行将在此处开始并结束。</span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;iostream&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&quot;ElevatorLift.h&quot;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;time.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&quot;Passenger.h&quot;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&quot;Group.h&quot;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-comment">//设定全局变量</span><br>ElevatorLift  * E[<span class="hljs-number">10</span>];                <span class="hljs-comment">//电梯指针 </span><br>Passenger     * P[<span class="hljs-number">1000</span>];              <span class="hljs-comment">//乘客指针</span><br>Group         * G[<span class="hljs-number">5</span>];                 <span class="hljs-comment">//电梯组指针</span><br>Time Nowtime;<br><span class="hljs-type">int</span> K = <span class="hljs-number">12</span>;                   <span class="hljs-comment">//电梯的最大载客数量         10&lt;K&lt;18</span><br><span class="hljs-type">int</span> N = <span class="hljs-number">400</span>;                 <span class="hljs-comment">//乘客数量                   0&lt;N&lt;1000</span><br><span class="hljs-type">int</span> M = <span class="hljs-number">1</span>;                  <span class="hljs-comment">//初始等待时间    （分钟）   0&lt;M&lt;10</span><br><span class="hljs-type">int</span> L = <span class="hljs-number">5</span>;                   <span class="hljs-comment">//乘客的乘梯次数             1&lt;L&lt;10</span><br><span class="hljs-type">int</span> S = <span class="hljs-number">1</span>;                   <span class="hljs-comment">//电梯速度    单位 :秒/层    1&lt;s&lt;5</span><br><span class="hljs-type">int</span> T = <span class="hljs-number">1</span>;                   <span class="hljs-comment">//乘客上下电梯的时间         2&lt;T&lt;10</span><br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">GuideInput</span><span class="hljs-params">()</span></span>;<br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">Show</span><span class="hljs-params">()</span></span>;<br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">over</span><span class="hljs-params">()</span></span>;<br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">summary</span><span class="hljs-params">()</span></span>;<br><span class="hljs-function"><span class="hljs-type">bool</span> <span class="hljs-title">IsOver</span><span class="hljs-params">()</span></span>;<br><br><span class="hljs-comment">//主函数</span><br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br><span class="hljs-built_in">srand</span>((<span class="hljs-type">int</span>)<span class="hljs-built_in">time</span>(<span class="hljs-number">0</span>));<br><span class="hljs-built_in">GuideInput</span>();<br>SYSTEMTIME NowTime;<br><span class="hljs-built_in">GetLocalTime</span>(&amp;NowTime);<br>Nowtime.<span class="hljs-built_in">set</span>(NowTime.wHour, NowTime.wMinute, NowTime.wSecond);<br>E[<span class="hljs-number">0</span>] = <span class="hljs-keyword">new</span> <span class="hljs-built_in">ElevatorLift</span>(S, K, T, &amp;Nowtime);<br>E[<span class="hljs-number">1</span>] = <span class="hljs-keyword">new</span> <span class="hljs-built_in">ElevatorLift</span>(S, K, T, &amp;Nowtime);<br>E[<span class="hljs-number">2</span>] = <span class="hljs-keyword">new</span> <span class="hljs-built_in">E1</span>(S, K, T, &amp;Nowtime);<br>E[<span class="hljs-number">3</span>] = <span class="hljs-keyword">new</span> <span class="hljs-built_in">E1</span>(S, K, T, &amp;Nowtime);<br>E[<span class="hljs-number">4</span>] = <span class="hljs-keyword">new</span> <span class="hljs-built_in">E2</span>(S, K, T, &amp;Nowtime);<br>E[<span class="hljs-number">5</span>] = <span class="hljs-keyword">new</span> <span class="hljs-built_in">E2</span>(S, K, T, &amp;Nowtime);<br>E[<span class="hljs-number">6</span>] = <span class="hljs-keyword">new</span> <span class="hljs-built_in">E3</span>(S, K, T, &amp;Nowtime);<br>E[<span class="hljs-number">7</span>] = <span class="hljs-keyword">new</span> <span class="hljs-built_in">E3</span>(S, K, T, &amp;Nowtime);<br>E[<span class="hljs-number">8</span>] = <span class="hljs-keyword">new</span> <span class="hljs-built_in">E4</span>(S, K, T, &amp;Nowtime);<br>E[<span class="hljs-number">9</span>] = <span class="hljs-keyword">new</span> <span class="hljs-built_in">E4</span>(S, K, T, &amp;Nowtime);<br><span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">5</span>; i++)   <span class="hljs-comment">//10台电梯分为5组</span><br>&#123;<br>G[i] = <span class="hljs-keyword">new</span> <span class="hljs-built_in">Group</span>(E[<span class="hljs-number">2</span>*i], E[<span class="hljs-number">2</span>*i + <span class="hljs-number">1</span>]);<br>&#125;<br><span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = <span class="hljs-number">0</span>; i &lt; N; i++)   <span class="hljs-comment">//所有乘客设置为Passenger类</span><br>&#123;<br>P[i] = <span class="hljs-keyword">new</span> <span class="hljs-built_in">Passenger</span>(M, L, E, &amp;Nowtime);<br>&#125;<br><br><span class="hljs-function">VOID CALLBACK <span class="hljs-title">myTimerProc</span><span class="hljs-params">(HWND hwnd, UINT uMsg, UINT idEvent, DWORD dwTime)</span></span>;<br>MSG msg;<br><span class="hljs-comment">//设定定时器，定时执行任务</span><br><span class="hljs-built_in">SetTimer</span>(<span class="hljs-literal">NULL</span>, <span class="hljs-number">1</span>, <span class="hljs-number">2000</span>, (TIMERPROC)myTimerProc);<br><span class="hljs-type">bool</span> flag = <span class="hljs-literal">true</span>;<br><span class="hljs-comment">//主循环</span><br><span class="hljs-keyword">while</span> (flag)<br>&#123;<br><span class="hljs-keyword">if</span> (<span class="hljs-built_in">IsOver</span>())<br>&#123;<br>flag = <span class="hljs-literal">false</span>;<br>&#125;<br><span class="hljs-built_in">Show</span>();<br><span class="hljs-keyword">if</span> (<span class="hljs-built_in">GetMessage</span>(&amp;msg, <span class="hljs-literal">NULL</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>)) &#123;<br><span class="hljs-built_in">TranslateMessage</span>(&amp;msg);<br><span class="hljs-built_in">DispatchMessage</span>(&amp;msg);<br>&#125;<br><br>&#125;<br><span class="hljs-built_in">KillTimer</span>(<span class="hljs-literal">NULL</span>, <span class="hljs-number">1</span>);<br><span class="hljs-built_in">summary</span>();<br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br><br>&#125;<br><br><span class="hljs-function">VOID CALLBACK <span class="hljs-title">myTimerProc</span><span class="hljs-params">(HWND hwnd, UINT uMsg, UINT idEvent, DWORD dwTime)</span></span><br><span class="hljs-function"></span>&#123;<br>Nowtime = Nowtime + <span class="hljs-number">1</span>;<br><span class="hljs-comment">//电梯组行动</span><br><span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">5</span>; i++)<br>&#123;<br>G[i]-&gt;<span class="hljs-built_in">action</span>();<br>&#125;<br><span class="hljs-comment">// 乘客活动</span><br><span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = <span class="hljs-number">0</span>; i &lt; N; i++)<br>&#123;<br>P[i]-&gt;<span class="hljs-built_in">action</span>();<br>&#125;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">GuideInput</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br>cout &lt;&lt; <span class="hljs-string">&quot;请输入乘客数量：&quot;</span> &lt;&lt; endl;<br>cin &gt;&gt; N;<br>cout &lt;&lt; <span class="hljs-string">&quot;请输入电梯的最大载客数量：&quot;</span> &lt;&lt; endl;<br>cin &gt;&gt; K;<br>cout &lt;&lt; <span class="hljs-string">&quot;请输入初始等待时间：&quot;</span> &lt;&lt; endl;<br>cin &gt;&gt; M;<br>cout &lt;&lt; <span class="hljs-string">&quot;请输入乘客的乘梯次数：&quot;</span> &lt;&lt; endl;<br>cin &gt;&gt; L;<br>cout &lt;&lt; <span class="hljs-string">&quot;请输入电梯的速度（单位:秒/层）：&quot;</span> &lt;&lt; endl;<br>cin &gt;&gt; S;<br>cout &lt;&lt; <span class="hljs-string">&quot;请输入每名乘客上下电梯的时间  ：&quot;</span> &lt;&lt; endl;<br>cin &gt;&gt; T;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">Show</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<span class="hljs-built_in">system</span>(<span class="hljs-string">&quot;cls&quot;</span>);<br>cout &lt;&lt; <span class="hljs-string">&quot;当前时间&quot;</span> &lt;&lt; endl;<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%d:%d:%d\n&quot;</span>, Nowtime.hour, Nowtime.minute, Nowtime.second);<br><br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;乘客ID   当前状态    当前楼层    目标楼层   组号   电梯号   剩余乘梯次数 \n&quot;</span>);<br><span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = <span class="hljs-number">0</span>; i &lt; N; i++)<br>&#123;<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%2d         %s         %2d          %2d       %2d       %2d        %2d\n&quot;</span><br>, i + <span class="hljs-number">1</span>, P[i]-&gt;<span class="hljs-built_in">GetStatus</span>(), P[i]-&gt;<span class="hljs-built_in">GetNowFloor</span>(), P[i]-&gt;<span class="hljs-built_in">GetNextFloor</span>(), P[i]-&gt;<span class="hljs-built_in">Getgroup</span>(), P[i]-&gt;<span class="hljs-built_in">Getwhich</span>(), P[i]-&gt;<span class="hljs-built_in">Gettimes</span>());<br><span class="hljs-comment">//printf(&quot;    下一次乘梯时间：%d:%d:%d\n &quot;, P[i]-&gt;NextTime.hour, P[i]-&gt;NextTime.minute, P[i]-&gt;NextTime.second);</span><br><br>&#125;<br> <br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;-------------------------------------------------------------------\n&quot;</span>);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;电梯号  当前状态 当前楼层  目标楼层  当前人数：\n&quot;</span>);<br><span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">10</span>; i++)<br>&#123;<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot; %2d       %4s       %2d        %2d       %2d\n&quot;</span><br>, i + <span class="hljs-number">1</span>, E[i]-&gt;<span class="hljs-built_in">GetStatus</span>(), E[i]-&gt;<span class="hljs-built_in">GetNowFloor</span>(), E[i]-&gt;<span class="hljs-built_in">GetNextFloor</span>(), E[i]-&gt;<span class="hljs-built_in">Getpeople</span>());<br><br>&#125;<br><br>&#125;<br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">over</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br><span class="hljs-built_in">system</span>(<span class="hljs-string">&quot;cls&quot;</span>);<br><br><span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">10</span>; i++)<br>&#123;<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%d号电梯：\n当前状态：%s   当前楼层：%d    目标楼层:%d  当前人数：%d\n&quot;</span>, i + <span class="hljs-number">1</span>, E[i]-&gt;<span class="hljs-built_in">GetStatus</span>(), E[i]-&gt;<span class="hljs-built_in">GetNowFloor</span>(), E[i]-&gt;<span class="hljs-built_in">GetNextFloor</span>(), E[i]-&gt;<span class="hljs-built_in">Getpeople</span>());<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;-------------------------------------------------------------------\n&quot;</span>);<br>&#125;<br><span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = <span class="hljs-number">0</span>; i &lt; N; i++)<br>&#123;<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%d号乘客：\n当前状态: %s   当前楼层: %d    目标楼层:%d   次数：%d\n&quot;</span>, i, P[i]-&gt;<span class="hljs-built_in">GetStatus</span>(), P[i]-&gt;<span class="hljs-built_in">GetNowFloor</span>(), P[i]-&gt;<span class="hljs-built_in">GetNextFloor</span>(), P[i]-&gt;<span class="hljs-built_in">Gettimes</span>());<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;组号：%d ，电梯号 ：%d\n&quot;</span>, P[i]-&gt;<span class="hljs-built_in">Getgroup</span>(), P[i]-&gt;<span class="hljs-built_in">Getwhich</span>());<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;    下一次乘梯时间：%d:%d:%d\n &quot;</span>, P[i]-&gt;NextTime.hour, P[i]-&gt;NextTime.minute, P[i]-&gt;NextTime.second);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;**********************************************************************\n&quot;</span>);<br>&#125;<br>&#125;<br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">summary</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br><span class="hljs-built_in">system</span>(<span class="hljs-string">&quot;cls&quot;</span>);<br>cout &lt;&lt; <span class="hljs-string">&quot;当前时间&quot;</span> &lt;&lt; endl;<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%d:%d:%d\n&quot;</span>, Nowtime.hour, Nowtime.minute, Nowtime.second);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;电梯号  忙碌时间(秒)  空闲时间(秒)    \n&quot;</span>);<br><span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">10</span>; i++)<br>&#123;<br><br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%2d        %3d            %3d\n&quot;</span>, i + <span class="hljs-number">1</span>, E[i]-&gt;<span class="hljs-built_in">Getbusy</span>(), E[i]-&gt;<span class="hljs-built_in">Getvacant</span>());<br><br>&#125;<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;**********************************************************************\n&quot;</span>);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;乘客ID   等待时间（秒） \n&quot;</span>);<br><span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = <span class="hljs-number">0</span>; i &lt; N; i++)<br>&#123;<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%2d        %3d\n&quot;</span>, i + <span class="hljs-number">1</span>, P[i]-&gt;<span class="hljs-built_in">GetTotal</span>());<br>&#125;<br><br>&#125;<br><span class="hljs-function"><span class="hljs-type">bool</span> <span class="hljs-title">IsOver</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br><span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = <span class="hljs-number">0</span>; i &lt; N; i++)<br>&#123;<br><span class="hljs-keyword">if</span> (P[i]-&gt;<span class="hljs-built_in">getstatus</span>() !=<span class="hljs-number">3</span> )<br>&#123;<br><span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;<br>&#125;<br>&#125;<br><span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="电梯类"><a href="#电梯类" class="headerlink" title="电梯类"></a>电梯类</h2><h3 id="ElevatorLift-h"><a href="#ElevatorLift-h" class="headerlink" title="ElevatorLift.h"></a>ElevatorLift.h</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br></pre></td><td class="code"><pre><code class="hljs C++"><span class="hljs-meta">#<span class="hljs-keyword">pragma</span> once</span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;Windows.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&quot;Time.h&quot;</span></span><br><span class="hljs-keyword">constexpr</span> <span class="hljs-keyword">auto</span> Max = <span class="hljs-number">40</span>;   <span class="hljs-comment">//楼层数目</span><br><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">ElevatorLift</span><br>&#123;<br><span class="hljs-keyword">public</span>:<br><span class="hljs-built_in">ElevatorLift</span>();<br><span class="hljs-built_in">ElevatorLift</span>(<span class="hljs-type">int</span> S, <span class="hljs-type">int</span> K, <span class="hljs-type">int</span> T, Time *tm);<br>~<span class="hljs-built_in">ElevatorLift</span>();<br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">action</span><span class="hljs-params">()</span></span>;<br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">UpdateNowFloor</span><span class="hljs-params">()</span></span>;          <span class="hljs-comment">//更新当前电梯所在楼层</span><br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">ChangeStatus</span><span class="hljs-params">()</span></span>;            <span class="hljs-comment">//改变电梯运行状态</span><br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">Run</span><span class="hljs-params">()</span></span>;                     <span class="hljs-comment">//电梯运行</span><br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">UpdateDestination</span><span class="hljs-params">()</span></span>;<span class="hljs-comment">//更新下一站的目的楼层</span><br><span class="hljs-function"><span class="hljs-type">int</span>  <span class="hljs-title">call</span><span class="hljs-params">()</span></span>;                    <span class="hljs-comment">//查看是否有人呼叫电梯</span><br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">IsTake</span><span class="hljs-params">()</span></span>;                  <span class="hljs-comment">//</span><br><span class="hljs-function"><span class="hljs-type">char</span> * <span class="hljs-title">GetStatus</span><span class="hljs-params">()</span></span>;             <span class="hljs-comment">//得到现在状态函数</span><br><span class="hljs-function"><span class="hljs-type">int</span>  <span class="hljs-title">GetNextFloor</span><span class="hljs-params">()</span></span>;<br><span class="hljs-function"><span class="hljs-type">int</span>  <span class="hljs-title">GetNowFloor</span><span class="hljs-params">()</span></span>;<br><span class="hljs-function"><span class="hljs-type">int</span>  <span class="hljs-title">Getpeople</span><span class="hljs-params">()</span></span>;<br><span class="hljs-function"><span class="hljs-type">int</span>  <span class="hljs-title">Getbusy</span><span class="hljs-params">()</span></span>;<br><span class="hljs-function"><span class="hljs-type">int</span>  <span class="hljs-title">Getvacant</span><span class="hljs-params">()</span></span>;<br><span class="hljs-function"><span class="hljs-keyword">virtual</span> <span class="hljs-type">void</span> <span class="hljs-title">SetUp</span><span class="hljs-params">(<span class="hljs-type">int</span> floor, <span class="hljs-type">int</span> n)</span></span>;<br><span class="hljs-function"><span class="hljs-keyword">virtual</span> <span class="hljs-type">void</span> <span class="hljs-title">SetDown</span><span class="hljs-params">(<span class="hljs-type">int</span> floor, <span class="hljs-type">int</span> n)</span></span>;<br><span class="hljs-function"><span class="hljs-keyword">virtual</span> <span class="hljs-type">void</span> <span class="hljs-title">SetInsideUp</span><span class="hljs-params">(<span class="hljs-type">int</span> floor, <span class="hljs-type">int</span> n)</span></span>;<br><span class="hljs-function"><span class="hljs-keyword">virtual</span> <span class="hljs-type">void</span> <span class="hljs-title">SetInsideDown</span><span class="hljs-params">(<span class="hljs-type">int</span> floor, <span class="hljs-type">int</span> n)</span></span>;<br><span class="hljs-keyword">protected</span>:<br><span class="hljs-keyword">enum</span> <span class="hljs-title class_">Status</span>  <span class="hljs-comment">// 电梯状态</span><br>&#123;<br>STOP,    <span class="hljs-comment">// 停止  </span><br>UP,      <span class="hljs-comment">// 向上运行</span><br>DOWN,    <span class="hljs-comment">// 向下运行</span><br>UPSTOP,  <span class="hljs-comment">// 上行过程中的暂停</span><br>DOWNSTOP <span class="hljs-comment">// 下行过程中的暂停</span><br>&#125;;<br>Status status;<br><span class="hljs-type">int</span>     NextFloor;<span class="hljs-comment">//电梯下一次需要停留的楼层</span><br><span class="hljs-type">int</span>     NowFloor;<span class="hljs-comment">//当前电梯所在楼层</span><br><span class="hljs-type">int</span>     Up[Max];<span class="hljs-comment">//电梯外部，记录乘客上行呼叫的楼层   Up[i]的数值代表第i层上行的呼叫电梯的乘客数量</span><br><span class="hljs-type">int</span>     Down[Max];    <span class="hljs-comment">//电梯外部，记录乘客下行呼叫的楼层   Down[i]的数值代表第i层下行的呼叫电梯的乘客数量</span><br><span class="hljs-type">int</span>     InsideUp[Max];<span class="hljs-comment">//电梯内部，设置乘客上行目的楼层的数组</span><br><span class="hljs-type">int</span>     InsideDown[Max];<span class="hljs-comment">//电梯内部，设置乘客下行目的楼层的数组</span><br><span class="hljs-type">int</span>     people;<span class="hljs-comment">//当前电梯的人数</span><br><span class="hljs-type">int</span>     capacity;<span class="hljs-comment">//当前电梯的容量</span><br><span class="hljs-type">float</span>   nowfloor;               <span class="hljs-comment">//用于计算当前楼层</span><br><span class="hljs-type">float</span>   speed;                  <span class="hljs-comment">//电梯当前运行的速度</span><br><span class="hljs-type">long</span>vacant;<span class="hljs-comment">//电梯空闲时间</span><br><span class="hljs-type">long</span>busy;    <span class="hljs-comment">//电梯运行的时间</span><br>TimeNextStart;<span class="hljs-comment">//电梯停靠以后下一次的启动时间</span><br>TimeStart;                  <span class="hljs-comment">//电梯启动的时间</span><br>TimeOver;                   <span class="hljs-comment">//电梯停止的时间</span><br>Time* nowtime;              <span class="hljs-comment">//当前时间指针</span><br><span class="hljs-type">unsigned</span> <span class="hljs-type">int</span> StopTime;<span class="hljs-comment">//电梯停靠的时间</span><br><span class="hljs-keyword">friend</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">Passenger</span>;    <span class="hljs-comment">//将自身数据提供给乘客</span><br><span class="hljs-type">char</span> str[<span class="hljs-number">10</span>];                   <span class="hljs-comment">//用于存放当前状态的</span><br><br>&#125;;<br><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">E1</span> :<span class="hljs-keyword">public</span> ElevatorLift      <span class="hljs-comment">//25-40楼层的电梯</span><br>&#123;<br><span class="hljs-keyword">public</span>:<br><br><span class="hljs-built_in">E1</span>(<span class="hljs-type">int</span> S, <span class="hljs-type">int</span> K, <span class="hljs-type">int</span> T, Time *tm);<br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">SetUp</span><span class="hljs-params">(<span class="hljs-type">int</span> floor, <span class="hljs-type">int</span> n)</span></span>;<br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">SetDown</span><span class="hljs-params">(<span class="hljs-type">int</span> floor, <span class="hljs-type">int</span> n)</span></span>;<br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">SetInsideUp</span><span class="hljs-params">(<span class="hljs-type">int</span> floor, <span class="hljs-type">int</span> n)</span></span>;<br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">SetInsideDown</span><span class="hljs-params">(<span class="hljs-type">int</span> floor, <span class="hljs-type">int</span> n)</span></span>;<br>&#125;;<br><span class="hljs-keyword">class</span> <span class="hljs-title class_">E2</span> :<span class="hljs-keyword">public</span> ElevatorLift      <span class="hljs-comment">//1-25楼层的电梯</span><br>&#123;<br><span class="hljs-keyword">public</span>:<br><span class="hljs-built_in">E2</span>(<span class="hljs-type">int</span> S, <span class="hljs-type">int</span> K, <span class="hljs-type">int</span> T, Time *tm);<br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">SetUp</span><span class="hljs-params">(<span class="hljs-type">int</span> floor, <span class="hljs-type">int</span> n)</span></span>;<br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">SetDown</span><span class="hljs-params">(<span class="hljs-type">int</span> floor, <span class="hljs-type">int</span> n)</span></span>;<br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">SetInsideUp</span><span class="hljs-params">(<span class="hljs-type">int</span> floor, <span class="hljs-type">int</span> n)</span></span>;<br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">SetInsideDown</span><span class="hljs-params">(<span class="hljs-type">int</span> floor, <span class="hljs-type">int</span> n)</span></span>;<br>&#125;;<br><span class="hljs-keyword">class</span> <span class="hljs-title class_">E3</span> :<span class="hljs-keyword">public</span> ElevatorLift     <span class="hljs-comment">//偶数楼层的电梯</span><br>&#123;<br><span class="hljs-keyword">public</span>:<br><span class="hljs-built_in">E3</span>(<span class="hljs-type">int</span> S, <span class="hljs-type">int</span> K, <span class="hljs-type">int</span> T, Time *tm);<br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">SetUp</span><span class="hljs-params">(<span class="hljs-type">int</span> floor, <span class="hljs-type">int</span> n)</span></span>;<br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">SetDown</span><span class="hljs-params">(<span class="hljs-type">int</span> floor, <span class="hljs-type">int</span> n)</span></span>;<br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">SetInsideUp</span><span class="hljs-params">(<span class="hljs-type">int</span> floor, <span class="hljs-type">int</span> n)</span></span>;<br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">SetInsideDown</span><span class="hljs-params">(<span class="hljs-type">int</span> floor, <span class="hljs-type">int</span> n)</span></span>;<br>&#125;;<br><span class="hljs-keyword">class</span> <span class="hljs-title class_">E4</span> :<span class="hljs-keyword">public</span> ElevatorLift    <span class="hljs-comment">//奇数楼层的电梯</span><br>&#123;<br><span class="hljs-keyword">public</span>:<br><span class="hljs-built_in">E4</span>(<span class="hljs-type">int</span> S, <span class="hljs-type">int</span> K, <span class="hljs-type">int</span> T, Time *tm);<br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">SetUp</span><span class="hljs-params">(<span class="hljs-type">int</span> floor, <span class="hljs-type">int</span> n)</span></span>;<br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">SetDown</span><span class="hljs-params">(<span class="hljs-type">int</span> floor, <span class="hljs-type">int</span> n)</span></span>;<br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">SetInsideUp</span><span class="hljs-params">(<span class="hljs-type">int</span> floor, <span class="hljs-type">int</span> n)</span></span>;<br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">SetInsideDown</span><span class="hljs-params">(<span class="hljs-type">int</span> floor, <span class="hljs-type">int</span> n)</span></span>;<br>&#125;;<br></code></pre></td></tr></table></figure><h3 id="ElevatorLift-cpp"><a href="#ElevatorLift-cpp" class="headerlink" title="ElevatorLift.cpp"></a>ElevatorLift.cpp</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br><span class="line">456</span><br><span class="line">457</span><br><span class="line">458</span><br><span class="line">459</span><br><span class="line">460</span><br><span class="line">461</span><br><span class="line">462</span><br><span class="line">463</span><br><span class="line">464</span><br><span class="line">465</span><br><span class="line">466</span><br><span class="line">467</span><br><span class="line">468</span><br><span class="line">469</span><br><span class="line">470</span><br><span class="line">471</span><br><span class="line">472</span><br><span class="line">473</span><br><span class="line">474</span><br><span class="line">475</span><br><span class="line">476</span><br><span class="line">477</span><br><span class="line">478</span><br><span class="line">479</span><br><span class="line">480</span><br><span class="line">481</span><br><span class="line">482</span><br><span class="line">483</span><br><span class="line">484</span><br><span class="line">485</span><br><span class="line">486</span><br><span class="line">487</span><br><span class="line">488</span><br><span class="line">489</span><br><span class="line">490</span><br><span class="line">491</span><br><span class="line">492</span><br><span class="line">493</span><br><span class="line">494</span><br><span class="line">495</span><br><span class="line">496</span><br><span class="line">497</span><br><span class="line">498</span><br><span class="line">499</span><br><span class="line">500</span><br><span class="line">501</span><br><span class="line">502</span><br><span class="line">503</span><br><span class="line">504</span><br><span class="line">505</span><br><span class="line">506</span><br><span class="line">507</span><br><span class="line">508</span><br><span class="line">509</span><br><span class="line">510</span><br><span class="line">511</span><br><span class="line">512</span><br><span class="line">513</span><br><span class="line">514</span><br><span class="line">515</span><br><span class="line">516</span><br><span class="line">517</span><br><span class="line">518</span><br><span class="line">519</span><br><span class="line">520</span><br><span class="line">521</span><br><span class="line">522</span><br><span class="line">523</span><br><span class="line">524</span><br><span class="line">525</span><br><span class="line">526</span><br><span class="line">527</span><br><span class="line">528</span><br><span class="line">529</span><br><span class="line">530</span><br><span class="line">531</span><br><span class="line">532</span><br><span class="line">533</span><br><span class="line">534</span><br><span class="line">535</span><br><span class="line">536</span><br><span class="line">537</span><br><span class="line">538</span><br><span class="line">539</span><br><span class="line">540</span><br><span class="line">541</span><br><span class="line">542</span><br><span class="line">543</span><br><span class="line">544</span><br><span class="line">545</span><br><span class="line">546</span><br><span class="line">547</span><br><span class="line">548</span><br><span class="line">549</span><br><span class="line">550</span><br><span class="line">551</span><br><span class="line">552</span><br><span class="line">553</span><br><span class="line">554</span><br><span class="line">555</span><br><span class="line">556</span><br><span class="line">557</span><br><span class="line">558</span><br><span class="line">559</span><br><span class="line">560</span><br><span class="line">561</span><br><span class="line">562</span><br><span class="line">563</span><br><span class="line">564</span><br><span class="line">565</span><br></pre></td><td class="code"><pre><code class="hljs C++"><span class="hljs-comment">//#include &quot;pch.h&quot;</span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&quot;ElevatorLift.h&quot;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;math.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;time.h&gt;</span></span><br>ElevatorLift::<span class="hljs-built_in">ElevatorLift</span>()<br>&#123;<br>&#125;<br>ElevatorLift::<span class="hljs-built_in">ElevatorLift</span>(<span class="hljs-type">int</span> S, <span class="hljs-type">int</span> K, <span class="hljs-type">int</span> T, Time *tm)<br>&#123;<br>status = STOP;                       <span class="hljs-comment">//初始电梯停止</span><br>NowFloor = (<span class="hljs-built_in">rand</span>() % (<span class="hljs-number">40</span> - <span class="hljs-number">1</span>)) + <span class="hljs-number">1</span>;  <span class="hljs-comment">//随机生成初始电梯停靠位置 </span><br>NextFloor = NowFloor;                <span class="hljs-comment">//电梯停止时目标楼层与当前楼层一致</span><br>nowfloor = NowFloor;                 <span class="hljs-comment">//用于计算的位置</span><br>speed = <span class="hljs-number">1</span> / (<span class="hljs-type">float</span>)S;                <span class="hljs-comment">//设置速度  S的单位为秒/层   speed 单位为 层/秒</span><br>StopTime = T;                        <span class="hljs-comment">//每个乘客上下电梯所需时间  </span><br>capacity = K;                        <span class="hljs-comment">//电梯的容量</span><br>people = <span class="hljs-number">0</span>;                          <span class="hljs-comment">//当前电梯的人数</span><br>vacant = <span class="hljs-number">0</span>;                          <span class="hljs-comment">//电梯空闲时间</span><br>busy = <span class="hljs-number">0</span>;                            <span class="hljs-comment">//电梯运行时间</span><br>nowtime = tm;<br>Over = *nowtime;<br><span class="hljs-comment">//初始化</span><br><span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">41</span>; i++)<br>&#123;<br>Up[i] = <span class="hljs-number">0</span>;<br>Down[i] = <span class="hljs-number">0</span>;<br>InsideUp[i] = <span class="hljs-number">0</span>;<br>InsideDown[i] = <span class="hljs-number">0</span>;<br>&#125;<br><br>&#125;<br><br><br>ElevatorLift::~<span class="hljs-built_in">ElevatorLift</span>()<br>&#123;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">ElevatorLift::action</span><span class="hljs-params">()</span> <span class="hljs-comment">// 电梯行为</span></span><br><span class="hljs-function"></span>&#123;<br><span class="hljs-built_in">UpdateNowFloor</span>();       <span class="hljs-comment">// 更新当前电梯所在楼层</span><br><span class="hljs-built_in">UpdateDestination</span>();    <span class="hljs-comment">// 更新电梯下一站的目的楼层</span><br><span class="hljs-built_in">ChangeStatus</span>();         <span class="hljs-comment">// 判断改变当前电梯状态</span><br><span class="hljs-built_in">Run</span>();                  <span class="hljs-comment">// 电梯运行</span><br>&#125;<br><br><span class="hljs-function"><span class="hljs-type">char</span> * <span class="hljs-title">ElevatorLift::GetStatus</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br><br><span class="hljs-keyword">switch</span> (status)<br>&#123;<br><span class="hljs-keyword">case</span> UP:<br><span class="hljs-built_in">strcpy_s</span>(str, <span class="hljs-string">&quot;上&quot;</span>);<br><span class="hljs-keyword">break</span>;<br><span class="hljs-keyword">case</span> UPSTOP:<br><span class="hljs-built_in">strcpy_s</span>(str, <span class="hljs-string">&quot;上停&quot;</span>);<br><span class="hljs-keyword">break</span>;<br><span class="hljs-keyword">case</span> DOWN:<br><span class="hljs-built_in">strcpy_s</span>(str, <span class="hljs-string">&quot;下&quot;</span>);<br><span class="hljs-keyword">break</span>;<br><span class="hljs-keyword">case</span> DOWNSTOP:<br><span class="hljs-built_in">strcpy_s</span>(str, <span class="hljs-string">&quot;下停&quot;</span>);<br><span class="hljs-keyword">break</span>;<br><span class="hljs-keyword">case</span> STOP:<br><span class="hljs-built_in">strcpy_s</span>(str, <span class="hljs-string">&quot;停&quot;</span>);<br><span class="hljs-keyword">break</span>;<br><span class="hljs-keyword">default</span>:<br><span class="hljs-keyword">break</span>;<br>&#125;<br><span class="hljs-keyword">return</span> str;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">ElevatorLift::GetNextFloor</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br><span class="hljs-keyword">return</span> NextFloor;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">ElevatorLift::GetNowFloor</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br><span class="hljs-keyword">return</span> NowFloor;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">ElevatorLift::Getpeople</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br><span class="hljs-keyword">return</span> people;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">ElevatorLift::Getbusy</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br><span class="hljs-keyword">return</span> busy;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">ElevatorLift::Getvacant</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br><span class="hljs-keyword">return</span> vacant;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">ElevatorLift::SetUp</span><span class="hljs-params">(<span class="hljs-type">int</span> floor, <span class="hljs-type">int</span> n)</span></span><br><span class="hljs-function"></span>&#123;<br>Up[floor] += n;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">ElevatorLift::SetDown</span><span class="hljs-params">(<span class="hljs-type">int</span> floor, <span class="hljs-type">int</span> n)</span></span><br><span class="hljs-function"></span>&#123;<br>Down[floor] += n;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">ElevatorLift::SetInsideUp</span><span class="hljs-params">(<span class="hljs-type">int</span> floor, <span class="hljs-type">int</span> n)</span></span><br><span class="hljs-function"></span>&#123;<br>InsideUp[floor] += n;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">ElevatorLift::SetInsideDown</span><span class="hljs-params">(<span class="hljs-type">int</span> floor, <span class="hljs-type">int</span> n)</span></span><br><span class="hljs-function"></span>&#123;<br>InsideDown[floor] += n;<br>&#125;<br><br><br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">ElevatorLift::UpdateNowFloor</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br>NowFloor = (<span class="hljs-type">int</span>)nowfloor;<br>&#125;<br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">ElevatorLift::UpdateDestination</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br><span class="hljs-keyword">switch</span> (status)<br>&#123;<br><span class="hljs-keyword">case</span> UP:<br><span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = NowFloor; i &lt; Max; i++)   <span class="hljs-comment">//从当前楼层上一层开始查询，如果有停靠记录，取最近的楼层为目标楼层</span><br>&#123;<br><span class="hljs-keyword">if</span> (Up[i] || InsideUp[i])<br>&#123;<br>NextFloor = i;<br><span class="hljs-keyword">break</span>;<br>&#125;<br>&#125;<br><span class="hljs-keyword">break</span>;<br><span class="hljs-keyword">case</span> UPSTOP:<br><span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = NowFloor; i &lt; Max; i++)   <span class="hljs-comment">//从当前楼层开始查询，如果有停靠记录，取最近的楼层为目标楼层</span><br>&#123;<br><span class="hljs-keyword">if</span> (Up[i] || InsideUp[i] || Down[i])<br>&#123;<br>NextFloor = i;<br><span class="hljs-keyword">break</span>;<br>&#125;<br>&#125;<br><span class="hljs-keyword">break</span>;<br><span class="hljs-keyword">case</span> DOWN:<br><span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = NowFloor; i &gt; <span class="hljs-number">0</span>; i--)   <span class="hljs-comment">//从当前楼层开始查询，如果有停靠记录，取最近的楼层为目标楼层</span><br>&#123;<br><span class="hljs-keyword">if</span> (Down[i] || InsideDown[i])<br>&#123;<br>NextFloor = i;<br><span class="hljs-keyword">break</span>;<br>&#125;<br>&#125;<br><span class="hljs-keyword">break</span>;<br><span class="hljs-keyword">case</span> DOWNSTOP:<br><span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = NowFloor; i &gt; <span class="hljs-number">0</span>; i--)   <span class="hljs-comment">//从当前楼层开始查询，如果有停靠记录，取最近的楼层为目标楼层</span><br>&#123;<br><span class="hljs-keyword">if</span> (Down[i] || InsideDown[i] || Up[i])<br>&#123;<br>NextFloor = i;<br><span class="hljs-keyword">break</span>;<br>&#125;<br>&#125;<br><span class="hljs-keyword">break</span>;<br><span class="hljs-keyword">case</span> STOP:<br><br><br><span class="hljs-keyword">if</span> (<span class="hljs-built_in">IsTake</span>())                   <span class="hljs-comment">//如果电梯停下来，以后还有目标楼层</span><br>&#123;<br>NextFloor = <span class="hljs-built_in">IsTake</span>();<br>&#125;<br><span class="hljs-keyword">else</span><br>&#123;                                <span class="hljs-comment">//没人乘坐的话，查询呼叫</span><br><span class="hljs-keyword">if</span> (<span class="hljs-built_in">call</span>())                  <span class="hljs-comment">//如果有人呼叫电梯</span><br>NextFloor = <span class="hljs-built_in">call</span>();<br>&#125;<br><span class="hljs-keyword">break</span>;<br><span class="hljs-keyword">default</span>:<br><span class="hljs-keyword">break</span>;<br>&#125;<br><br>&#125;<br><br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">ElevatorLift::ChangeStatus</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br><span class="hljs-keyword">switch</span> (status)<br>&#123;<br><span class="hljs-keyword">case</span> STOP:                         <span class="hljs-comment">//状态为停止，则检查是否改变状态到“上”或“下”</span><br><br><span class="hljs-keyword">if</span> (NextFloor != NowFloor)    <span class="hljs-comment">//如果发现目标楼层与当前楼层不一致，则需要启动电梯</span><br>&#123;<br><span class="hljs-keyword">if</span> (NextFloor - NowFloor &gt; <span class="hljs-number">0</span>)<br>&#123;<br>status = UP;<br>vacant += (*nowtime - Over);<br>Start = *nowtime;<br>&#125;<br><span class="hljs-keyword">else</span><br>&#123;<br>status = DOWN;<br>vacant += (*nowtime - Over);<br>Start = *nowtime;<br>&#125;<br>&#125;<br><span class="hljs-keyword">break</span>;<br><span class="hljs-keyword">case</span> UP:          <span class="hljs-comment">//状态为向上运行，则检查是否改变状态到“上停”</span><br><span class="hljs-keyword">if</span> (NextFloor == NowFloor)     <span class="hljs-comment">//如果到达停靠楼层</span><br>&#123;<br>status = UPSTOP;<br>NextStart = (*nowtime + (<span class="hljs-number">1</span> + Up[NowFloor] + InsideUp[NowFloor])*StopTime);  <span class="hljs-comment">//计算停留时间</span><br>InsideUp[NowFloor] = <span class="hljs-number">0</span>;                                               <span class="hljs-comment">//乘客上下电梯</span><br><br>&#125;<br><span class="hljs-keyword">break</span>;<br><span class="hljs-keyword">case</span> UPSTOP:<br><span class="hljs-keyword">if</span> (NextStart.hour == nowtime-&gt;hour&amp;&amp;NextStart.minute == nowtime-&gt;minute&amp;&amp;NextStart.second == nowtime-&gt;second)<br>&#123;<br><span class="hljs-keyword">if</span> (NextFloor &gt; NowFloor)<br>&#123;<br>status = UP;<br>&#125;<br><span class="hljs-keyword">else</span><br>&#123;<br>status = STOP;<br>busy += (*nowtime - Start);<br>Over = *nowtime;<br>&#125;<br>&#125;<br><span class="hljs-keyword">break</span>;<br><span class="hljs-keyword">case</span> DOWN:<br><span class="hljs-keyword">if</span> (NextFloor == NowFloor)     <span class="hljs-comment">//如果到达停靠楼层</span><br>&#123;<br>status = DOWNSTOP;<br>NextStart = (*nowtime + (<span class="hljs-number">1</span> + Down[NowFloor] + InsideDown[NowFloor])*StopTime);  <span class="hljs-comment">//计算停留时间</span><br>InsideDown[NowFloor] = <span class="hljs-number">0</span>;<br>&#125;<br><span class="hljs-keyword">break</span>;<br><span class="hljs-keyword">case</span> DOWNSTOP:<br><br><span class="hljs-keyword">if</span> (NextStart.hour == nowtime-&gt;hour&amp;&amp;NextStart.minute == nowtime-&gt;minute&amp;&amp;NextStart.second == nowtime-&gt;second)<br>&#123;<br><span class="hljs-keyword">if</span> (NextFloor &gt;= NowFloor)<br>&#123;<br>status = STOP;<br>busy += (*nowtime - Start);<br>Over = *nowtime;<br>&#125;<br><span class="hljs-keyword">else</span><br>&#123;<br>status = DOWN;<br>&#125;<br>&#125;<br><span class="hljs-keyword">break</span>;<br><br><span class="hljs-keyword">default</span>:<br><span class="hljs-keyword">break</span>;<br>&#125;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">ElevatorLift::Run</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br><br><br><span class="hljs-keyword">if</span> (status == UP)      <span class="hljs-comment">//如果电梯向上运行</span><br>&#123;<br><br>nowfloor += speed;    <span class="hljs-comment">//speed为电梯每秒的运行速度</span><br><span class="hljs-comment">//int temp = 0;</span><br><span class="hljs-comment">//for (int i = NowFloor; i &lt; 41; i++)</span><br><span class="hljs-comment">//&#123;</span><br><span class="hljs-comment">//temp += InsideUp[i];</span><br><span class="hljs-comment">//&#125;//统计人数</span><br><span class="hljs-comment">//people = temp;</span><br>&#125;<br><span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (status == DOWN)   <span class="hljs-comment">//向下运行</span><br>&#123;<br>nowfloor -= speed;<span class="hljs-comment">//</span><br><span class="hljs-comment">//int temp = 0;</span><br><span class="hljs-comment">//for (int i = NowFloor; i &gt; 0; i--)</span><br><span class="hljs-comment">//&#123;</span><br><span class="hljs-comment">//temp += InsideDown[i];</span><br><span class="hljs-comment">//&#125;//统计人数</span><br><span class="hljs-comment">//people = temp;</span><br>&#125;<br><span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (status == UPSTOP)<br>&#123;<br><span class="hljs-comment">//int temp = 0;</span><br><span class="hljs-comment">//for (int i = NowFloor; i &lt; 41; i++)</span><br><span class="hljs-comment">//&#123;</span><br><span class="hljs-comment">//temp += InsideUp[i];</span><br><span class="hljs-comment">//&#125;//统计人数</span><br><span class="hljs-comment">//people = temp;                            // 1.电梯制动</span><br><span class="hljs-comment">// 2.使电梯位置与楼层地面相平</span><br>&#125;<br><span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (status == DOWNSTOP)   <span class="hljs-comment">//向下运行</span><br>&#123;<br><span class="hljs-comment">//int temp = 0;</span><br><span class="hljs-comment">//for (int i = NowFloor; i &gt; 0; i--)</span><br><span class="hljs-comment">//&#123;</span><br><span class="hljs-comment">//temp += InsideDown[i];</span><br><span class="hljs-comment">//&#125;//统计人数</span><br><span class="hljs-comment">//people = temp;</span><br>&#125;<br><span class="hljs-keyword">else</span><br>&#123;<br><br>&#125;<br><br>&#125;<br><br><br><span class="hljs-type">int</span> ElevatorLift::<span class="hljs-built_in">call</span>()<br>&#123;<br><span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = <span class="hljs-number">1</span>; i &lt; Max; i++)<br>&#123;<br><span class="hljs-keyword">if</span> (Up[i] || Down[i])<br><span class="hljs-keyword">return</span> i;<br>&#125;<br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">ElevatorLift::IsTake</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br><span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = <span class="hljs-number">1</span>; i &lt; Max; i++)<br>&#123;<br><span class="hljs-keyword">if</span> (InsideUp[i] || InsideDown[i])<br><span class="hljs-keyword">return</span> i;<br>&#125;<br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br><br><br><br><br><br>E1::<span class="hljs-built_in">E1</span>(<span class="hljs-type">int</span> S, <span class="hljs-type">int</span> K, <span class="hljs-type">int</span> T, Time * tm)<br>&#123;<br>status = STOP;                       <span class="hljs-comment">//初始电梯停止</span><br>NowFloor = (<span class="hljs-built_in">rand</span>() % (<span class="hljs-number">40</span> - <span class="hljs-number">1</span>)) + <span class="hljs-number">1</span>;  <span class="hljs-comment">// 随机生成电梯停靠位置 </span><br>NextFloor = NowFloor;                <span class="hljs-comment">//电梯停止时目标楼层与当前楼层一致</span><br>nowfloor = NowFloor;                 <span class="hljs-comment">//用于计算的位置</span><br>speed = <span class="hljs-number">1</span> / (<span class="hljs-type">float</span>)S;                  <span class="hljs-comment">//设置速度  s的单位为秒/层   speed 单位为 层/秒</span><br>StopTime = T;                        <span class="hljs-comment">// 每个乘客上下电梯的时间  </span><br>capacity = K;                        <span class="hljs-comment">//电梯的容量</span><br>people = <span class="hljs-number">0</span>;                          <span class="hljs-comment">//当前电梯的人数</span><br>vacant = <span class="hljs-number">0</span>;                            <span class="hljs-comment">//电梯空闲时间</span><br>busy = <span class="hljs-number">0</span>;                              <span class="hljs-comment">//电梯运行时间</span><br>nowtime = tm;<br>Over = *nowtime;<br><span class="hljs-comment">//初始化</span><br><span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">41</span>; i++)<br>&#123;<br><br>Up[i] = <span class="hljs-number">0</span>;<br>Down[i] = <span class="hljs-number">0</span>;<br>InsideUp[i] = <span class="hljs-number">0</span>;<br>InsideDown[i] = <span class="hljs-number">0</span>;<br>&#125;<br>&#125;<br><br>E2::<span class="hljs-built_in">E2</span>(<span class="hljs-type">int</span> S, <span class="hljs-type">int</span> K, <span class="hljs-type">int</span> T, Time * tm)<br>&#123;<br>status = STOP;                       <span class="hljs-comment">//初始电梯停止</span><br>NowFloor = (<span class="hljs-built_in">rand</span>() % (<span class="hljs-number">40</span> - <span class="hljs-number">1</span>)) + <span class="hljs-number">1</span>;  <span class="hljs-comment">// 随机生成电梯停靠位置 </span><br>NextFloor = NowFloor;                <span class="hljs-comment">//电梯停止时目标楼层与当前楼层一致</span><br>nowfloor = NowFloor;                 <span class="hljs-comment">//用于计算的位置</span><br>speed = <span class="hljs-number">1</span> / (<span class="hljs-type">float</span>)S;                  <span class="hljs-comment">//设置速度  s的单位为秒/层   speed 单位为 层/秒</span><br>StopTime = T;                        <span class="hljs-comment">// 每个乘客上下电梯的时间  </span><br>capacity = K;                        <span class="hljs-comment">//电梯的容量</span><br>people = <span class="hljs-number">0</span>;                          <span class="hljs-comment">//当前电梯的人数</span><br>vacant = <span class="hljs-number">0</span>;                            <span class="hljs-comment">//电梯空闲时间</span><br>busy = <span class="hljs-number">0</span>;                              <span class="hljs-comment">//电梯运行时间</span><br>nowtime = tm;<br>Over = *nowtime;<br><span class="hljs-comment">//初始化</span><br><span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">41</span>; i++)<br>&#123;<br><br>Up[i] = <span class="hljs-number">0</span>;<br>Down[i] = <span class="hljs-number">0</span>;<br>InsideUp[i] = <span class="hljs-number">0</span>;<br>InsideDown[i] = <span class="hljs-number">0</span>;<br>&#125;<br>&#125;<br><br>E3::<span class="hljs-built_in">E3</span>(<span class="hljs-type">int</span> S, <span class="hljs-type">int</span> K, <span class="hljs-type">int</span> T, Time * tm)<br>&#123;<br>status = STOP;                       <span class="hljs-comment">//初始电梯停止</span><br>NowFloor = (<span class="hljs-built_in">rand</span>() % (<span class="hljs-number">40</span> - <span class="hljs-number">1</span>)) + <span class="hljs-number">1</span>;  <span class="hljs-comment">// 随机生成电梯停靠位置 </span><br>NextFloor = NowFloor;                <span class="hljs-comment">//电梯停止时目标楼层与当前楼层一致</span><br>nowfloor = NowFloor;                 <span class="hljs-comment">//用于计算的位置</span><br>speed = <span class="hljs-number">1</span> / (<span class="hljs-type">float</span>)S;                  <span class="hljs-comment">//设置速度  s的单位为秒/层   speed 单位为 层/秒</span><br>StopTime = T;                        <span class="hljs-comment">// 每个乘客上下电梯的时间  </span><br>capacity = K;                        <span class="hljs-comment">//电梯的容量</span><br>people = <span class="hljs-number">0</span>;                          <span class="hljs-comment">//当前电梯的人数</span><br>vacant = <span class="hljs-number">0</span>;                            <span class="hljs-comment">//电梯空闲时间</span><br>busy = <span class="hljs-number">0</span>;                              <span class="hljs-comment">//电梯运行时间</span><br>nowtime = tm;<br>Over = *nowtime;<br><span class="hljs-comment">//初始化</span><br><span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">41</span>; i++)<br>&#123;<br><br>Up[i] = <span class="hljs-number">0</span>;<br>Down[i] = <span class="hljs-number">0</span>;<br>InsideUp[i] = <span class="hljs-number">0</span>;<br>InsideDown[i] = <span class="hljs-number">0</span>;<br>&#125;<br>&#125;<br><br>E4::<span class="hljs-built_in">E4</span>(<span class="hljs-type">int</span> S, <span class="hljs-type">int</span> K, <span class="hljs-type">int</span> T, Time* tm)<br>&#123;<br>status = STOP;                       <span class="hljs-comment">//初始电梯停止</span><br>NowFloor = (<span class="hljs-built_in">rand</span>() % (<span class="hljs-number">40</span> - <span class="hljs-number">1</span>)) + <span class="hljs-number">1</span>;  <span class="hljs-comment">// 随机生成电梯停靠位置 </span><br>NextFloor = NowFloor;                <span class="hljs-comment">//电梯停止时目标楼层与当前楼层一致</span><br>nowfloor = NowFloor;                 <span class="hljs-comment">//用于计算的位置</span><br>speed = <span class="hljs-number">1</span> / (<span class="hljs-type">float</span>)S;                  <span class="hljs-comment">//设置速度  s的单位为秒/层   speed 单位为 层/秒</span><br>StopTime = T;                        <span class="hljs-comment">// 每个乘客上下电梯的时间  </span><br>capacity = K;                        <span class="hljs-comment">//电梯的容量</span><br>people = <span class="hljs-number">0</span>;                          <span class="hljs-comment">//当前电梯的人数</span><br>vacant = <span class="hljs-number">0</span>;                            <span class="hljs-comment">//电梯空闲时间</span><br>busy = <span class="hljs-number">0</span>;                              <span class="hljs-comment">//电梯运行时间</span><br>nowtime = tm;<br>Over = *nowtime;<br><span class="hljs-comment">//初始化</span><br><span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">41</span>; i++)<br>&#123;<br><br>Up[i] = <span class="hljs-number">0</span>;<br>Down[i] = <span class="hljs-number">0</span>;<br>InsideUp[i] = <span class="hljs-number">0</span>;<br>InsideDown[i] = <span class="hljs-number">0</span>;<br>&#125;<br>&#125;<br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">E1::SetUp</span><span class="hljs-params">(<span class="hljs-type">int</span> floor, <span class="hljs-type">int</span> n)</span></span><br><span class="hljs-function"></span>&#123;<br><span class="hljs-keyword">if</span> ((floor &lt;= <span class="hljs-number">40</span> &amp;&amp; <span class="hljs-number">25</span> &lt;= floor) || floor == <span class="hljs-number">1</span>)<br>&#123;<br>Up[floor] += n;<br>&#125;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">E1::SetDown</span><span class="hljs-params">(<span class="hljs-type">int</span> floor, <span class="hljs-type">int</span> n)</span></span><br><span class="hljs-function"></span>&#123;<br><span class="hljs-keyword">if</span> ((floor &lt;= <span class="hljs-number">40</span> &amp;&amp; <span class="hljs-number">25</span> &lt;= floor) || floor == <span class="hljs-number">1</span>)<br>&#123;<br>Down[floor] += n;<br>&#125;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">E1::SetInsideUp</span><span class="hljs-params">(<span class="hljs-type">int</span> floor, <span class="hljs-type">int</span> n)</span></span><br><span class="hljs-function"></span>&#123;<br><span class="hljs-keyword">if</span> ((floor &lt;= <span class="hljs-number">40</span> &amp;&amp; <span class="hljs-number">25</span> &lt;= floor) || floor == <span class="hljs-number">1</span>)<br>&#123;<br>InsideUp[floor] += n;<br>&#125;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">E1::SetInsideDown</span><span class="hljs-params">(<span class="hljs-type">int</span> floor, <span class="hljs-type">int</span> n)</span></span><br><span class="hljs-function"></span>&#123;<br><span class="hljs-keyword">if</span> ((floor &lt;= <span class="hljs-number">40</span> &amp;&amp; <span class="hljs-number">25</span> &lt;= floor) || floor == <span class="hljs-number">1</span>)<br>&#123;<br>InsideDown[floor] += n;<br>&#125;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">E2::SetUp</span><span class="hljs-params">(<span class="hljs-type">int</span> floor, <span class="hljs-type">int</span> n)</span></span><br><span class="hljs-function"></span>&#123;<br><span class="hljs-keyword">if</span> (floor &lt;= <span class="hljs-number">25</span> &amp;&amp; <span class="hljs-number">1</span> &lt;= floor)<br>&#123;<br>Up[floor] += n;<br>&#125;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">E2::SetDown</span><span class="hljs-params">(<span class="hljs-type">int</span> floor, <span class="hljs-type">int</span> n)</span></span><br><span class="hljs-function"></span>&#123;<br><span class="hljs-keyword">if</span> (floor &lt;= <span class="hljs-number">25</span> &amp;&amp; <span class="hljs-number">1</span> &lt;= floor)<br>&#123;<br>Down[floor] += n;<br>&#125;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">E2::SetInsideUp</span><span class="hljs-params">(<span class="hljs-type">int</span> floor, <span class="hljs-type">int</span> n)</span></span><br><span class="hljs-function"></span>&#123;<br><span class="hljs-keyword">if</span> (floor &lt;= <span class="hljs-number">25</span> &amp;&amp; <span class="hljs-number">1</span> &lt;= floor)<br>&#123;<br>InsideUp[floor] += n;<br>&#125;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">E2::SetInsideDown</span><span class="hljs-params">(<span class="hljs-type">int</span> floor, <span class="hljs-type">int</span> n)</span></span><br><span class="hljs-function"></span>&#123;<br><span class="hljs-keyword">if</span> (floor &lt;= <span class="hljs-number">25</span> &amp;&amp; <span class="hljs-number">1</span> &lt;= floor)<br>&#123;<br>InsideDown[floor] += n;<br>&#125;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">E3::SetUp</span><span class="hljs-params">(<span class="hljs-type">int</span> floor, <span class="hljs-type">int</span> n)</span></span><br><span class="hljs-function"></span>&#123;<br><span class="hljs-keyword">if</span> (floor % <span class="hljs-number">2</span> ==  <span class="hljs-number">0</span> || floor == <span class="hljs-number">1</span>)<br>&#123;<br>Up[floor] += n;<br>&#125;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">E3::SetDown</span><span class="hljs-params">(<span class="hljs-type">int</span> floor, <span class="hljs-type">int</span> n)</span></span><br><span class="hljs-function"></span>&#123;<br><span class="hljs-keyword">if</span> (floor % <span class="hljs-number">2</span> == <span class="hljs-number">0</span> || floor==<span class="hljs-number">1</span>)<br>&#123;<br>Down[floor] += n;<br>&#125;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">E3::SetInsideUp</span><span class="hljs-params">(<span class="hljs-type">int</span> floor, <span class="hljs-type">int</span> n)</span></span><br><span class="hljs-function"></span>&#123;<br><span class="hljs-keyword">if</span> (floor % <span class="hljs-number">2</span> == <span class="hljs-number">0</span> || floor == <span class="hljs-number">1</span>)<br>&#123;<br>InsideUp[floor] += n;<br>&#125;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">E3::SetInsideDown</span><span class="hljs-params">(<span class="hljs-type">int</span> floor, <span class="hljs-type">int</span> n)</span></span><br><span class="hljs-function"></span>&#123;<br><span class="hljs-keyword">if</span> (floor % <span class="hljs-number">2</span> == <span class="hljs-number">0</span> || floor == <span class="hljs-number">1</span>)<br>&#123;<br>InsideDown[floor] += n;<br>&#125;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">E4::SetUp</span><span class="hljs-params">(<span class="hljs-type">int</span> floor, <span class="hljs-type">int</span> n)</span></span><br><span class="hljs-function"></span>&#123;<br><span class="hljs-keyword">if</span> (floor % <span class="hljs-number">2</span> == <span class="hljs-number">1</span>)<br>&#123;<br>Up[floor] += n;<br>&#125;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">E4::SetDown</span><span class="hljs-params">(<span class="hljs-type">int</span> floor, <span class="hljs-type">int</span> n)</span></span><br><span class="hljs-function"></span>&#123;<br><span class="hljs-keyword">if</span> (floor % <span class="hljs-number">2</span> == <span class="hljs-number">1</span>)<br>&#123;<br>Down[floor] += n;<br>&#125;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">E4::SetInsideUp</span><span class="hljs-params">(<span class="hljs-type">int</span> floor, <span class="hljs-type">int</span> n)</span></span><br><span class="hljs-function"></span>&#123;<br><span class="hljs-keyword">if</span> (floor % <span class="hljs-number">2</span> == <span class="hljs-number">1</span>)<br>&#123;<br>InsideUp[floor] += n;<br>&#125;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">E4::SetInsideDown</span><span class="hljs-params">(<span class="hljs-type">int</span> floor, <span class="hljs-type">int</span> n)</span></span><br><span class="hljs-function"></span>&#123;<br><span class="hljs-keyword">if</span> (floor % <span class="hljs-number">2</span> == <span class="hljs-number">1</span>)<br>&#123;<br>InsideDown[floor] += n;<br>&#125;<br>&#125;<br><br><br><br></code></pre></td></tr></table></figure><h2 id="乘客类"><a href="#乘客类" class="headerlink" title="乘客类"></a>乘客类</h2><h3 id="Passenger-h"><a href="#Passenger-h" class="headerlink" title="Passenger.h"></a>Passenger.h</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><code class="hljs C++"><span class="hljs-meta">#<span class="hljs-keyword">pragma</span> once</span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;stdlib.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&quot;Time.h&quot;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;Windows.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&quot;ElevatorLift.h&quot;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;time.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&quot;Group.h&quot;</span></span><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">Passenger</span><br>&#123;<br><br><span class="hljs-keyword">public</span>:<br><span class="hljs-built_in">Passenger</span>();<br><span class="hljs-built_in">Passenger</span>(<span class="hljs-type">int</span> M, <span class="hljs-type">int</span> L, ElevatorLift * E[], Time *tm);    <span class="hljs-comment">//构造函数</span><br>~<span class="hljs-built_in">Passenger</span>();<br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">action</span><span class="hljs-params">()</span></span>;  <span class="hljs-comment">//乘客的活动</span><br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">Select</span><span class="hljs-params">(<span class="hljs-type">int</span> &amp;group, <span class="hljs-type">int</span> &amp;which)</span></span>;                      <span class="hljs-comment">//决策选乘的电梯组</span><br><span class="hljs-function"><span class="hljs-type">char</span> * <span class="hljs-title">GetStatus</span><span class="hljs-params">()</span></span>;                                      <span class="hljs-comment">//get放法</span><br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">getstatus</span><span class="hljs-params">()</span></span>;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">GetNextFloor</span><span class="hljs-params">()</span></span>;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">GetNowFloor</span><span class="hljs-params">()</span></span>;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">Getwhich</span><span class="hljs-params">()</span></span>;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">Gettimes</span><span class="hljs-params">()</span></span>;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">Getgroup</span><span class="hljs-params">()</span></span>;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">GetTotal</span><span class="hljs-params">()</span></span>;<br>Time   NextTime;                      <span class="hljs-comment">//下一次乘梯时间</span><br><span class="hljs-keyword">private</span>:<br><span class="hljs-keyword">enum</span> <span class="hljs-title class_">Status</span><br>&#123;<br>TAKE,     <span class="hljs-comment">// 乘坐  </span><br>LEAVE,    <span class="hljs-comment">// 离开</span><br>WAIT,     <span class="hljs-comment">// 等待</span><br>OVER      <span class="hljs-comment">// 停止乘梯活动</span><br>&#125;;<br>Status status;                        <span class="hljs-comment">//乘客状态</span><br><span class="hljs-type">int</span>    WaitTime;                      <span class="hljs-comment">//乘客初次等待时间</span><br><span class="hljs-type">int</span>    NowFloor;                      <span class="hljs-comment">//当前楼层</span><br><span class="hljs-type">int</span>    NextFloor;                     <span class="hljs-comment">//目标楼层</span><br><span class="hljs-type">int</span>    which;                         <span class="hljs-comment">//乘坐的电梯</span><br><span class="hljs-type">int</span>    group;                         <span class="hljs-comment">//选定的组号</span><br><span class="hljs-type">long</span>   Total;                         <span class="hljs-comment">//总计等待时间   （单位：秒)</span><br><span class="hljs-type">char</span>   str[<span class="hljs-number">10</span>];                       <span class="hljs-comment">//存放电梯状态的字符串</span><br>Time   *nowtime;                      <span class="hljs-comment">//当前时间指针</span><br>ElevatorLift * e[<span class="hljs-number">10</span>];                 <span class="hljs-comment">//电梯的指针</span><br>Group * g[<span class="hljs-number">5</span>];                         <span class="hljs-comment">//电梯组的指针</span><br><span class="hljs-type">unsigned</span> <span class="hljs-type">int</span> times;                   <span class="hljs-comment">//总乘梯次数</span><br><br><br>&#125;;<br></code></pre></td></tr></table></figure><h3 id="Passenger-cpp"><a href="#Passenger-cpp" class="headerlink" title="Passenger.cpp"></a>Passenger.cpp</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br></pre></td><td class="code"><pre><code class="hljs C++"><span class="hljs-comment">//#include &quot;pch.h&quot;</span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&quot;Passenger.h&quot;</span></span><br><br>Passenger::<span class="hljs-built_in">Passenger</span>()<br>&#123;<br>&#125;<br><br>Passenger::<span class="hljs-built_in">Passenger</span>(<span class="hljs-type">int</span> M, <span class="hljs-type">int</span> L, ElevatorLift * E[], Time * tm)<br>&#123;<br>NextFloor = (<span class="hljs-built_in">rand</span>() % (<span class="hljs-number">40</span> - <span class="hljs-number">1</span>)) + <span class="hljs-number">1</span> + <span class="hljs-number">1</span>;            <span class="hljs-comment">//随机生成目标楼层</span><br>status = LEAVE;                                     <span class="hljs-comment">//初始状态为离开状态</span><br>NowFloor = <span class="hljs-number">1</span>;                                       <span class="hljs-comment">//初始楼层为1</span><br>WaitTime = (<span class="hljs-built_in">rand</span>() % (M * <span class="hljs-number">60</span> - <span class="hljs-number">1</span>)) + <span class="hljs-number">1</span>;               <span class="hljs-comment">//乘客初次等待时间</span><br>Total = <span class="hljs-number">0</span>;                                          <span class="hljs-comment">//总计等待时间</span><br>times = L + <span class="hljs-number">1</span>;                                      <span class="hljs-comment">//总乘梯次数  </span><br>nowtime = tm;<br>NextTime = (*nowtime + WaitTime);                   <span class="hljs-comment">//设定下一次乘梯的时间</span><br><span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">10</span>; i++)<br>&#123;<br>e[i] = E[i];<br>&#125;<br><span class="hljs-built_in">Select</span>(group, which);<br>&#125;<br><br><br>Passenger::~<span class="hljs-built_in">Passenger</span>()<br>&#123;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">Passenger::action</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br><br><span class="hljs-keyword">switch</span> (status)<br>&#123;<br><br><span class="hljs-keyword">case</span>  WAIT:<br><span class="hljs-comment">//当前状态为等待，则查看电梯是否到达当前楼层，将状态置为 “乘坐”</span><br><span class="hljs-keyword">if</span> (e[which]-&gt;people &lt; e[which]-&gt;capacity)<br>&#123;   <span class="hljs-comment">//如果电梯人数未满</span><br><span class="hljs-keyword">if</span> (e[which]-&gt;NowFloor == NowFloor)<br>&#123;   <span class="hljs-comment">//选定的电梯楼层与乘客所在楼层一致</span><br><span class="hljs-keyword">if</span> (((NextFloor - NowFloor) &gt; <span class="hljs-number">0</span> &amp;&amp; (e[which]-&gt;NextFloor - e[which]-&gt;NowFloor) &gt;= <span class="hljs-number">0</span>) ||<br>((NextFloor - NowFloor) &lt; <span class="hljs-number">0</span> &amp;&amp; (e[which]-&gt;NextFloor - e[which]-&gt;NowFloor) &lt;= <span class="hljs-number">0</span>))<br>&#123;   <span class="hljs-comment">//并且方向一致</span><br>status = TAKE;<br><span class="hljs-comment">//统计等待</span><br>Total = Total + (*nowtime - NextTime);<br><span class="hljs-comment">//设定乘坐电梯的目标楼层</span><br><span class="hljs-keyword">if</span> ((NextFloor - NowFloor) &gt; <span class="hljs-number">0</span>)<br>&#123;<br>e[which]-&gt;<span class="hljs-built_in">SetInsideUp</span>(NextFloor, <span class="hljs-number">1</span>);   <span class="hljs-comment">//设置目标楼层</span><br>e[which]-&gt;<span class="hljs-built_in">SetUp</span>(NowFloor, <span class="hljs-number">-1</span>);         <span class="hljs-comment">//撤销呼叫</span><br>e[which]-&gt;people++;<br>&#125;<br><span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> ((NextFloor - NowFloor) &lt; <span class="hljs-number">0</span>)<br>&#123;<br>e[which]-&gt;<span class="hljs-built_in">SetInsideDown</span>(NextFloor, <span class="hljs-number">1</span>);  <span class="hljs-comment">//设置目标楼层</span><br>e[which]-&gt;<span class="hljs-built_in">SetDown</span>(NowFloor, <span class="hljs-number">-1</span>);        <span class="hljs-comment">//撤销呼叫</span><br>e[which]-&gt;people++;<br>&#125;<br><span class="hljs-keyword">else</span><br>&#123;<br><br>&#125;<br>&#125;<br>&#125;<br>&#125;<br><span class="hljs-keyword">if</span> ((*nowtime - NextTime) % <span class="hljs-number">60</span> == <span class="hljs-number">0</span>)<br>&#123;<br><span class="hljs-comment">//如果等待时间每超过一分钟 重新选择电梯</span><br><span class="hljs-comment">//首先撤销上次的选择记录</span><br><span class="hljs-type">int</span>  old_which = which;<br><span class="hljs-keyword">if</span> ((NextFloor - NowFloor) &gt; <span class="hljs-number">0</span>)<br>&#123;<br><br>e[old_which]-&gt;<span class="hljs-built_in">SetUp</span>(NowFloor, <span class="hljs-number">-1</span>);   <br>&#125;<br><span class="hljs-keyword">else</span><br>&#123;<br>e[old_which]-&gt;<span class="hljs-built_in">SetDown</span>(NowFloor, <span class="hljs-number">-1</span>);  ;<br>&#125;<br><span class="hljs-built_in">Select</span>(group, which);  <span class="hljs-comment">//如果电梯满员 重新选择电梯</span><br><span class="hljs-comment">//重新设置新的电梯记录</span><br><span class="hljs-keyword">if</span> ((NextFloor - NowFloor) &gt; <span class="hljs-number">0</span>)<br>&#123;<br><br>e[which]-&gt;<span class="hljs-built_in">SetUp</span>(NowFloor, <span class="hljs-number">1</span>);    <span class="hljs-comment">//Up[this-&gt;NowFloor] += 1;</span><br>&#125;<br><span class="hljs-keyword">else</span><br>&#123;<br>e[which]-&gt;<span class="hljs-built_in">SetDown</span>(NowFloor, <span class="hljs-number">1</span>);  <span class="hljs-comment">//Down[this-&gt;NowFloor] += 1;</span><br>&#125;<br>&#125;<br><br><span class="hljs-keyword">break</span>;<br><span class="hljs-keyword">case</span>  TAKE:<br>NowFloor = e[which]-&gt;NowFloor;        <span class="hljs-comment">//更新当前乘坐电梯的楼层                               </span><br>   <span class="hljs-comment">//当前状态为乘坐，则查看是否到达目的楼层 ，将状态置为 “离开”或“停止”</span><br><span class="hljs-keyword">if</span> (NowFloor == NextFloor)<br>&#123;<br>times--;<br><span class="hljs-keyword">switch</span> (times)<br>&#123;<br><span class="hljs-keyword">case</span> <span class="hljs-number">0</span>:<br>status = OVER;<br><span class="hljs-keyword">break</span>;<br><span class="hljs-keyword">case</span> <span class="hljs-number">1</span>:<br>status = LEAVE;<br>NextFloor = <span class="hljs-number">1</span>;<br>NextTime = (*nowtime + <span class="hljs-number">10</span>);<br><span class="hljs-keyword">break</span>;<br><span class="hljs-keyword">default</span>:<br>status = LEAVE;<br><span class="hljs-comment">//设定新的目标楼层</span><br><span class="hljs-type">int</span> temp = ((<span class="hljs-built_in">rand</span>() % <span class="hljs-number">40</span>) + <span class="hljs-number">1</span>);<br><span class="hljs-keyword">while</span> (temp == NowFloor)    <span class="hljs-comment">//如果取出的数是当前楼层，则重新取随机数，直到不同</span><br>&#123;<br>temp = ((<span class="hljs-built_in">rand</span>() % <span class="hljs-number">40</span>) + <span class="hljs-number">1</span>);<br>&#125;<br>NextFloor = temp;<br>NextTime = (*nowtime + ((<span class="hljs-built_in">rand</span>() % <span class="hljs-number">111</span>) + <span class="hljs-number">10</span>));     <span class="hljs-comment">//生成下一次乘梯时间,随机停留10-120秒</span><br><span class="hljs-keyword">break</span>;<br>&#125;<br>e[which]-&gt;people--;<br><br>&#125;<br><span class="hljs-keyword">break</span>;<br><span class="hljs-keyword">case</span> LEAVE:<br><span class="hljs-comment">//当前状态为离开，则查看是否到下次开始乘梯的时间 ，将状态置为 “等待”</span><br><br><span class="hljs-keyword">if</span> (nowtime-&gt;second == NextTime.second &amp;&amp; nowtime-&gt;minute == NextTime.minute &amp;&amp;nowtime-&gt;hour == NextTime.hour)<br>&#123;<br><span class="hljs-comment">//改变状态</span><br>status = WAIT;<br><span class="hljs-comment">//选择乘坐的电梯组,与电梯</span><br><span class="hljs-built_in">Select</span>(group, which);<br><span class="hljs-comment">//设置电梯停靠楼层</span><br><span class="hljs-keyword">if</span> ((NextFloor - NowFloor) &gt; <span class="hljs-number">0</span>)<br>&#123;<br><br>e[which]-&gt;<span class="hljs-built_in">SetUp</span>(NowFloor, <span class="hljs-number">1</span>);    <span class="hljs-comment">//Up[this-&gt;NowFloor] += 1;</span><br>&#125;<br><span class="hljs-keyword">else</span><br>&#123;<br>e[which]-&gt;<span class="hljs-built_in">SetDown</span>(NowFloor, <span class="hljs-number">1</span>);  <span class="hljs-comment">//Down[this-&gt;NowFloor] += 1;</span><br>&#125;<br><br>&#125;<br><span class="hljs-keyword">break</span>;<br><span class="hljs-keyword">case</span> OVER:<br><span class="hljs-keyword">break</span>;<br>&#125;<br><br>&#125;<br><span class="hljs-function"><span class="hljs-type">char</span> * <span class="hljs-title">Passenger::GetStatus</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br><span class="hljs-keyword">switch</span> (status)<br>&#123;<br><br><span class="hljs-keyword">case</span>  WAIT:<br><span class="hljs-built_in">strcpy_s</span>(str, <span class="hljs-string">&quot;等待&quot;</span>);<br><span class="hljs-keyword">break</span>;<br><span class="hljs-keyword">case</span>  TAKE:<br><span class="hljs-built_in">strcpy_s</span>(str, <span class="hljs-string">&quot;乘坐&quot;</span>);<br><span class="hljs-keyword">break</span>;<br><span class="hljs-keyword">case</span> LEAVE:<br><span class="hljs-built_in">strcpy_s</span>(str, <span class="hljs-string">&quot;离开&quot;</span>);<br><span class="hljs-keyword">break</span>;<br><span class="hljs-keyword">case</span> OVER:<br><span class="hljs-built_in">strcpy_s</span>(str, <span class="hljs-string">&quot;结束&quot;</span>);<br><span class="hljs-keyword">break</span>;<br>&#125;<br><span class="hljs-keyword">return</span> str;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">Passenger::getstatus</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br><span class="hljs-keyword">return</span> status;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">Passenger::GetNextFloor</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br><span class="hljs-keyword">return</span> NextFloor;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">Passenger::GetNowFloor</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br><span class="hljs-keyword">return</span> NowFloor;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">Passenger::Getwhich</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br><span class="hljs-keyword">return</span> which + <span class="hljs-number">1</span>;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">Passenger::Gettimes</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br><span class="hljs-keyword">return</span> times;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">Passenger::Getgroup</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br><span class="hljs-keyword">return</span> group + <span class="hljs-number">1</span>;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">Passenger::GetTotal</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br><span class="hljs-keyword">return</span> Total;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-type">void</span>  <span class="hljs-title">Passenger::Select</span><span class="hljs-params">(<span class="hljs-type">int</span> &amp; group, <span class="hljs-type">int</span> &amp; which)</span></span><br><span class="hljs-function"></span>&#123;<br><span class="hljs-type">int</span> select[<span class="hljs-number">10</span>];                  <span class="hljs-comment">//设定决策权重数组</span><br><span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">10</span>; i++)      <span class="hljs-comment">//初始化</span><br>&#123;<br>select[i] = <span class="hljs-number">0</span>;<br>&#125;<br>select[<span class="hljs-number">0</span>] = <span class="hljs-number">1</span>;<br>select[<span class="hljs-number">1</span>] = <span class="hljs-number">1</span>;<br><span class="hljs-comment">//如果当前楼层与目标楼层为1,25-40</span><br><span class="hljs-keyword">if</span> (((<span class="hljs-number">25</span> &lt;= NowFloor &amp;&amp; NowFloor &lt;= <span class="hljs-number">40</span>) || NowFloor == <span class="hljs-number">1</span>) &amp;&amp; ((<span class="hljs-number">25</span> &lt;= NextFloor &amp;&amp; NextFloor &lt;= <span class="hljs-number">40</span>) || NextFloor == <span class="hljs-number">1</span>))<br>&#123;<br>select[<span class="hljs-number">2</span>] += <span class="hljs-number">1</span>;<br>select[<span class="hljs-number">3</span>] = <span class="hljs-number">1</span>;<br>&#125;<br><span class="hljs-comment">//如果当前楼层与目标楼层为1-25</span><br><span class="hljs-keyword">if</span> ((<span class="hljs-number">1</span> &lt;= NowFloor &amp;&amp; NowFloor &lt;= <span class="hljs-number">25</span>) &amp;&amp; (<span class="hljs-number">1</span> &lt;= NextFloor &amp;&amp; NextFloor &lt;= <span class="hljs-number">25</span>))<br>&#123;<br>select[<span class="hljs-number">4</span>] += <span class="hljs-number">1</span>;<br>select[<span class="hljs-number">5</span>] = <span class="hljs-number">1</span>;<br>&#125;<br><span class="hljs-comment">//如果当前楼层与目标楼层为偶数</span><br><span class="hljs-keyword">if</span> ((NowFloor % <span class="hljs-number">2</span> == <span class="hljs-number">0</span> || NowFloor == <span class="hljs-number">1</span>) &amp;&amp; (NextFloor % <span class="hljs-number">2</span> == <span class="hljs-number">0</span> || NextFloor == <span class="hljs-number">1</span>))<br>&#123;<br>select[<span class="hljs-number">6</span>] += <span class="hljs-number">1</span>;<br>select[<span class="hljs-number">7</span>] = <span class="hljs-number">1</span>;<br>&#125;<br><span class="hljs-comment">//如果当前楼层与目标楼层为奇数</span><br><span class="hljs-keyword">if</span> ((NowFloor % <span class="hljs-number">2</span> == <span class="hljs-number">1</span>) &amp;&amp; (NextFloor % <span class="hljs-number">2</span> == <span class="hljs-number">1</span>))<br>&#123;<br>select[<span class="hljs-number">8</span>] += <span class="hljs-number">1</span>;<br>select[<span class="hljs-number">9</span>] = <span class="hljs-number">1</span>;<br>&#125;<br><span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">10</span>; i++)<br>&#123;<br><span class="hljs-keyword">if</span> (e[i]-&gt;people &gt;= (e[i]-&gt;capacity)*<span class="hljs-number">0.8</span>)<br>&#123;<br>select[i] = <span class="hljs-number">0</span>;<br>&#125;<br>&#125;<br><br><span class="hljs-comment">// 进一步选择</span><br><span class="hljs-type">int</span> direction = NextFloor - NowFloor;  <span class="hljs-comment">//设定乘梯方向  &gt;0 向上 &lt;0向下</span><br><span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">10</span>; i++)<br>&#123;<br><span class="hljs-comment">//在满足条件的电梯组中选择</span><br><span class="hljs-keyword">if</span> (select[i])<br>&#123;<br><span class="hljs-comment">//如果乘客要去上面</span><br><span class="hljs-keyword">if</span> (direction &gt; <span class="hljs-number">0</span>)<br>&#123;<br><span class="hljs-comment">//如果电梯停</span><br><span class="hljs-keyword">if</span> (e[i]-&gt;NextFloor - e[i]-&gt;NowFloor == <span class="hljs-number">0</span>)<br>&#123;<br>select[i] = select[i] + <span class="hljs-number">40</span> - <span class="hljs-built_in">abs</span>((NowFloor - e[i]-&gt;NowFloor));   <span class="hljs-comment">//距离越近，权重越大</span><br>&#125;<br><span class="hljs-comment">//如果电梯向上</span><br><span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (e[i]-&gt;NextFloor - e[i]-&gt;NowFloor &gt; <span class="hljs-number">0</span>)<br>&#123;<br><span class="hljs-comment">//并且电梯位置低于乘客位置</span><br><span class="hljs-keyword">if</span> (e[i]-&gt;NowFloor &lt;= NowFloor)<br>&#123;<br>select[i] = select[i] + <span class="hljs-number">40</span> - <span class="hljs-built_in">abs</span>((NowFloor - e[i]-&gt;NowFloor));   <span class="hljs-comment">//距离越近，权重越大</span><br>&#125;<br><span class="hljs-keyword">else</span>   <span class="hljs-comment">//电梯位置高于乘客</span><br>&#123;<br>select[i] = select[i] - <span class="hljs-built_in">abs</span>((NowFloor - e[i]-&gt;NowFloor));<br>&#125;<br>&#125;<br><span class="hljs-comment">//如果电梯向下</span><br><span class="hljs-keyword">else</span><br>&#123;<br><span class="hljs-comment">//并且电梯位置高于乘客位置</span><br><span class="hljs-keyword">if</span> (e[i]-&gt;NowFloor &gt;= NowFloor)<br>&#123;<br>select[i] = select[i] - <span class="hljs-built_in">abs</span>((NowFloor - e[i]-&gt;NowFloor));   <span class="hljs-comment">//距离越近，权重越大</span><br>&#125;<br><span class="hljs-keyword">else</span>   <span class="hljs-comment">//电梯位置低于乘客</span><br>&#123;<br>select[i] = select[i] + <span class="hljs-built_in">abs</span>((NowFloor - e[i]-&gt;NowFloor));<br>&#125;<br>&#125;<br>&#125;<br><span class="hljs-keyword">else</span>   <span class="hljs-comment">//如果乘客要去下面</span><br>&#123;<br><span class="hljs-comment">//如果电梯停</span><br><span class="hljs-keyword">if</span> (e[i]-&gt;NextFloor - e[i]-&gt;NowFloor == <span class="hljs-number">0</span>)<br>&#123;<br>select[i] = select[i] + <span class="hljs-number">40</span> - <span class="hljs-built_in">abs</span>((NowFloor - e[i]-&gt;NowFloor));   <span class="hljs-comment">//距离越近，权重越大</span><br>&#125;<br><span class="hljs-comment">//如果电梯向上</span><br><span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (e[i]-&gt;NextFloor - e[i]-&gt;NowFloor &gt; <span class="hljs-number">0</span>)<br>&#123;<br><span class="hljs-comment">//并且电梯位置低于乘客位置</span><br><span class="hljs-keyword">if</span> (e[i]-&gt;NowFloor &lt;= NowFloor)<br>&#123;<br>select[i] = select[i] - <span class="hljs-built_in">abs</span>((NowFloor - e[i]-&gt;NowFloor));   <span class="hljs-comment">//距离越近，权重越大</span><br>&#125;<br><span class="hljs-keyword">else</span>   <span class="hljs-comment">//电梯位置高于乘客</span><br>&#123;<br>select[i] = select[i] + <span class="hljs-built_in">abs</span>((NowFloor - e[i]-&gt;NowFloor));<br>&#125;<br>&#125;<br><span class="hljs-comment">//如果电梯向下</span><br><span class="hljs-keyword">else</span><br>&#123;<br><span class="hljs-comment">//并且电梯位置高于乘客位置</span><br><span class="hljs-keyword">if</span> (e[i]-&gt;NowFloor &gt;= NowFloor)<br>&#123;<br>select[i] = select[i] + <span class="hljs-number">40</span> - <span class="hljs-built_in">abs</span>((NowFloor - e[i]-&gt;NowFloor));   <span class="hljs-comment">//距离越近，权重越大</span><br>&#125;<br><span class="hljs-keyword">else</span>   <span class="hljs-comment">//电梯位置低于乘客</span><br>&#123;<br>select[i] = select[i] - <span class="hljs-built_in">abs</span>((NowFloor - e[i]-&gt;NowFloor));<br>&#125;<br>&#125;<br><br>&#125;<br>&#125;<br>&#125;<br><br><span class="hljs-comment">//在select数组中取最大值的下标，即为最优选择电梯组</span><br><span class="hljs-type">int</span> max = <span class="hljs-number">10</span>;<br><span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = <span class="hljs-number">9</span>; i &gt;= <span class="hljs-number">0</span>; i--)<br>&#123;<br><span class="hljs-keyword">if</span> (select[i] != <span class="hljs-number">0</span> &amp;&amp; (select[max] &lt; select[i]))<br>&#123;<br>max = i;<br>&#125;<br>&#125;<br>which = max;<br>group = (max / <span class="hljs-number">2</span>);<br><br>&#125;<br><br><br></code></pre></td></tr></table></figure><h2 id="分组类"><a href="#分组类" class="headerlink" title="分组类"></a>分组类</h2><h3 id="Group-h"><a href="#Group-h" class="headerlink" title="Group.h"></a>Group.h</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs C++"><span class="hljs-meta">#<span class="hljs-keyword">pragma</span> once</span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&quot;ElevatorLift.h&quot;</span></span><br><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">Group</span><br>&#123;<br><span class="hljs-keyword">public</span>:<br><span class="hljs-built_in">Group</span>(ElevatorLift *e1, ElevatorLift *e2);<br>~<span class="hljs-built_in">Group</span>();<br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">action</span><span class="hljs-params">()</span></span>;<br><span class="hljs-keyword">private</span>:<br>ElevatorLift *e1;<br>ElevatorLift *e2;<br><span class="hljs-keyword">friend</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">Passenger</span>;<br>&#125;;<br></code></pre></td></tr></table></figure><h3 id="Group-cpp"><a href="#Group-cpp" class="headerlink" title="Group.cpp"></a>Group.cpp</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs C++"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&quot;Group.h&quot;</span></span><br>Group::<span class="hljs-built_in">Group</span>(ElevatorLift * e1, ElevatorLift * e2)<br>&#123;<br><span class="hljs-keyword">this</span>-&gt;e1 = e1;<br><span class="hljs-keyword">this</span>-&gt;e2 = e2;<br>&#125;<br>Group::~<span class="hljs-built_in">Group</span>()<br>&#123;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">Group::action</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br>e1-&gt;<span class="hljs-built_in">action</span>();<br>e2-&gt;<span class="hljs-built_in">action</span>();<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="时间类"><a href="#时间类" class="headerlink" title="时间类"></a>时间类</h2><h3 id="Time-h"><a href="#Time-h" class="headerlink" title="Time.h"></a>Time.h</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs C++"><span class="hljs-meta">#<span class="hljs-keyword">pragma</span> once</span><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">Time</span><br>&#123;<br><span class="hljs-keyword">public</span>:<br><span class="hljs-type">unsigned</span> <span class="hljs-type">int</span> hour;<br><span class="hljs-type">unsigned</span> <span class="hljs-type">int</span> minute;<br><span class="hljs-type">unsigned</span> <span class="hljs-type">int</span> second;<br><span class="hljs-built_in">Time</span>();<br><span class="hljs-built_in">Time</span>( <span class="hljs-type">int</span> hour, <span class="hljs-type">int</span> minute, <span class="hljs-type">int</span> second );<br>Time <span class="hljs-keyword">operator</span> + (<span class="hljs-type">int</span> sec);   <span class="hljs-comment">//时间自加，单位为秒</span><br><span class="hljs-type">long</span> <span class="hljs-keyword">operator</span> - (Time &amp; sub);<br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">set</span><span class="hljs-params">( <span class="hljs-type">int</span> hour,<span class="hljs-type">int</span> minute,  <span class="hljs-type">int</span> second)</span></span>;<br><span class="hljs-comment">//void operator =(Time &amp;time);</span><br>~<span class="hljs-built_in">Time</span>();<br>&#125;;<br></code></pre></td></tr></table></figure><h3 id="Time-cpp"><a href="#Time-cpp" class="headerlink" title="Time.cpp"></a>Time.cpp</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><code class="hljs C++"><span class="hljs-comment">//#include &quot;pch.h&quot;</span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&quot;Time.h&quot;</span></span><br><br><br>Time::<span class="hljs-built_in">Time</span>()<br>&#123;<br><span class="hljs-keyword">this</span>-&gt;hour = <span class="hljs-number">0</span>;<br><span class="hljs-keyword">this</span>-&gt;minute = <span class="hljs-number">0</span>;<br><span class="hljs-keyword">this</span>-&gt;second = <span class="hljs-number">0</span>;<br>&#125;<br><br>Time::<span class="hljs-built_in">Time</span>(<span class="hljs-type">int</span> hour,  <span class="hljs-type">int</span> minute,  <span class="hljs-type">int</span> second)<br>&#123;<br><span class="hljs-keyword">this</span>-&gt;hour = hour;<br><span class="hljs-keyword">this</span>-&gt;minute = minute;<br><span class="hljs-keyword">this</span>-&gt;second = second;<br>&#125;<br><br><br><br>Time Time::<span class="hljs-keyword">operator</span>+ ( <span class="hljs-type">int</span> sec)<br>&#123;<br>Time time;<br>time.hour = <span class="hljs-keyword">this</span>-&gt;hour;<br>time.minute = <span class="hljs-keyword">this</span>-&gt;minute ;<br>time.second=<span class="hljs-keyword">this</span>-&gt;second;<br><span class="hljs-keyword">if</span> (sec &lt; <span class="hljs-number">0</span>)<br><span class="hljs-keyword">return</span> time;<br>time.second = time.second + sec;<br><span class="hljs-keyword">if</span> (time.second &gt;= <span class="hljs-number">60</span>)<br>&#123;<br>time.minute = time.minute + time.second / <span class="hljs-number">60</span>;<br>time.second = time.second % <span class="hljs-number">60</span>;<br><span class="hljs-keyword">if</span> (time.minute &gt;= <span class="hljs-number">60</span>)<br>&#123;<br>time.hour = time.hour + time.minute / <span class="hljs-number">60</span>;<br>time.minute = time.minute % <span class="hljs-number">60</span>;<br><span class="hljs-keyword">if</span> (time.hour &gt;= <span class="hljs-number">24</span>)<br>&#123;<br>time.hour = time.hour - <span class="hljs-number">24</span>;<br>&#125;<br>&#125;<br>&#125;<br><br><span class="hljs-keyword">return</span> time;<br>&#125;<br><br><span class="hljs-type">long</span> Time::<span class="hljs-keyword">operator</span>-(Time &amp; sub)<br>&#123; <br><span class="hljs-type">long</span> a;   <span class="hljs-comment">//被减数</span><br><span class="hljs-type">long</span> b;   <span class="hljs-comment">//减数</span><br>a = <span class="hljs-keyword">this</span>-&gt;hour * <span class="hljs-number">3600</span> + <span class="hljs-keyword">this</span>-&gt;minute * <span class="hljs-number">60</span> + <span class="hljs-keyword">this</span>-&gt;second;<br>b = sub.hour * <span class="hljs-number">3600</span> + sub.minute * <span class="hljs-number">60</span> + sub.second;<br><span class="hljs-keyword">return</span> a - b;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">Time::set</span><span class="hljs-params">( <span class="hljs-type">int</span> hour,  <span class="hljs-type">int</span> minute, <span class="hljs-type">int</span> second)</span></span><br><span class="hljs-function"></span>&#123;<br><span class="hljs-keyword">this</span>-&gt;hour = hour;<br><span class="hljs-keyword">this</span>-&gt;minute = minute;<br><span class="hljs-keyword">this</span>-&gt;second = second;<br>&#125;<br><br><br>Time::~<span class="hljs-built_in">Time</span>()<br>&#123;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="Extra"><a href="#Extra" class="headerlink" title="Extra"></a>Extra</h2><p>最后来扯些别的。</p><p>电梯群控调度是一类开放、动态、复杂系统的多目标优化问题。而电梯调度算法是一种常见的算法设计问题。随着楼层的增加，电梯数的增多，这方面研究也非常多。</p><p>值得注意的是，这方面也已经有不少人开始做强化学习相关的了，其出发点是，现存算法不具备自学习、自适应的的能力，电梯面临的实际环境是未知的、不确定的。既定算法针对顾客到达模型的实时决策较为刻板与经验化。若模型参数设置有逻辑上的误差或在运行中发生了一些非预期变化，得到的策略会出现极大误差。</p><p>而另一方面电梯群组调度问题可以被建模成一个很典型的 MDP问题，即电梯下一时刻状态只取决于当前的电梯状态和调度策略。这样就可以利用强化学习算法自适应学习最优策略，从而实现多路电梯的调度。故可<strong>以电梯作为Agent，外界不同楼层乘客按按钮作为Environment，而每个Agent（电梯）即做出选择进行Action</strong>，如下：</p><img src="/2020/06/21/%E5%A4%9A%E8%B7%AF%E7%94%B5%E6%A2%AF%E7%AE%97%E6%B3%95%E8%B0%83%E5%BA%A6%E7%9A%84%E8%A7%A3%E5%86%B3%E6%80%9D%E8%B7%AF%E2%80%94%E2%80%94%E7%B1%BB%E8%AE%BE%E8%AE%A1%E8%A7%92%E5%BA%A6/q.png" width="70%" height="70%"><p><strong>其核心在于设计环境行为交互的奖励机制，利用DQN强化学习算法，寻找多路电梯各状态下的最优动作序列。</strong></p><p>这方面我找到了一篇文章：<strong>《Optimal Elevator Group Control via Deep Asynchronous Actor–Critic Learning》</strong>，供参考。算法框架如下：<br><img src="/2020/06/21/%E5%A4%9A%E8%B7%AF%E7%94%B5%E6%A2%AF%E7%AE%97%E6%B3%95%E8%B0%83%E5%BA%A6%E7%9A%84%E8%A7%A3%E5%86%B3%E6%80%9D%E8%B7%AF%E2%80%94%E2%80%94%E7%B1%BB%E8%AE%BE%E8%AE%A1%E8%A7%92%E5%BA%A6/w.png"></p><p>这篇博客到这里就结束了。</p>]]></content>
      
      
      <categories>
          
          <category> 编程 </category>
          
          <category> C++ </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C++ </tag>
            
            <tag> 面向对象编程 </tag>
            
            <tag> 电梯调度算法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Mac录制屏内声音教程</title>
      <link href="/2020/02/18/Mac%E5%B1%8F%E5%86%85%E5%BD%95%E5%88%B6%E6%95%99%E7%A8%8B/"/>
      <url>/2020/02/18/Mac%E5%B1%8F%E5%86%85%E5%BD%95%E5%88%B6%E6%95%99%E7%A8%8B/</url>
      
        <content type="html"><![CDATA[<p>由于最近疫情严重，上课开组会都是使用Zoom、腾讯会议这种线上平台进行。然而有时候教师为了保护知识产权，会不开放会议的屏幕录制功能。此时，自行录制上课&#x2F;开会视频以便课后消化显得尤为重要。</p><p>然而在Mac端，直接使用自带的屏幕录制软件录不到电脑内屏放出的声音（只录电脑外置麦克风收到的声音）。下面将介绍如何<strong>在Mac上录制电脑屏幕+只有屏内声音无屏外声音</strong>。</p><p>首先需要下载一款开源插件Soundflower： <a href="https://github.com/mattingalls/Soundflower">https://github.com/mattingalls/Soundflower</a>.</p><p>接着安装。此时有的人会出现安全性问题提示，请保证自己的系统偏好设置里安全性与隐私部分，<strong>”允许任何来源“</strong>：</p><img src="/2020/02/18/Mac%E5%B1%8F%E5%86%85%E5%BD%95%E5%88%B6%E6%95%99%E7%A8%8B/image-20200218205447434.png" alt="image-20200218205447434" style="zoom:50%;"><p>安装完后打开系统自带的<strong>“音频MIDI设置”</strong>：<br><img src="/2020/02/18/Mac%E5%B1%8F%E5%86%85%E5%BD%95%E5%88%B6%E6%95%99%E7%A8%8B/image-20200218204339549.png" alt="image-20200218204339549" style="zoom:50%;"></p><p>点击左下角“+号“，建立一个<strong>聚焦设备</strong>，具体设置如下：<br><img src="/2020/02/18/Mac%E5%B1%8F%E5%86%85%E5%BD%95%E5%88%B6%E6%95%99%E7%A8%8B/image-20200218204238578.png"></p><p>再建立一个<strong>多输出设备</strong>：</p><p><img src="/2020/02/18/Mac%E5%B1%8F%E5%86%85%E5%BD%95%E5%88%B6%E6%95%99%E7%A8%8B/image-20200218204302914.png" alt="image-20200218204302914"></p><p>接着打开系统设置中的<strong>声音</strong>设置，将”输出“项调为”多输出设备“</p><p><img src="/2020/02/18/Mac%E5%B1%8F%E5%86%85%E5%BD%95%E5%88%B6%E6%95%99%E7%A8%8B/image-20200219113302210.png" alt="image-20200219113302210"></p><p>最后再打开我们系统自带的录屏软件：QuickTimePlayer，按下<strong>Control+Command+N</strong>新建屏幕录制</p><p><img src="/2020/02/18/Mac%E5%B1%8F%E5%86%85%E5%BD%95%E5%88%B6%E6%95%99%E7%A8%8B/image-20200218203448241.png" alt="image-20200218203448241"></p><p>接着会出现让你选择录制区域，<strong>先点击”选项“，选择麦克风为”Soundflower64“</strong>，再选录制区域，一般选全屏即可（第四个按钮）：</p><p><img src="/2020/02/18/Mac%E5%B1%8F%E5%86%85%E5%BD%95%E5%88%B6%E6%95%99%E7%A8%8B/image-20200218203139123.png" alt="image-20200218203139123"></p><p>当你的电脑升级到Mojave以上的版本时，也可以直接<strong>按Command+Shift+5</strong>直接进入到屏幕录制部分。</p><p>我们测试一下，用INNA播放器播放”美丽心灵“，接着进行录屏，结束后播放录屏。<br><img src="/2020/02/18/Mac%E5%B1%8F%E5%86%85%E5%BD%95%E5%88%B6%E6%95%99%E7%A8%8B/a.png"><br><img src="/2020/02/18/Mac%E5%B1%8F%E5%86%85%E5%BD%95%E5%88%B6%E6%95%99%E7%A8%8B/b.png"><br>证实录屏带着电脑屏内声音，目标达成。</p>]]></content>
      
      
      <categories>
          
          <category> 硬件 </category>
          
          <category> Mac </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Mac </tag>
            
            <tag> 录屏 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Final Cut Pro 使用笔记</title>
      <link href="/2020/02/15/Final%20Cut%20Pro%20%E4%BD%BF%E7%94%A8%E7%AC%94%E8%AE%B0/"/>
      <url>/2020/02/15/Final%20Cut%20Pro%20%E4%BD%BF%E7%94%A8%E7%AC%94%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<h3 id="这是一个关于Final-Cut-Pro来剪辑视频的笔记。"><a href="#这是一个关于Final-Cut-Pro来剪辑视频的笔记。" class="headerlink" title="这是一个关于Final Cut Pro来剪辑视频的笔记。"></a>这是一个关于Final Cut Pro来剪辑视频的笔记。</h3><p>Final Cut Pro 是一个苹果公司开发的一款非线性视频剪辑软件，运行于Mac系统。<br>整个的用户界面可以大致被分为以下几块：</p><p><img src="/2020/02/15/Final%20Cut%20Pro%20%E4%BD%BF%E7%94%A8%E7%AC%94%E8%AE%B0/a.png"></p><h3 id="工作区说明："><a href="#工作区说明：" class="headerlink" title="工作区说明："></a>工作区说明：</h3><ol><li>左上方区域称为：<strong>浏览器</strong><br>它的主要功能为*<u>管理所有素材</u>*。此处管理可理解为导入、浏览，使用各种素材。其左上方三个按钮分别为：资源库、照片和音频、字幕。</li><li>中间的区域称为：<strong>监视器</strong><br>它的主要功能为<u><em>预览和播放相关素材</em></u>，无论是资源库中的素材还是时间线中的素材。同时可以变换素材的尺寸、裁剪（在左下方第一个按钮）；改变素材的播放速度（第三个按钮）</li><li>右上方区域称为：<strong>检查器</strong><br>这里可以*<u>查看素材的基本信息</u><em>（如分辨率、时长、编码器等），也可以</em><u>修改素材参数</u>*（如调色、调透明度、曝光、缩放、裁剪等等）</li><li>最下方区域称为：<strong>时间线</strong><br>这里是*<u>视频剪辑的主要区域</u><em>。时间线的右上方有两个按钮，分别显示</em><u>效果</u><em>动画和</em><u>转场</u>*动画。<br>🤲 <strong>在操作过程中，经常会改变工作区，可以进行个人设定，同时可按Command+0恢复初始工作区</strong></li></ol><h3 id="创建项目时"><a href="#创建项目时" class="headerlink" title="创建项目时"></a>创建项目时</h3><p>首先要建立<strong>“资源库“</strong>，此时软件会自动新建一个以当前日期命名的<strong>”事件“</strong>，事件中可以新建<strong>”项目“</strong>。<br>👋理解为：”资源库“为总文件夹，事件是其下面的二级文件夹，项目依托于事件，为事件中的文件（也就是后面剪视频时的一条时间线）。</p><h3 id="在导入素材时："><a href="#在导入素材时：" class="headerlink" title="在导入素材时："></a>在导入素材时：</h3><p>鼠标放到想要的素材开始处按I，结束处按O，再拖入时间线。<br><strong>I：开始 (initiate)；O：结束(over)</strong><br>另外四个重要的添加素材所需快捷键（也是时间线上的左上方的四个按钮 ）：<br><strong>E：</strong>把所选素材片段放置到时间线的<strong>最后</strong>，不覆盖其他片段；<br><strong>Q：</strong>把所选素材片段放置到<strong>当前</strong>时间轴的位置，不覆盖其他片段；<br><strong>W：</strong>把所选素材片段插入到当前时间轴的位置，其他片段会(被)自动<strong>切割</strong>开来；<br><strong>D：</strong>把所选素材片段覆盖到当前时间轴的位置，其他片段位置不变 但会被<strong>覆盖和裁剪</strong>；</p><p>第四个按钮旁的小箭头可以选择导入所选素材的<strong>全部（Shift+1），仅视频（Shift+2），仅音频（Shift+3）</strong>，按完再拖入。</p><h3 id="在剪辑视频时："><a href="#在剪辑视频时：" class="headerlink" title="在剪辑视频时："></a>在剪辑视频时：</h3><p>在时间线上使用<br><strong>B（切割）</strong> 对时间线上视频直接切割，切割完后<strong>按A（选择）</strong>切换回来，接着进行位置的拖动；（☆最常用）<br><strong>T（修剪）</strong> 为按住左右拖动修剪素材，拖到红线表示到头；<br><strong>P（直接移动片段）</strong>，中间空挡处自动添加黑场；<br><strong>R（范围选择）</strong>，可在时间线上选择一段范围，比如先选范围，再让此范围素材音量降低；<br><strong>Z（放大时间线）</strong>，可用触控板缩放代替，或<strong>Command+”+&#x2F;-“</strong> ；按住<strong>Shift + Z</strong>：在一个页面中看到全部时间线的内容，自动缩放时间线到合适大小全部显示；<br><strong>H（手</strong>），可拖动整个时间线移动<br><strong>N（吸附）</strong>，也是右边第四个按钮，开启吸附后片段与片段之间就会吸附；不同轨道也会上下吸附对齐；</p><p>效果直接选择拖到素材上即可，转场拖到素材中间</p><h3 id="几个剪辑小操作："><a href="#几个剪辑小操作：" class="headerlink" title="几个剪辑小操作："></a>几个剪辑小操作：</h3><ul><li>将鼠标移到音频开头的控制按钮上，向右拖动可实现淡入，淡出同理。</li><li>添加字幕只需要在左上方字幕边栏中选中拖入时间线即可</li><li>调整视频可使用检查器的第二个按钮，选颜色检查器，调整曝光等等</li><li>字幕边栏中选”发生器“，可添加各种背景</li><li>字幕边栏中搜索“自定”，可进行自定义字幕设置。拖入时间线后右上方检查器第二个按钮文本检查器进行操作可更改字体等诸多选项。</li></ul><h3 id="导出："><a href="#导出：" class="headerlink" title="导出："></a>导出：</h3><p>右上角分享按钮，选择母版文件（默认），具体导出设置可参考这样：</p><p><img src="/2020/02/15/Final%20Cut%20Pro%20%E4%BD%BF%E7%94%A8%E7%AC%94%E8%AE%B0/image-20200218004641565.png" alt="image-20200218004641565"></p><p>接着下一步选择导出位置，就开始渲染导出了，本文到此也就结束了。</p><h3 id="其他几个备用快捷键："><a href="#其他几个备用快捷键：" class="headerlink" title="其他几个备用快捷键："></a>其他几个备用快捷键：</h3><p>command+b可以直接通过时间线切割当前片段<br>command+r可以直接调出速度面板，通过片段末尾拉神时间的速度快慢<br>shift+b可以分段切割速度<br>control+T是添加默认字幕 command+T是添加默认转场 control+ shift+t是添加默认三分之一的字幕<br>选中时间线的任意一个片段 按V可以隐藏该片段<br>如何取消主故事线的链接 option+command+上<br>按住~键的同时，用选择工具A拖动主故事线的片段 也可以脱离故事线的魔掌<br>command+c复制， command+shift+v是粘贴片段的属性，Comand+Z侧小<br>option+c可以添加外挂字幕或者导出这类的字幕</p><p>教程参考：<a href="https://www.bilibili.com/video/av40359934?t=579">https://www.bilibili.com/video/av40359934?t=579</a><br>文中素材：王者荣耀replay，《阳光灿烂的日子》4k修复版</p>]]></content>
      
      
      <categories>
          
          <category> 硬件 </category>
          
          <category> Mac </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 技巧 </tag>
            
            <tag> 剪视频 </tag>
            
            <tag> Mac </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>部分个人影评合集（保持更新）</title>
      <link href="/2020/02/10/%E9%83%A8%E5%88%86%E5%BD%B1%E8%AF%84%E5%90%88%E9%9B%86%EF%BC%88%E4%BF%9D%E6%8C%81%E6%9B%B4%E6%96%B0%EF%BC%89/"/>
      <url>/2020/02/10/%E9%83%A8%E5%88%86%E5%BD%B1%E8%AF%84%E5%90%88%E9%9B%86%EF%BC%88%E4%BF%9D%E6%8C%81%E6%9B%B4%E6%96%B0%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<h2 id="寒假看的一些电影，有的是之前看过，现在重新看一遍，写了几个小影评："><a href="#寒假看的一些电影，有的是之前看过，现在重新看一遍，写了几个小影评：" class="headerlink" title="寒假看的一些电影，有的是之前看过，现在重新看一遍，写了几个小影评："></a>寒假看的一些电影，有的是之前看过，现在重新看一遍，写了几个小影评：</h2><h3 id="《窃听风暴》"><a href="#《窃听风暴》" class="headerlink" title="《窃听风暴》"></a>《窃听风暴》</h3><h4 id="豆瓣9-1，06年奥斯卡最佳外语片"><a href="#豆瓣9-1，06年奥斯卡最佳外语片" class="headerlink" title="豆瓣9.1，06年奥斯卡最佳外语片"></a>豆瓣9.1，06年奥斯卡最佳外语片</h4><p>故事发生在1984-1989柏林墙倒塌期间的东德。当时整个社会弥漫在国家安全局的高压统治下，他们如同鬼魅般毫无理由地监听控制着整个国家。男主也是这个国家85000名秘密警察中的一个，他业务熟练，冷血无情，像一个工具一样闭眼倾听着一对艺术家夫妇。艺术家们往往是社会进步的重要力量。但此时他们的自由主义思想，却被视为对国家政权的重要威胁。他们被监视、被窃听，从没有创作自由，甚至没有人身自由。男主的生活冷酷高压，反而监听时耳中那个诗意浪漫的家庭好似幻梦，他看到了一个世界里不止有无情的政治斗争，还有诗，音乐和温暖。同时对社会主义和党员义务无比坚定的他却一次次发现党内高层违背党的宗旨，文艺部部长都利用职权强迫艺术家妻子成为自己的情妇…男主的美好梦境一次次打破了，他决定保护艺术家一家，但最终自己也失去了一切。<br>亚里士多德曾说过：“政治是最高的善”。它本应是人类为了保护个人权利，自由与财产而出现的一种社会契约。但在官僚主义横行的，“斯塔西”们处处监控的高压社会，政治在国家机器的手中，就会成为了剥夺个人自由与意志的恶。当身居高位的执政者一次次亵渎他们自己的誓言，而真心实意坚信这个体制的人被一次次伤害时，“国家意志”只会成为少数人的谋取个人权利的意志。而布尔什维克（多数）也就无从谈起。<br><img src="/2020/02/10/%E9%83%A8%E5%88%86%E5%BD%B1%E8%AF%84%E5%90%88%E9%9B%86%EF%BC%88%E4%BF%9D%E6%8C%81%E6%9B%B4%E6%96%B0%EF%BC%89/qt1.jpg"></p><h3 id="《钢的琴》"><a href="#《钢的琴》" class="headerlink" title="《钢的琴》"></a>《钢的琴》</h3><h4 id="豆瓣8-4，一部很难得的中国电影"><a href="#豆瓣8-4，一部很难得的中国电影" class="headerlink" title="豆瓣8.4，一部很难得的中国电影"></a>豆瓣8.4，一部很难得的中国电影</h4><p>故事背景与人物是设计在上世纪改革开放后的老东北工业区，那个充满着体制化与革命的时代突然崩塌，一批批下岗工人也转瞬从国家的主人翁成为社会的边缘人，这在心理上是很难接受的，仿佛过去的一切都没有意义。但本片并没有陷入自怨自艾的情绪中，反而以一种黑色幽默般的故事清晰描绘出一个小人物在时代洪流下的无奈与心酸，抗争到最后释怀与和解。虽然本片内核是悲凉的，但看完却更多是一种感叹与怀念，和对这一代劳动者的尊敬。历史车轮滚滚向前，我们更应该接受它，带着上一代留下来的精神宝藏继续前行。这部片子2010年上映，王千源是主演，更多的是“哀而不伤”。后来还有一部类似题材的《暴雪将至》则完全是时代的挽歌，结局雪花的飘零仿佛就是要把那些东西毁灭给你看。<br><img src="/2020/02/10/%E9%83%A8%E5%88%86%E5%BD%B1%E8%AF%84%E5%90%88%E9%9B%86%EF%BC%88%E4%BF%9D%E6%8C%81%E6%9B%B4%E6%96%B0%EF%BC%89/bx.jpg"></p><h3 id="《搏击俱乐部》"><a href="#《搏击俱乐部》" class="headerlink" title="《搏击俱乐部》"></a>《搏击俱乐部》</h3><h4 id="豆瓣9-0，不说了，两个字：NB"><a href="#豆瓣9-0，不说了，两个字：NB" class="headerlink" title="豆瓣9.0，不说了，两个字：NB"></a>豆瓣9.0，不说了，两个字：NB</h4><p>表面看是对消费主义社会下各种虚伪的精神慰藉的辛辣讽刺，但深层次应该很容易想到的是与“虚无主义”，“自由”甚至与左派思潮的精神追求有关。但和《V字仇杀队》那种纯粹的革命又不同，可能更加地形而上学吧。这部片我觉得个人理解可能还不够深，还在思考，就分享几段别人的影评吧：</p><blockquote><p><strong>”叛逆“与”革命“</strong><br>＂叛逆＂是个体对体制与所谓＂主流＂的不认同与不合作，而＂颠覆＂虽同样追求与主流的离异，但却还隐藏着推倒体制的含义．＂叛逆者＂是小小的破坏分子，他们是远离者，是孤独者．而＂颠覆＂却暗示着他们的对立面－－＂建立＂，他们不满足与象叛逆者那样，远远的扔石块，冷冷的嘲弄，他们想要的是改变体制，扭转＂主流＂．因此，当这些特征发展到一定阶段的时候，就像影片中所呈现的那样，叛逆成了破坏者．颠覆则不可避免的到达了它的第二阶段－－＂革命＂．<br>已经成为物欲囚徒的城市中产阶级和为了生活而挣扎的小人物们，希望通过对身体的破坏来获取精神的刺激,籍此找回字我存在的意义和作为人的自尊．很明显,肉体的欢愉（性和毒品）所带来的刺激已经被这个社会修剪的那么＂生活化、健康化和科学性＂（多么主流的词汇），他的稀松平常显然已经不能挑起人们精神的刺激,更无法触及人的自尊.如此一来,聪明的泰勒便发现了欢愉的对立面—痛感（一个绝好的办法,却也是让人绝望的悲哀）．正如尼采所言，现代社会塑造了人，他们把自己的优越感无偿的献给了自我保存．他们是由欲望和理性组合而成却没有抱负的人，他们没有任何获得比他人更伟大的认可的欲望，没有杰出感和成就感,他们是＂最后的人＂．<br>但尽管如此，他们可能并不是＂革命者＂，因为这与他们真正的目的是分道扬镳的．泰勒和他的组织越来越壮大，这是事实．但他们的力量源泉在于它的＂破坏性＂而不在于＂创造性＂，他们有的是叛逆者愤怒的反抗与不甘，而不是革命者的野心勃勃和充满抱负．叛逆者们追求自由，找寻自由，而革命者却试图创造自由，给予自由．叛逆者是无政府主义者，是不屑于主流或绝望或聪明的人们，他们用各种方式嘲弄着体制：对一本正经的人们残忍的捉弄，用尸体油脂制作香皂，大楼上的笑脸（这倒颇有纳粹的意味）．革命者却不会在乎这种小大小闹,嬉笑怒骂对他们而言,简直是一种侮辱，他们才是真正的危险人物．叛逆者乐于不同于主流，他们憎恨、蔑视主流，为自己是个unique而沾沾自喜，革命者却渴望成为主流，通过颠覆原先的统治者．<br>一个主流文化的存在，总是伴随着大量的少数派与之对抗．那些叛逆者乐于自己作为少数派的角色，乐在其中，他们其实也就是这个主流文化的一部分．这种主流与少数派之间对抗所形成的张力，正是体制存在的动因和能量源泉．叛逆者是天生的反对派（正如亨廷顿说学生是天生的反对派），一个天生的反对派，一旦失去了它强大的敌人，也就丧失了自身存在的意义，活不下去了．所以说叛逆者的角色是荒谬、尴尬而又可悲的．他们蔑视主流，却是主流之兄，体制之子．一如我们亲身体验的一样，对兄弟的敌意，对父亲的仇视，是我们天生的禀赋．叛逆的人们，你们是可悲的，你们不能成为神圣的摩西，却注定是忤逆的该隐．而体制永远不会因为叛逆者的反抗而土崩瓦解，反而是当反抗者们丧失了斗志和力量时，体制将变得僵硬和臃肿，失去了活动，腐朽不堪了．<br>泰勒的组织，与革命其实并没有什么联系和共同点，与其说它是政治性的，不如说它是宗教性的．人们为了追求精神的解脱和信仰加入其中，他们通过肉体的感受试图唤醒精神的短暂振奋．<br>另外说实话，我一点也不喜欢对自己喜爱的电影作这样的剖析，我更愿意陶醉于那种朦胧的美感，在理解与不理解之间玩味．就好象面对一个美丽的女子，我们更愿意欣赏她衣裳与骨骼之间的肉体，抚摸服饰与血肉之间的肌肤．当然，你可能会问，为何不愿触及她的灵魂呢？呵呵，如果为了触及一个人的灵魂，何必要选择一个美丽的女子呢？之所以我现在要玷污这位美人，只是因为不愿意玷污她的不是我本人。</p></blockquote><blockquote><p> <strong>《中产危机》</strong><br> 市场经济的基础不是价格，而是欲望。经济学家告诉我们，边际消费倾向越高，经济总量增长越快。工人越消费，厂商越有生产动力，越能获得利润；获得更多的利润，就能给更多的工资让工人消费。所以在市场经济的条件下，大家最应该做的事情就是尽情地挥霍自己的欲望：尽情地消费，尽情地占有。于是消费主义横行，人们只知消费，不知思考；只知纵欲，不知节制。<br>    欲望的一大特点就是易消逝性。如果一个的目标是赚到一百万，当他在欲望的号召下费尽千辛万苦赚到一百万，却发现当欲望的实现消解了欲望本身时，得到的只不过是莫大的空虚。这样的空虚到处都在上演，于是有人开始厌倦，开始反抗。<br>    大卫芬奇在《搏击俱乐部》中给我们讲了这样一个故事：一个空虚的中产在厌倦了物欲不断满足的空虚之后开始失眠，于是他参加各种绝症患者社团，通过分享别人的濒死体验，来激发自己的存在本能。但一个同样空虚的女人的到来让他看清了自己的虚伪，于是他自己在无意识的情况下分裂出另一个自己，寻找解决之道。他建立了搏击俱乐部，在这里人们自由互殴。痛是最直接的强烈感受，很容易感受到自己的存在；他对自己的分身谈论期待中的互殴对象：海明威，林肯,甘地……成为英雄对大多数平庸的我们只是不实的梦，实现这些不现实的梦不应该成为我们存在的意义；他建立了秘密组织，在这种类似军队的集体主义组织中，个人没有象征个性的名字，只有集体分配给他的代号。个体不存在了，欲望也就不容易产生。最后，他喊出了最具震撼力的口号：消灭物质。没有物质，自然没有对物质的欲望，一切问题就迎刃而解了。整个电影就在成熟的市场经济的象征——个人信用信息中心的大楼轰塌中结束了。物质没有了，欲望也没有了，一切归于平静。<br>    《搏击俱乐部》是身处后现代的大卫芬奇的又一次布道，号召不甘在欲望中湮灭的中产们团结起来毁灭这个以欲望为基础的体制。但是芬奇并没有给出解决之道：我们在毁灭了一切之后怎么办？我们是应该站在物质的废墟上等死，还是任由以追求个人利益最大化为本能的我们开始新一轮的物质建设？<br>    在又一次看完芬奇这部中产的悲剧之后，一位曾经的同窗向我抱怨他的不安：中国新兴的中产没有政党为他们说话，财产没有保障，生活过不安稳。我心中感慨万千：在中国未来的中产还在担心未来的中产生活没有保障时，外国的中产早已厌倦了光鲜富足，开始着手物质的毁灭。<br>    其实两者都是悲哀的。<br><img src="/2020/02/10/%E9%83%A8%E5%88%86%E5%BD%B1%E8%AF%84%E5%90%88%E9%9B%86%EF%BC%88%E4%BF%9D%E6%8C%81%E6%9B%B4%E6%96%B0%EF%BC%89/bj1.jpg"></p></blockquote><h3 id="《本杰明巴顿奇事》"><a href="#《本杰明巴顿奇事》" class="headerlink" title="《本杰明巴顿奇事》"></a>《本杰明巴顿奇事》</h3><h4 id="豆瓣8-9。我高中时最喜欢的电影之一，更喜欢另一个译名-《返老还童》"><a href="#豆瓣8-9。我高中时最喜欢的电影之一，更喜欢另一个译名-《返老还童》" class="headerlink" title="豆瓣8.9。我高中时最喜欢的电影之一，更喜欢另一个译名:《返老还童》"></a>豆瓣8.9。我高中时最喜欢的电影之一，更喜欢另一个译名:《返老还童》</h4><p>08年大卫芬奇的运镜和调度早已炉火纯青，三个小时的故事平铺直叙你却感受不到时间，环环相扣的情节宛如流水。你会记住那个反方向的钟，那个被雷电劈过七次的男人，那个独自游过大西洋的女人，以及黛西怀里抱着的婴儿：本杰明。诗意的画面和娓娓道来的故事会让你主动浸入到那个奇特的隽永时光中。<br><img src="/2020/02/10/%E9%83%A8%E5%88%86%E5%BD%B1%E8%AF%84%E5%90%88%E9%9B%86%EF%BC%88%E4%BF%9D%E6%8C%81%E6%9B%B4%E6%96%B0%EF%BC%89/bjm.jpg"></p><h3 id="《布达佩斯大饭店》"><a href="#《布达佩斯大饭店》" class="headerlink" title="《布达佩斯大饭店》"></a>《布达佩斯大饭店》</h3><h4 id="豆瓣评分8-8，获奥斯卡5项提名4项正奖。"><a href="#豆瓣评分8-8，获奥斯卡5项提名4项正奖。" class="headerlink" title="豆瓣评分8.8，获奥斯卡5项提名4项正奖。"></a>豆瓣评分8.8，获奥斯卡5项提名4项正奖。</h4><p>这是一部画面极其考究，色彩艳丽，构图将对称美学进行到底的电影。但就画面就能称得上一部艺术片并值回票价。<br>艺术成就上，片中情节荒诞却紧凑，仿佛与生俱来就带有着贵族的优雅。有人说它既满足侦探片的悬念冲突，又有着文艺片的温馨优雅，更有着政治片的黑色幽默与隐喻。</p><p>一部好的电影一定应该做到雅俗共赏，层层精彩。这个角度来说，本片或许是战前属于“欧式贵族”最后优雅的赞歌。主人公一丝不苟，面对逐渐礼崩乐坏的现实也坚守着欧洲那最后的人文家园。<br>（类似的主题，再推荐一部虽然有些争议，但个人还蛮喜欢的最近的片子《罗曼蒂克消亡史》，可以感受到属于旧上海那最后的优雅消亡的悲剧）<br><img src="/2020/02/10/%E9%83%A8%E5%88%86%E5%BD%B1%E8%AF%84%E5%90%88%E9%9B%86%EF%BC%88%E4%BF%9D%E6%8C%81%E6%9B%B4%E6%96%B0%EF%BC%89/bdp2.jpg"></p><h3 id="《寄生虫》"><a href="#《寄生虫》" class="headerlink" title="《寄生虫》"></a>《寄生虫》</h3><h4 id="2020年奥斯卡最终大赢家-碎碎念"><a href="#2020年奥斯卡最终大赢家-碎碎念" class="headerlink" title="2020年奥斯卡最终大赢家+碎碎念"></a>2020年奥斯卡最终大赢家+碎碎念</h4><p>初看的时候它刚得戛纳金棕榈和金球最佳外语片，那时我抱着它毕竟是这么多年来韩国片获奖最多的，就看了一下，但直到今天看到奥斯卡奖一出，我酸了。真的也不至于最佳影片最佳导演最佳剧本等六项大奖吧。我个人心目中大概只能打个8.5左右，但是这得奖规模几乎是个能豆瓣9.0+能进影史前一百的片子了。可能是运气太爆棚了吧……<br>说回电影：总的来说，这部片肯定是好片，质量上乘，主题深刻。简单来说，这是一个寓言式的阶级矛盾相生相杀的故事。(这部片属于剧情片，我怕剧透就不多说了）电影的内核其实片中已点明了：财富能把一切东西熨平，而美德，不过是富人生活的衍生品和精神慰藉罢了。穷人并不是天生就算计，凶险，充满着罪恶与不知廉耻，他们只是需要生计。而中国这个道理也早就说过了，过去有“仓廪足而知礼节”，现在有“经济基础决定上层建筑”。<br>所以在片中，其实也没有好人坏人富人穷人，所有人都非常矛盾，游离在善与恶的边缘。富人们没有兴趣关心穷人的想法与生活，穷人们心中富人的纸醉金迷也只是表象与他们的意淫。整部片仿佛就是要把两个对立的东西揉起来讲，打破隔离地探讨阶级矛盾。这符合影片“戏剧冲突”与“好看”这一最重要的指标<br>但我个人认为，全片有一些太“刻意”了，剧本虽完美无暇，主题严肃认真，但片子是以商业片的形式，规范化的指挥让你迅速达到主旨。但可能我更喜欢那种有余韵和不那么“匠气”的电影吧。<br>最关键的还是奥斯卡的过誉，让我觉得不那么值当，也是为今年其他几部很不错的电影愤慨吧。ε&#x3D;(´ο｀*)))唉，也有可能就是酸了<br><img src="/2020/02/10/%E9%83%A8%E5%88%86%E5%BD%B1%E8%AF%84%E5%90%88%E9%9B%86%EF%BC%88%E4%BF%9D%E6%8C%81%E6%9B%B4%E6%96%B0%EF%BC%89/jsc.jpg"></p>]]></content>
      
      
      <categories>
          
          <category> 生活 </category>
          
          <category> 读书&amp;影评 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 更新 </tag>
            
            <tag> 个人影评 </tag>
            
            <tag> 整理合集 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>《菊与刀》读书笔记</title>
      <link href="/2020/01/30/%E3%80%8A%E8%8F%8A%E4%B8%8E%E5%88%80%E3%80%8B%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/"/>
      <url>/2020/01/30/%E3%80%8A%E8%8F%8A%E4%B8%8E%E5%88%80%E3%80%8B%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<h3 id="引言：最孤立的微小行为之间也存在着联系，这些纷繁复杂的单项行为构成了一个总体模式。"><a href="#引言：最孤立的微小行为之间也存在着联系，这些纷繁复杂的单项行为构成了一个总体模式。" class="headerlink" title="引言：最孤立的微小行为之间也存在着联系，这些纷繁复杂的单项行为构成了一个总体模式。"></a>引言：最孤立的微小行为之间也存在着联系，这些纷繁复杂的单项行为构成了一个总体模式。</h3><p>首先，这本书写于二战末期。反法西斯阵营即将取胜，但他们而却要面对一个完全不能理解的民族。在美国人看来，大和民族非常的“矛盾”，它不属于西方文化传统，但又全服武装、训练有素：</p><blockquote><p>这个民族既彬彬有礼又粗鲁野蛮；既顽固不化又善于改革；既谦卑温顺又不愿受制于人；既忠心耿耿又背信弃义、睚眦必报；既上街任意又不愿愧对内心；既纪律严明又难以管束；既兼容并蓄又故步自封；<strong>既醉心于菊花的美又崇尚刀剑和武士道的无上荣耀。</strong></p></blockquote><p>“菊”是日本皇室的象征，代表着谦和与儒雅；而“刀”则是武士刀，是日本尚武、好战的体现。这两个意象在日本人身上得到了非常好的融合。这两者也是这本书洞察大和民族民族特性的落脚点。<br><img src="/2020/01/30/%E3%80%8A%E8%8F%8A%E4%B8%8E%E5%88%80%E3%80%8B%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/fsh.jpg"></p><p>在日本民族性格的形成中，<strong>矛盾</strong>或许是一个普遍存在的因素。正因处于矛盾中，他们常常表现出紧张焦虑的情绪。他们害怕竞争，不善竞争，却毕生处在和自己的斗争中。因此相对于外界，他们更习惯于坚守原来的秩序而不是狂热的革命，这或许也是他们的社会体系长期稳定的原因。但是矛盾依然存在，或者说他们不愿放弃矛盾，他们的稳定中又充满了善变.“菊花与刀剑”的矛盾，并不像平时被人所理解的“日本人对内部很和谐，而对外部十分残酷”这种矛盾这么简单。或许，菊花就好比日本人心中的精神力量的来源，是美好的；而刀剑就好比奉行这种精神或原则的方式，很难突破。</p><p>同时，日本人对于<strong>报恩与尊重</strong>有着近乎执拗的偏好。他们对待天皇会毫无原则毫无理由地服从，哪怕心里知道那样做是错的也甘愿奉献自己的全部。同时他们对精神和意志的影响有着超凡的信任，认为这可以超出物质本身。也就是说，日本人对于生，对于死迥异于其他国家民族的生存至上的逻辑。曾看到《挪威的森林中》写着：</p><blockquote><p>“死并非是生的对立面，而是作为生的一部分存在。”<br><img src="/2020/01/30/%E3%80%8A%E8%8F%8A%E4%B8%8E%E5%88%80%E3%80%8B%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/fsh3.jpg"></p></blockquote><p>日本人往往以死表达心理情感的一种极度升华，是对国家对个人的一种牺牲与尊严，以此凸显自己的人生价值。这种<strong>细腻却自尊，带着淡淡悲伤和强烈荣誉感的情怀</strong>，或许就是日本人对生与死的直接诠释。</p><p>这个民族无疑是令人感伤的。他们似乎从诞生起就背负着苦难，但又不屈服于现实。<strong>他们有着超出自己国土与人力资源的野心与梦想并甘愿一代代为之玉碎。</strong>伴随着一曲《The Empire of the Sun》，我仿佛能看到那个好斗又和善；尚武又爱美；傲慢又懂礼；顽固又善变；驯服又桀骜；忠诚又叛逆；勇敢又懦弱的民族。<strong>那个在日出之地冉冉升起，迸发出无穷活力的新兴帝国，经历过黑暗的幕府时代、光明却集权的明治维新时代，有着民主繁荣，洋溢着浮世绘中诗意浪漫的大正时期，最终却高呼万岁，陷入癫狂的军国主义。这个年轻的帝国将整个亚洲卷入混乱与黑暗，最终自己也蒙受苦难，七十年奋斗成果，化为一堆焦土和两声轰鸣巨响，只落得樱花落尽，生灵涂炭……</strong><br><img src="/2020/01/30/%E3%80%8A%E8%8F%8A%E4%B8%8E%E5%88%80%E3%80%8B%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/feiji.jpeg"><br>回顾日出帝国这励精图治的风雨七十年，追求力量的途中被战争这个便捷的方式冲昏头脑的历史，你可能只会想到<strong>那标着红日的战机和军舰，那南京城里流血的屠刀，那一个个誓死战斗，眼神里充满着自信与正义的神风之子。</strong>不会想到阴谋与野心，想到那全民支持的这场“正义战争”背后的深层原因。</p><p>庞勒曾在《乌合之众》中详细展示，<strong>组织化群体的无意识行为是如何极端化、情绪化与低智商化的。虽然本书中将人的群体属性归结为文化模式。认为人类文化各有其不同的价值体系和特征，在不同民族中呈现着一定的主旋律，即民族精神。</strong></p><p>但发动战争的是政客，这固然与其封建残余的军国主义有关。而政客也需要不断利用媒体与集群效应煽动民众，得到支持。当国家宣传机器全力开动，政客们也往往借助本民族最直接的“痛点”反复借力，那些宣传的口号无疑会让本就信息不对称并担心离群的人民振奋且陷入疯狂。</p><p>当庄严神圣的口号再度响起，民族精神与国家前途以军队具象化的形式让民众热血沸腾时，阵阵万岁浪潮的山呼海啸很容易去除人民的理智，让人民放弃思考。有时保持清醒头脑的人会被视为保守的极右主义者，在全民疯狂的情形下被当作异类清除。</p><p><strong>此时，你是否还愿意保持着清醒。</strong><br><img src="/2020/01/30/%E3%80%8A%E8%8F%8A%E4%B8%8E%E5%88%80%E3%80%8B%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/shenfeng.jpg"></p>]]></content>
      
      
      <categories>
          
          <category> 生活 </category>
          
          <category> 读书&amp;影评 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 总结与摘抄 </tag>
            
            <tag> 读书笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>“李约瑟问题”思考——从墨家思想的消亡说起</title>
      <link href="/2019/12/30/%E5%A2%A8%E5%AE%B6%E7%9A%84%E6%B6%88%E6%B2%89/"/>
      <url>/2019/12/30/%E5%A2%A8%E5%AE%B6%E7%9A%84%E6%B6%88%E6%B2%89/</url>
      
        <content type="html"><![CDATA[<h4 id="引言：众所周知，在十七世纪前，中国在政治制度、技术、艺术、文学等多方面遥遥领先全世界。无论是《马可波罗传》还是门多萨的《中华大帝国史》中的描述，中国的历史文化、地理风物、社会习俗、科学工艺都使全世界为之惊叹。但到十七世纪后，以英国为首西欧诸国的开始了大航海时期并展开了轰轰烈烈的工业革命，科学技术达到高速发展。最终在19、20世纪几乎以碾压优势横扫了亚洲以小农经济为主的诸多国家，包括一直以天朝上国自称，长期保持全世界经济领头羊上千年的满清中国。这一切确实使人非常困惑，即中国在十五世纪前的科学发现和技术工艺远远超过同时期的欧洲，但中国却直到鸦片战争都一直没产生近代科学呢？且中国长期以来的稳定繁荣、国力昌盛，宗教思想也不像欧洲那样广泛，每一代中华民族还有着勤劳智慧的先祖长期实践产生的理论经验积累。这些都理应使中国更先一步建立起成体系的近代科学，但我们知道这一切最终都并没有发生，这是为什么呢？"><a href="#引言：众所周知，在十七世纪前，中国在政治制度、技术、艺术、文学等多方面遥遥领先全世界。无论是《马可波罗传》还是门多萨的《中华大帝国史》中的描述，中国的历史文化、地理风物、社会习俗、科学工艺都使全世界为之惊叹。但到十七世纪后，以英国为首西欧诸国的开始了大航海时期并展开了轰轰烈烈的工业革命，科学技术达到高速发展。最终在19、20世纪几乎以碾压优势横扫了亚洲以小农经济为主的诸多国家，包括一直以天朝上国自称，长期保持全世界经济领头羊上千年的满清中国。这一切确实使人非常困惑，即中国在十五世纪前的科学发现和技术工艺远远超过同时期的欧洲，但中国却直到鸦片战争都一直没产生近代科学呢？且中国长期以来的稳定繁荣、国力昌盛，宗教思想也不像欧洲那样广泛，每一代中华民族还有着勤劳智慧的先祖长期实践产生的理论经验积累。这些都理应使中国更先一步建立起成体系的近代科学，但我们知道这一切最终都并没有发生，这是为什么呢？" class="headerlink" title="引言：众所周知，在十七世纪前，中国在政治制度、技术、艺术、文学等多方面遥遥领先全世界。无论是《马可波罗传》还是门多萨的《中华大帝国史》中的描述，中国的历史文化、地理风物、社会习俗、科学工艺都使全世界为之惊叹。但到十七世纪后，以英国为首西欧诸国的开始了大航海时期并展开了轰轰烈烈的工业革命，科学技术达到高速发展。最终在19、20世纪几乎以碾压优势横扫了亚洲以小农经济为主的诸多国家，包括一直以天朝上国自称，长期保持全世界经济领头羊上千年的满清中国。这一切确实使人非常困惑，即中国在十五世纪前的科学发现和技术工艺远远超过同时期的欧洲，但中国却直到鸦片战争都一直没产生近代科学呢？且中国长期以来的稳定繁荣、国力昌盛，宗教思想也不像欧洲那样广泛，每一代中华民族还有着勤劳智慧的先祖长期实践产生的理论经验积累。这些都理应使中国更先一步建立起成体系的近代科学，但我们知道这一切最终都并没有发生，这是为什么呢？"></a>引言：众所周知，在十七世纪前，中国在政治制度、技术、艺术、文学等多方面遥遥领先全世界。无论是《马可波罗传》还是门多萨的《中华大帝国史》中的描述，中国的历史文化、地理风物、社会习俗、科学工艺都使全世界为之惊叹。但到十七世纪后，以英国为首西欧诸国的开始了大航海时期并展开了轰轰烈烈的工业革命，科学技术达到高速发展。最终在19、20世纪几乎以碾压优势横扫了亚洲以小农经济为主的诸多国家，包括一直以天朝上国自称，长期保持全世界经济领头羊上千年的满清中国。这一切确实使人非常困惑，即中国在十五世纪前的科学发现和技术工艺远远超过同时期的欧洲，但中国却直到鸦片战争都一直没产生近代科学呢？且中国长期以来的稳定繁荣、国力昌盛，宗教思想也不像欧洲那样广泛，每一代中华民族还有着勤劳智慧的先祖长期实践产生的理论经验积累。这些都理应使中国更先一步建立起成体系的近代科学，但我们知道这一切最终都并没有发生，这是为什么呢？</h4><p><img src="/2019/12/30/%E5%A2%A8%E5%AE%B6%E7%9A%84%E6%B6%88%E6%B2%89/mojia.jpg"></p><h4 id="从地理上来分析，"><a href="#从地理上来分析，" class="headerlink" title="从地理上来分析，"></a>从地理上来分析，</h4><p>中国东临广袤的太平洋和诸岛国，西临沙漠和青藏高原，唯一有的威胁在于北部的游牧民族（这也是中华文明的历来劲敌）。但毫无疑问，中华文化在游牧民族处学到的东西是十分有限的。事实上，从秦汉统一到鸦片战争，中国在东亚附近始终处于强国状态。适宜居住的温带气候、广袤的土地、丰富的资源、庞大的人口、灿烂的文化，没有强大的海上外敌入侵，使中国的发展很容易变成主观“内向”。除了唐朝初期和明朝初期，国力极其强势，达到了“万邦来朝”的盛况。但安史之乱、土木堡战役这种有着一定的“非我族类其心必异”事件的发生毫无疑问会使文明再一次变得内向。</p><h4 id="但仔细思考，"><a href="#但仔细思考，" class="headerlink" title="但仔细思考，"></a>但仔细思考，</h4><p><strong>国家的统一、物资的丰富和文明的内向只能算是某种程度上科学发展的障碍而绝不会是根本原因</strong>，在阅读过一系列文献后，我认为很大一部分原因还在封建社会整个国民的陈旧思想以及儒家学说的统治地位上。</p><p>这个角度的切入点其实应该是容易想到的，即<strong>中国古代一直奉行高度集权的封建专制统治，长期奉行“愚民政策”，奉行以君臣伦理道德关系和注重社会稳定、秩序为核心的儒家学说以维护封建统治，极大抑制自由的思想观念。</strong>认为其为不误正业，强调“学而优则仕”，将整个士大夫阶层都纳入统治辖区和等级体制内。这一切都极大阻止了“科学精神”所需要的“自主思考”能力。</p><p><strong>慢慢地，权力的更迭与稳定而不是社会的进步与发展成为封建统治者的毕生致力。</strong>在这样的环境下，不管是是士大夫还是群众的自我思考都是极其危险且违反社会伦理道德的。长此以往，<strong>上层统治阶级所掌握的极大资源达不到合理配置，完全被投入到权力的内卷内耗中；而下层全社会的思想又被儒家伦理道德观所控制，甚至到了封建后期锦衣卫等严格思想严格控制机构的出现，自主思考和理论创新完全失去合法性，群众和知识分子群体失语，近代科学因缺少所需的理性、客观，成为无源之水无木之本。</strong></p><p><img src="/2019/12/30/%E5%A2%A8%E5%AE%B6%E7%9A%84%E6%B6%88%E6%B2%89/rujia.jpg"></p><p>最严重的是，中国古代的“大一统”思想和“君臣父子”的儒家伦理思想早已在两千年的封建驯化中深入人心。西欧封建统治虽也存在过一段时间，但毕竟国家较小，且在帝王统治中仍然有 <strong>“教皇”</strong>这一宗教上的制衡力量存在，不像中国这样常年以一元政治体系为主。在中国这样的大国政治中，稳定成为第一要务。社会虽然发展缓慢但由于体系巨大，仍可以依靠其内部协调分散危机，制约矛盾。</p><p>这样看来，从辩证唯物主义角度思考，<strong>大一统的专制统治虽然促进了文化交流融合，使“车同轨、书同文、行同伦”，物质的协调调度和外交上的统一强势，但也在某种意义上阻碍了思想的自由发展。</strong>反观春秋战国时期，虽诸侯割据，连年征战，但却产生了思想非常活跃、学派林立、角度多样的<strong>诸子百家</strong>现象。可见，自由理性客观和问题导向的思维模式，才可产生杰出的思想。而<strong>以稳定、专制、高度集权为主的封建统治，束缚了知识分子的创造力；伦理、君臣、中庸的普世价值观，磨去了知识分子探索未知世界的勇气</strong>。发展到封建后期，“八股文”的出现更是成为这一现象的顶峰。</p><h4 id="但，中国历史上没有出现科学精神的种子吗？"><a href="#但，中国历史上没有出现科学精神的种子吗？" class="headerlink" title="但，中国历史上没有出现科学精神的种子吗？"></a><strong>但，中国历史上没有出现科学精神的种子吗？</strong></h4><p>我们知道，在《韩非子 显学》里曾说：“<strong>世之显学，儒墨也</strong>”，可见，儒墨在战国时期大国纷争时并为世间显学，且因很多社会问题不能用儒家思想来解释。而主张“兼爱非攻”且在技术上精于实用的机械制造的墨家显然更符合社会需要。</p><p>但在国家走向大一统、董仲舒“罢黜百家，独尊儒术”后，儒家思想因十分顺应封建统治，成为唯一显学。且这一法宝后来也被历届统治者一再沿用，屡试不爽。但我们发现，除了春秋战国时期，在<strong>魏晋南北朝时期</strong>和<strong>清朝末年</strong>，墨家重新走上历史舞台。这两个时期都是战乱纷争，底层民众苦不堪言，儒家主流思想不再能解释这种苦难而受到普遍的怀疑。这时墨家崇尚的 <strong>“实用性”和逻辑性</strong>才显出其先进性。此时墨家逻辑思想短暂兴起一时，但就这短短一时，其<strong>强调演绎和公理化知识结构的思维模式仍造就了刘徽这种伟大的数学家和其伟大的数学著作。</strong><br><img src="/2019/12/30/%E5%A2%A8%E5%AE%B6%E7%9A%84%E6%B6%88%E6%B2%89/liyuese2.jpg"></p><p>事实上，在诸子百家中，唯有墨家思想注重实验和理论的结合。且非常善于使用一种<strong>从显而易见的源头处开始，进行反复思辨证明的过程，</strong>这与西方数学“公理定理”的证明体系非常相似。且墨家非常重视实验和逻辑推理，强调理性和抽象。我认为，这里其实就已经蕴藏着“近代科学”的种子了。毫无疑问，从现在的角度看，原“显学”墨家所代表的思想有着从“经验主义”到“逻辑推理”和“实验抽象”的性质了，<strong>它其实是诸子百家中最适合科学技术发展、最有生命力的思维方式。它的最终消亡不可或缺的是中国科学发展的重大损失。</strong></p><h4 id="但，若还是从辩证唯物主义史观角度思考，有”存在即合理“。墨家的消亡和儒家的完全地位也是在当时不考虑大变革情况下，历史必然的选择。甚至如果坚持实用主义而不是封建统治，国家容易被地方和个人掌握的技术爆炸和社会群体思想激进，理性务实很容易导致国家长期分裂。"><a href="#但，若还是从辩证唯物主义史观角度思考，有”存在即合理“。墨家的消亡和儒家的完全地位也是在当时不考虑大变革情况下，历史必然的选择。甚至如果坚持实用主义而不是封建统治，国家容易被地方和个人掌握的技术爆炸和社会群体思想激进，理性务实很容易导致国家长期分裂。" class="headerlink" title="但，若还是从辩证唯物主义史观角度思考，有”存在即合理“。墨家的消亡和儒家的完全地位也是在当时不考虑大变革情况下，历史必然的选择。甚至如果坚持实用主义而不是封建统治，国家容易被地方和个人掌握的技术爆炸和社会群体思想激进，理性务实很容易导致国家长期分裂。"></a><strong>但，若还是从辩证唯物主义史观角度思考，有”存在即合理“。墨家的消亡和儒家的完全地位也是在当时不考虑大变革情况下，历史必然的选择。甚至如果坚持实用主义而不是封建统治，国家容易被地方和个人掌握的技术爆炸和社会群体思想激进，理性务实很容易导致国家长期分裂。</strong></h4><p><img src="/2019/12/30/%E5%A2%A8%E5%AE%B6%E7%9A%84%E6%B6%88%E6%B2%89/mojia2.jpg"><br>在当时国家一统，儒家崇尚的中庸之道和君臣伦理，肯定是最适合封建统治的。而墨家思想身逢乱世尚可，但治世时无法承载统治者的意识形态功能。它虽固有逻辑、注重实用，但更多的是站在<strong>平民立场</strong>，甚至蕴藏着 <strong>“私有制”和反血缘宗法</strong>这一违反基本社会体系的思想。这种思想虽然“先锋”，但在当时的文化土壤上并不合适。<strong>故虽然墨家代表着科学技术的理性光辉，但由于它过于的“早熟”，违反了中国长期以来以家庭血缘为主的社会纽带的主流思想，</strong>且也没有提出一系列的解决方案。</p><p><strong>墨家跨出阴阳五行的中庸思想框架，讲求唯物，讲求“官无常贵、民无终贱”的平等思想，注定与君臣封建等级观念完全相悖。</strong>同时，墨家由于其“超前性”，甚至不能像法家那样与儒家成为 <strong>“一表一里”、互相补充</strong>的结构；也不能像道家与儒家那样以特殊的形式对立着（儒家讲有为，主大一统，道家讲无为，主小国寡民。儒道虽在价值观、处世哲学上相反，但却在内部都符合中庸和思维习惯，像是硬币的两面，是一种有机的对立统一）。但中国古代中儒家观念过于深厚与权力的过于集中，“权术”是大道而“技术”只是些旁门左道、雕虫小技。除了天文、农业、医疗、军事等方面因有着官方支持得以维持，其他方面几乎完全没有发展空间，墨家学说也被极力地打压在社会的底层。</p><h4 id="所以，可以得到这样的结论：故墨家虽有着与古希腊科学相似且相当的水平，但由于其超前性和与主流价值观相悖、与统治阶级需求相悖的性质，中途消绝几乎是必然。"><a href="#所以，可以得到这样的结论：故墨家虽有着与古希腊科学相似且相当的水平，但由于其超前性和与主流价值观相悖、与统治阶级需求相悖的性质，中途消绝几乎是必然。" class="headerlink" title="所以，可以得到这样的结论：故墨家虽有着与古希腊科学相似且相当的水平，但由于其超前性和与主流价值观相悖、与统治阶级需求相悖的性质，中途消绝几乎是必然。"></a><strong>所以，可以得到这样的结论：故墨家虽有着与古希腊科学相似且相当的水平，但由于其超前性和与主流价值观相悖、与统治阶级需求相悖的性质，中途消绝几乎是必然。</strong></h4><p><img src="/2019/12/30/%E5%A2%A8%E5%AE%B6%E7%9A%84%E6%B6%88%E6%B2%89/liyuese.jpg"><br>同时我们发现，中国传统文化中儒主道辅的思想核心其实还在于提升“仁义礼智信”这些个人修养上，是一种<strong>人文主义精神</strong>。而墨家思想更像是解释这个世界的。它是一种<strong>客观意识的理性学科，核心在于如何认识这个世界并提高人类驾驭世界的能力</strong>。细品，这，<strong>就是中华文化中科学思想的基石。</strong></p><p>且从现在的角度细读墨家的经典，它在科学实践领域探索极广。从时空、运动、静止、物质结构这些角度都有涉及。最关键的是，它都是本着实践和理论结合、通过证伪求真的方法。这与近代科学中从客观现象中抽象事物本质的思想不谋而合。</p><h4 id="但，再辩证思考一下。"><a href="#但，再辩证思考一下。" class="headerlink" title="但，再辩证思考一下。"></a>但，再辩证思考一下。</h4><p><strong>或许，如果当时占领主导地位的儒家，不急着排斥墨家而是想着辩证地同化之，或许中国的科学发展将会是另外一种结局。但这只是一种美好的远景。</strong></p><p>事实上，令人遗憾的是，<strong>儒家也确实自始至终也没能将认知的视角从个人转化到自然界上.它过多地关心世俗社会的秩序和人伦运行的结构，最终沦落为了封建统治的工具。而中国古代的科学也因缺失墨家思想，一直以经验和臆断为主，缺乏严密的逻辑推理和理性实验证明，难以产生新的理论飞跃。或者甚至可以说没有成体系的理论。</strong></p><h4 id="综上，经过以上反复地辩证分析，可以进行一个小的总结："><a href="#综上，经过以上反复地辩证分析，可以进行一个小的总结：" class="headerlink" title="综上，经过以上反复地辩证分析，可以进行一个小的总结："></a>综上，经过以上反复地辩证分析，可以进行一个小的总结：</h4><p>墨家的夭折虽几乎是必然的，但也是遗憾的。我认为它的消亡原因、背景能很好地解释“李约瑟难题”。<strong>墨家的失传或者说没有像道家那样被结合到儒家思想中去，是中国科学发展的巨大损失。但毫无疑问，它代表的不仅是一门学说，而是一种思想，一种精神，一种不再总是关注个人、社会而是放眼自然，希望驾驭自然规律的勇气。</strong><br><img src="/2019/12/30/%E5%A2%A8%E5%AE%B6%E7%9A%84%E6%B6%88%E6%B2%89/mojiajiguan.jpeg"></p>]]></content>
      
      
      <categories>
          
          <category> 生活 </category>
          
          <category> 就业&amp;思考 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 个人思考 </tag>
            
            <tag> 辩证 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Mac快捷键介绍</title>
      <link href="/2019/12/03/Mac%E5%BF%AB%E6%8D%B7%E9%94%AE%E8%AE%B0%E5%BD%95/"/>
      <url>/2019/12/03/Mac%E5%BF%AB%E6%8D%B7%E9%94%AE%E8%AE%B0%E5%BD%95/</url>
      
        <content type="html"><![CDATA[<p><strong>很多人不喜欢Mac系统，觉得很多东西不如Windows上手直观。（这让以“简单易用”为宗旨的某公司怎么洗？？）</strong></p><p><strong>主要原因其实是Mac系统的还是有一定的学习成本的（嗯，高贵的Unix贵族绝不屈服&#x2F;🐶）。本部分主要记录些常用的快捷键,多使用快捷键会极大地提高效率。</strong></p><p>Mac 快捷键非常多，但一切快捷键都以四个初始键作为起始，键盘上从左上到右下分别是⇧，⌃，⌥，⌘。由这些键引出各种功能。</p><table><thead><tr><th align="center">符号</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">⇧</td><td align="center">Shift</td></tr><tr><td align="center">⌃</td><td align="center">Control</td></tr><tr><td align="center">⌥</td><td align="center">Option</td></tr><tr><td align="center">⌘</td><td align="center">Command</td></tr></tbody></table><p>先给出几个有趣的快捷键：</p><p>快速调用 emoji 表情：⌘（command）+ ⌃（control）+ 空格键；</p><p>浏览器中将网页加入个人收藏：⌘（command）+ D</p><p>浏览器新建标签页：⌘（command）+ T</p><p>匹配目标格式粘贴：⌘（command） + ⇧ （shift ）+ ⌥（option） + V</p><p>打出 Apple logo 「 」：⇧（shift） + ⌥（option） + K</p><p>不同应用程序之间的切换：⌘（command）+ tab（⇥）</p><p>向前删除：Fn+delete</p><table><thead><tr><th>Ctrl + &#x2F;</th><th>⌘&#x2F;</th><th>以添加 “&#x2F;&#x2F;” 的方式添加注释</th><th>★★★★☆</th></tr></thead><tbody><tr><td>Ctrl + Shift + &#x2F;</td><td>⌘⌥&#x2F;</td><td>添加 “&#x2F;**&#x2F;” 的方式添加注释</td><td>★★★★☆</td></tr></tbody></table><table><thead><tr><th>Ctrl + X or Shift + Delete</th><th>⌘X</th><th>剪切</th><th>★★★★★</th></tr></thead><tbody><tr><td>Ctrl + C or Ctrl + Insert</td><td>⌘C</td><td>复制</td><td>★★★★★</td></tr><tr><td>Ctrl + V or Shift + Insert</td><td>⌘V</td><td>粘贴</td><td>★★★★★</td></tr><tr><td>Ctrl + Shift + V</td><td>⌘⇧V</td><td>从粘贴板中选择内容进行粘贴</td><td>★★★☆☆</td></tr></tbody></table><p>编辑：</p><table><thead><tr><th>组合键</th><th>功能</th></tr></thead><tbody><tr><td>Command-B</td><td>以粗体显示所选文本或切换文本粗体显示开&#x2F;关</td></tr><tr><td>Command-I</td><td>以斜体显示所选文本或切换文本斜体显示开&#x2F;关</td></tr><tr><td>Command-U</td><td>对所选文本加下划线或打开&#x2F;关闭加下划线功能</td></tr><tr><td>Command-T</td><td>显示或隐藏“字体”窗口</td></tr><tr><td><strong>fn-Delete</strong></td><td><strong>向前删除（适用于便携式 Mac 的内建键盘）</strong></td></tr><tr><td>fn-上箭头</td><td>向上滚动一页（相当于 Page Up 键）</td></tr><tr><td>fn-下箭头</td><td>向下滚动一页（相当于 Page Down 键）</td></tr><tr><td>fn-左箭头</td><td>滚动至文稿开头（相当于 Home 键）</td></tr><tr><td>fn-右箭头</td><td>滚动至文稿末尾（相当于 End 键）</td></tr><tr><td>Command-右箭头</td><td>将文本插入点移至当前行的<strong>行尾</strong></td></tr><tr><td>Command-左箭头</td><td>将文本插入点移至当前行的<strong>行首</strong></td></tr><tr><td>Command-下箭头</td><td>将文本插入点移至<strong>文稿末尾</strong></td></tr><tr><td>Command-上箭头</td><td>将文本插入点移至<strong>文稿开头</strong></td></tr><tr><td>Option-右箭头</td><td>将文本插入点移至下一个单词的末尾</td></tr><tr><td>Option-左箭头</td><td>将文本插入点移至上一个单词的开头</td></tr><tr><td>Option-Delete</td><td>删除光标左侧的词，以及词后的任何空格或标点符号</td></tr></tbody></table><table><thead><tr><th>fn-Delete</th><th>向前删除（适用于便携式 Mac 的内建键盘）</th></tr></thead><tbody><tr><td>fn-上箭头</td><td>向上滚动一页（相当于 Page Up 键）</td></tr><tr><td>fn-下箭头</td><td>向下滚动一页（相当于 Page Down 键）</td></tr><tr><td>fn-左箭头</td><td>滚动至文稿开头（相当于 Home 键）</td></tr><tr><td>fn-右箭头</td><td>滚动至文稿末尾（相当于 End 键）</td></tr></tbody></table><table><thead><tr><th align="center">Win &#x2F; Linux</th><th align="center">Mac</th><th align="center">注释</th><th align="center">使用频率</th></tr></thead><tbody><tr><td align="center">Ctrl + F</td><td align="center">⌘F</td><td align="center">查找</td><td align="center">★★★★★</td></tr></tbody></table><table><thead><tr><th>Ctrl + R</th><th>⌘R</th><th>替换</th><th>★★★★★</th></tr></thead><tbody><tr><td></td><td></td><td></td><td></td></tr></tbody></table><table><thead><tr><th>Command-Z</th><th>撤消上一命令（有些 app 可让您撤消多次）</th></tr></thead><tbody><tr><td>Command-Shift-Z</td><td>重做，恢复上次使用撤消进行的更改（有些 app 可让您重做多次）</td></tr></tbody></table><table><thead><tr><th>组合键</th><th>功能</th></tr></thead><tbody><tr><td>Command-Shift-3</td><td>将屏幕捕捉到文件</td></tr><tr><td>Command-Shift-Control-3</td><td>将屏幕内容捕捉到剪贴板</td></tr><tr><td>Command-Shift-4</td><td>将所选屏幕内容捕捉到一个文件，或按空格键仅捕捉一个窗口</td></tr><tr><td>Command-Shift-Control-4</td><td>将所选屏幕内容捕捉到剪贴板，或按空格键仅捕捉一个窗口</td></tr></tbody></table><table><thead><tr><th>Command-Option-R</th><th>在受支持的电脑上使用互联网恢复</th></tr></thead><tbody><tr><td></td><td></td></tr></tbody></table><p>附：Mac 键盘快捷键:<br><img src="/2019/12/03/Mac%E5%BF%AB%E6%8D%B7%E9%94%AE%E8%AE%B0%E5%BD%95/mac.jpg"></p><p>另外，在 Windows PC 专用键盘上， 常用Alt 键代替 Option 键，用 Windows 标志键代替 Command 键。。</p><p><img src="https://support.apple.com/library/content/dam/edam/applecare/images/en_US/mac_apps/itunes/divider.png" alt="img"></p><h2 id="剪切、拷贝、粘贴和其他常用快捷键"><a href="#剪切、拷贝、粘贴和其他常用快捷键" class="headerlink" title="剪切、拷贝、粘贴和其他常用快捷键"></a>剪切、拷贝、粘贴和其他常用快捷键</h2><ul><li><strong>Command-X</strong>：剪切所选项并拷贝到剪贴板。</li><li><strong>Command-C</strong>：将所选项拷贝到剪贴板。这同样适用于“访达”中的文件。</li><li><strong>Command-V</strong>：将剪贴板的内容粘贴到当前文稿或应用中。这同样适用于“访达”中的文件。</li><li><strong>Command-Z</strong>：撤销上一个命令。随后您可以按 Shift-Command-Z 来重做，从而反向执行撤销命令。在某些应用中，您可以撤销和重做多个命令。</li><li><strong>Command-A</strong>：全选各项。</li><li><strong>Command-F</strong>：查找文稿中的项目或打开“查找”窗口。</li><li><strong>Command-G</strong>：再次查找：查找之前所找到项目出现的下一个位置。要查找出现的上一个位置，请按 Shift-Command-G。</li><li><strong>Command-H</strong>：隐藏最前面的应用的窗口。要查看最前面的应用但隐藏所有其他应用，请按 Option-Command-H。</li><li><strong>Command-M</strong>：将最前面的窗口最小化至“程序坞”。要最小化最前面的应用的所有窗口，请按 Option-Command-M。</li><li><strong>Command-O：</strong>打开所选项，或打开一个对话框以选择要打开的文件。</li><li><strong>Command-P</strong>：打印当前文稿。</li><li><strong>Command-S</strong>：存储当前文稿。</li><li><strong>Command-T</strong>：打开新标签页。</li><li><strong>Command-W</strong>：关闭最前面的窗口。要关闭应用的所有窗口，请按下 Option-Command-W。</li><li><strong>Option-Command-Esc</strong>：<a href="https://support.apple.com/zh-cn/HT201276">强制退出</a>应用。</li><li><strong>Command–空格键</strong>：显示或隐藏“<a href="https://support.apple.com/zh-cn/HT201744">聚焦</a>”搜索栏。要从“访达”窗口执行“聚焦”搜索，请按 Command–Option–空格键。（如果您<a href="https://support.apple.com/zh-cn/guide/mac-help/type-in-another-language-with-input-sources-mchlp1406/mac">使用多个输入源</a>以便用不同的语言键入内容，这些快捷键会更改输入源而非显示“聚焦”。了解如何<a href="https://support.apple.com/zh-cn/guide/mac-help/change-a-conflicting-keyboard-shortcut-mh35591/mac">更改冲突的键盘快捷键</a>。）</li><li><strong>Control-Command–空格键</strong>：显示字符检视器，您可以从中选择<a href="https://support.apple.com/zh-cn/HT201586">表情符号和其他符号</a>。</li><li><strong>Control-Command-F</strong>：全屏使用应用（如果应用支持）。</li><li><strong>空格键</strong>：使用<a href="https://support.apple.com/zh-cn/guide/mac-help/quick-look-files-and-folders-mh14119/mac">快速查看</a>来预览所选项。</li><li><strong>Command-Tab</strong>：在打开的应用中切换到下一个最近使用的应用。</li><li><strong>Shift-Command-5</strong>：在 <a href="https://support.apple.com/zh-cn/HT201475">macOS Mojave</a> 中，拍摄屏幕快照或录制屏幕。在更早的 macOS 版本中，请使用 Shift-Command-3 或 Shift-Command-4 来拍摄屏幕快照。<a href="https://support.apple.com/zh-cn/HT201361">进一步了解屏幕快照</a>。</li><li><strong>Shift-Command-N：</strong>在“访达”中创建一个新文件夹。</li><li>**Command-逗号 (,)**：打开最前面的应用的偏好设置。</li></ul><p><img src="https://support.apple.com/library/content/dam/edam/applecare/images/en_US/mac_apps/itunes/divider.png" alt="img"></p><h2 id="睡眠、退出登录和关机快捷键"><a href="#睡眠、退出登录和关机快捷键" class="headerlink" title="睡眠、退出登录和关机快捷键"></a>睡眠、退出登录和关机快捷键</h2><p>在这些快捷键中，您可能需要按住其中一些快捷键稍长时间。这样可以避免您无意中启用快捷键。</p><ul><li><strong>电源按钮</strong>：按下可将 Mac 开机或将 Mac 从睡眠状态唤醒。按住这个按钮 1.5 秒可使 Mac 进入睡眠状态。*继续按住<a href="https://support.apple.com/zh-cn/HT201150">则会强制您的 Mac 关机</a>。</li><li><strong>Option–Command–电源按钮</strong>*或 <strong>Option–Command–Media Eject（Option–Command–介质推出键）</strong>：将您的 Mac 置于睡眠状态。</li><li><strong>Control–Shift–电源按钮</strong>*或 <strong>Control–Shift–Media Eject（Control–Shift–介质推出键）</strong>：将显示器置于睡眠状态。</li><li><strong>Control–电源按钮</strong>*或 <strong>Control–Media Eject（Control–介质推出键）</strong>：显示一个对话框，询问您是要重新启动、睡眠还是关机。</li><li><strong>Control–Command–Power 电源按钮</strong>：*强制 Mac 重新启动，系统不会提示是否要存储任何打开且未存储的文稿。</li><li><strong>Control–Command–Media Eject（Control–Command–介质推出键）</strong>：退出所有应用，然后重新启动您的 Mac。如果任何打开的文稿有未存储的更改，系统会询问您是否要存储这些更改。</li><li><strong>Control–Option-Command–电源按钮</strong>*或 <strong>Control–Option–Command–Media Eject（Control–Option–Command–介质推出键）</strong>：退出所有应用，然后将您的 Mac 关机。如果任何打开的文稿有未存储的更改，系统会询问您是否要存储这些更改。</li><li><strong>Shift–Command–Q</strong>：退出登录您的 macOS 用户帐户。系统将提示您确认。要在不确认的情况下立即退出登录，请按下 Option-Shift-Command-Q。</li></ul><p>* 不适用于<a href="https://support.apple.com/zh-cn/HT207054">触控 ID 传感器</a>。</p><p><img src="https://support.apple.com/library/content/dam/edam/applecare/images/en_US/mac_apps/itunes/divider.png" alt="img"></p><h2 id="访达和系统快捷键"><a href="#访达和系统快捷键" class="headerlink" title="访达和系统快捷键"></a>访达和系统快捷键</h2><ul><li><strong>Command-D</strong>：复制所选文件。</li><li><strong>Command-E</strong>：推出所选磁盘或宗卷。</li><li><strong>Command-F</strong>：在“访达”窗口中开始“聚焦”搜索。</li><li><strong>Command-I</strong>：显示所选文件的“显示简介”窗口。</li><li><strong>Command-R</strong>：(1) 如果在“访达”中选择了某个别名：显示所选别名对应的原始文件。(2) 在某些应用（如“日历”或 Safari 浏览器）中，刷新或重新载入页面。(3) 在<a href="https://support.apple.com/zh-cn/HT201541">“软件更新”偏好设置</a>中，再次检查有没有软件更新。</li><li><strong>Shift-Command-C</strong>：打开“电脑”窗口。</li><li><strong>Shift-Command-D</strong>：打开“桌面”文件夹。</li><li><strong>Shift-Command-F</strong>：打开“最近使用”窗口，其中显示了您最近查看或更改过的所有文件。</li><li><strong>Shift-Command-G</strong>：打开“前往文件夹”窗口。</li><li><strong>Shift-Command-H</strong>：打开当前 macOS 用户帐户的个人文件夹。</li><li><strong>Shift-Command-I</strong>：打开 iCloud 云盘。</li><li><strong>Shift-Command-K</strong>：打开“网络”窗口。</li><li><strong>Option-Command-L</strong>：打开“下载”文件夹。</li><li><strong>Shift-Command-N：</strong>新建文件夹。</li><li><strong>Shift-Command-O</strong>：打开“文稿”文件夹。</li><li><strong>Shift-Command-P</strong>：在“访达”窗口中显示或隐藏预览面板。</li><li><strong>Shift-Command-R</strong>：打开“隔空投送”窗口。</li><li><strong>Shift-Command-T</strong>：显示或隐藏“访达”窗口中的标签页栏。</li><li><strong>Ctrl-Shift-Command-T</strong>：将所选的“访达”项目添加到“程序坞”（OS X Mavericks 或更高版本）</li><li><strong>Shift-Command-U</strong>：打开“实用工具”文件夹。</li><li><strong>Option-Command-D</strong>：显示或隐藏“程序坞”。</li><li><strong>Control-Command-T</strong>：将所选项添加到边栏（OS X Mavericks 或更高版本）。</li><li><strong>Option-Command-P</strong>：隐藏或显示“访达”窗口中的路径栏。</li><li><strong>Option-Command-S</strong>：隐藏或显示“访达”窗口中的边栏。</li><li>**Command–斜线 (&#x2F;)**：隐藏或显示“访达”窗口中的状态栏。</li><li><strong>Command-J</strong>：显示“显示”选项。</li><li><strong>Command-K</strong>：打开“连接服务器”窗口。</li><li><strong>Command-L</strong>：为所选项制作替身。</li><li><strong>Command-N</strong>：打开一个新的“访达”窗口。</li><li><strong>Option-Command-N</strong>：新建智能文件夹。</li><li><strong>Command-T</strong>：在当前“访达”窗口中有单个标签页开着的状态下显示或隐藏标签页栏。</li><li><strong>Option-Command-T</strong>：在当前“访达”窗口中有单个标签页开着的状态下显示或隐藏工具栏。</li><li><strong>Option-Command-V</strong>：移动：将剪贴板中的文件从原始位置移动到当前位置。</li><li><strong>Command-Y</strong>：使用“快速查看”预览所选文件。</li><li><strong>Option-Command-Y</strong>：显示所选文件的快速查看幻灯片显示。</li><li><strong>Command-1</strong>：以图标方式显示“访达”窗口中的项目。</li><li><strong>Command-2</strong>：以列表方式显示“访达”窗口中的项目。</li><li><strong>Command-3</strong>：以分栏方式显示“访达”窗口中的项目。</li><li><strong>Command-4</strong>：以封面流方式显示“访达”窗口中的项目。</li><li>**Command–左中括号 ([)**：前往上一文件夹。</li><li>**Command–右中括号 (])**：前往下一个文件夹。</li><li><strong>Command–上箭头</strong>：打开包含当前文件夹的文件夹。</li><li><strong>Command–Control–上箭头</strong>：在新窗口中打开包含当前文件夹的文件夹。</li><li><strong>Command–下箭头</strong>：打开所选项。</li><li><strong>右箭头</strong>：打开所选文件夹。这个快捷键仅在列表视图中有效。</li><li><strong>左箭头</strong>：关闭所选文件夹。这个快捷键仅在列表视图中有效。</li><li><strong>Command-Delete</strong>：将所选项移到废纸篓。</li><li><strong>Shift-Command-Delete</strong>：清倒废纸篓。</li><li><strong>Option-Shift-Command-Delete</strong>：清倒废纸篓而不显示确认对话框。</li><li><strong>Command–调高亮度</strong>：打开或关闭<a href="https://support.apple.com/zh-cn/HT204592">目标显示器模式</a>。</li><li><strong>Command–调低亮度</strong>：当您的 Mac 连接到多台显示器时，打开或关闭<a href="https://support.apple.com/zh-cn/HT202351#mirroring">视频镜像</a>。</li><li><strong>Option–调高亮度</strong>：打开“显示器”偏好设置。这个快捷键可与任一亮度键搭配使用。</li><li><strong>Control–调高亮度</strong>或 <strong>Control–调低亮度</strong>：更改外部显示器的亮度（如果显示器支持）。</li><li><strong>Option-Shift–调高亮度</strong>或 <strong>Option-Shift–调低亮度</strong>：以较小的步幅调节显示器亮度。如果您的显示器支持，可以将 Control 键添加到此快捷键，以便在外置显示器上进行调节。</li><li><strong>Option–“调度中心”</strong>：打开“调度中心”偏好设置。</li><li><strong>Command–“调度中心”</strong>：显示桌面。</li><li><strong>Control–下箭头</strong>：显示最前面的应用的所有窗口。</li><li><strong>Option–调高音量</strong>：打开“声音”偏好设置。这个快捷键可与任一音量键搭配使用。</li><li><strong>Option-Shift–调高音量</strong>或 <strong>Option-Shift–调低音量</strong>：以较小的步幅调节音量。</li><li><strong>Option–键盘调高亮度</strong>：打开“键盘”偏好设置。这个快捷键可与任一键盘亮度键搭配使用。</li><li><strong>Option-Shift–键盘调高亮度</strong>或 <strong>Option-Shift–键盘调低亮度</strong>：以较小的步幅调节键盘亮度。</li><li><strong>连按 Option 键</strong>：在单独的窗口中打开项目，然后关闭原始窗口。</li><li><strong>连按 Command 键</strong>：在单独的标签页或窗口中打开文件夹。</li><li><strong>按住 Command 键拖移到另一个宗卷</strong>：将拖移的项目移到另一个宗卷，而不是拷贝它。</li><li><strong>按住 Option 键拖移</strong>：拷贝托移的项目。拖移项目时指针会随之变化。</li><li><strong>按住 Option-Command 键拖移</strong>：为拖移的项目制作替身。拖移项目时指针会随之变化。</li><li><strong>按住 Option 键点按开合三角</strong>：打开所选文件夹内的所有文件夹。此快捷键仅在列表视图中有效。</li><li><strong>按住 Command 键点按窗口标题</strong>：查看包含当前文件夹的文件夹。</li><li><a href="https://support.apple.com/zh-cn/guide/mac-help/select-items-mchlp1378/mac">了解如何使用 Command 或 Shift 在“访达”中选择多个项目</a>。</li><li>点按“访达”菜单栏中的“前往”菜单查看用于打开许多常用文件夹（如“应用程序”、“文稿”、“下载”、“实用工具”和“iCloud 云盘”）的快捷键。</li></ul><p><img src="https://support.apple.com/library/content/dam/edam/applecare/images/en_US/mac_apps/itunes/divider.png" alt="img"></p><h2 id="文稿快捷键"><a href="#文稿快捷键" class="headerlink" title="文稿快捷键"></a>文稿快捷键</h2><p>这些快捷键的行为可能因您使用的应用而异。</p><ul><li><strong>Command-B</strong>：以粗体显示所选文本，或者打开或关闭粗体显示功能。</li><li><strong>Command-I</strong>：以斜体显示所选文本，或者打开或关闭斜体显示功能。</li><li><strong>Command-K</strong>：添加网页链接。</li><li><strong>Command-U</strong>：对所选文本加下划线，或者打开或关闭加下划线功能。</li><li><strong>Command-T</strong>：显示或隐藏“字体”窗口。</li><li><strong>Command-D</strong>：从“打开”对话框或“存储”对话框内选择“桌面”文件夹。</li><li><strong>Control-Command-D</strong>：显示或隐藏所选字词的定义。</li><li>**Shift-Command–冒号 (:)**：显示“拼写和语法”窗口。</li><li>**Command–分号 (;)**：查找文稿中拼写错误的字词。</li><li><strong>Option-Delete</strong>：删除插入点左边的字词。</li><li><strong>Control-H</strong>：删除插入点左边的字符。也可以使用 Delete 键。</li><li><strong>Control-D</strong>：删除插入点右边的字符。也可以使用 Fn-Delete。</li><li><strong>Fn-Delete</strong>：在没有向前删除  键的键盘上向前删除。也可以使用 Control-D。</li><li><strong>Control-K</strong>：删除插入点与行或段落末尾处之间的文本。</li><li><strong>Fn–上箭头</strong>：Page Up：向上滚动一页。</li><li><strong>Fn–下箭头</strong>：Page Down：向下滚动一页。</li><li><strong>Fn–左箭头：</strong>Home：滚动到文稿开头。</li><li><strong>Fn–右箭头</strong>：End：滚动到文稿末尾。</li><li><strong>Command–上箭头</strong>：将插入点移至文稿开头。</li><li><strong>Command–下箭头</strong>：将插入点移至文稿末尾。</li><li><strong>Command–左箭头</strong>：将插入点移至当前行的行首。</li><li><strong>Command–右箭头</strong>：将插入点移至当前行的行尾。</li><li><strong>Option–左箭头</strong>：将插入点移至上一字词的词首。</li><li><strong>Option–右箭头</strong>：将插入点移至下一字词的词尾。</li><li><strong>Shift-Command–上箭头</strong>：选中插入点与文稿开头之间的文本。</li><li><strong>Shift-Command–下箭头</strong>：选中插入点与文稿末尾之间的文本。</li><li><strong>Shift-Command–左箭头</strong>：选中插入点与当前行行首之间的文本。</li><li><strong>Shift-Command–右箭头</strong>：选中插入点与当前行行尾之间的文本。</li><li><strong>Shift–上箭头</strong>：将文本选择范围扩展到上一行相同水平位置的最近字符处。</li><li><strong>Shift–下箭头</strong>：将文本选择范围扩展到下一行相同水平位置的最近字符处。</li><li><strong>Shift–左箭头</strong>：将文本选择范围向左扩展一个字符。</li><li><strong>Shift–右箭头</strong>：将文本选择范围向右扩展一个字符。</li><li><strong>Option–Shift–上箭头</strong>：将文本选择范围扩展到当前段落的段首，再按一次则扩展到下一段落的段首。</li><li><strong>Option–Shift–下箭头</strong>：将文本选择范围扩展到当前段落的段尾，再按一次则扩展到下一段落的段尾。</li><li><strong>Option–Shift–左箭头</strong>：将文本选择范围扩展到当前字词的词首，再按一次则扩展到后一字词的词首。</li><li><strong>Option–Shift–左箭头</strong>：将文本选择范围扩展到当前字词的词尾，再按一次则扩展到后一字词的词尾。</li><li><strong>Control–A</strong>：移至行或段落的开头。</li><li><strong>Control–E</strong>：移至行或段落的末尾。</li><li><strong>Control–F</strong>：向前移动一个字符。</li><li><strong>Control–B</strong>：向后移动一个字符。</li><li><strong>Control–L</strong>：将光标或所选内容置于可见区域中央。</li><li><strong>Control–P</strong>：上移一行。</li><li><strong>Control–N</strong>：下移一行。</li><li><strong>Control–O</strong>：在插入点后新插入一行。</li><li><strong>Control–T</strong>：将插入点后面的字符与插入点前面的字符交换。</li><li>**Command–左花括号 ({)**：左对齐。</li><li>**Command–右花括号 (})**：右对齐。</li><li>**Shift-Command–竖线 (|)**：居中对齐。</li><li><strong>Option-Command-F</strong>：前往搜索栏。</li><li><strong>Option-Command-T</strong>：显示或隐藏应用中的工具栏。</li><li><strong>Option-Command-C</strong>：拷贝样式：将所选项的格式设置拷贝到剪贴板。</li><li><strong>Option-Command-V</strong>：粘贴样式：将拷贝的样式应用到所选项。</li><li><strong>Option-Shift-Command-V</strong>：粘贴并匹配样式：将周围内容的样式应用到粘贴在该内容中的项目。</li><li><strong>Option-Command-I</strong>：显示或隐藏检查器窗口。</li><li><strong>Shift-Command-P</strong>：页面设置：显示用于选择文稿设置的窗口。</li><li><strong>Shift-Command-S</strong>：显示“存储为”对话框或复制当前文稿。</li><li>**Shift-Command-减号 (-)**：缩小所选项。</li><li>**Shift-Command-加号 (+)**：放大所选项。Command–等号 (&#x3D;) 可实现相同的功能。</li><li>**Shift-Command–问号 (?)**：打开“帮助”菜单。</li></ul><p>洗完了，好累。。。以上</p>]]></content>
      
      
      <categories>
          
          <category> 硬件 </category>
          
          <category> Mac </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Mac </tag>
            
            <tag> 快捷键 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>百炼OJ-C++练习</title>
      <link href="/2019/12/01/%E7%99%BE%E7%82%BCOJ%E7%BB%83%E4%B9%A0/"/>
      <url>/2019/12/01/%E7%99%BE%E7%82%BCOJ%E7%BB%83%E4%B9%A0/</url>
      
        <content type="html"><![CDATA[<h1 id="自己在百炼OJ上练习的一些算法题"><a href="#自己在百炼OJ上练习的一些算法题" class="headerlink" title="自己在百炼OJ上练习的一些算法题"></a>自己在百炼OJ上练习的一些算法题</h1><h2 id="1088"><a href="#1088" class="headerlink" title="1088"></a>1088</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-comment">//http://bailian.openjudge.cn/practice/1088/</span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;cstdio&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;cstring&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;iostream&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;algorithm&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;cmath&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;string&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-type">const</span> <span class="hljs-type">int</span> dx[<span class="hljs-number">4</span>]=&#123;<span class="hljs-number">1</span>,<span class="hljs-number">-1</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>&#125;;<br><span class="hljs-type">const</span> <span class="hljs-type">int</span> dy[<span class="hljs-number">4</span>]=&#123;<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">-1</span>&#125;;<br><span class="hljs-type">int</span> moun[<span class="hljs-number">105</span>][<span class="hljs-number">105</span>];<br><span class="hljs-type">int</span> cnt[<span class="hljs-number">105</span>][<span class="hljs-number">105</span>];<br><span class="hljs-type">int</span> R,C;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">dfs</span><span class="hljs-params">(<span class="hljs-type">int</span> x,<span class="hljs-type">int</span> y)</span></span>&#123;<br>    <span class="hljs-keyword">if</span>(cnt[x][y]&gt;=<span class="hljs-number">0</span>) <span class="hljs-keyword">return</span> cnt[x][y];<br>    <span class="hljs-type">int</span> ans=<span class="hljs-number">0</span>;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">0</span>;i&lt;<span class="hljs-number">4</span>;++i)&#123;<br>        <span class="hljs-type">int</span> nx=x+dx[i],ny=y+dy[i];<br>        <span class="hljs-keyword">if</span>(nx&gt;<span class="hljs-number">0</span>&amp;&amp;nx&lt;=R&amp;&amp;ny&gt;<span class="hljs-number">0</span>&amp;&amp;ny&lt;=C&amp;&amp;moun[nx][ny]&lt;moun[x][y]) <br>            ans=<span class="hljs-built_in">max</span>(ans,<span class="hljs-number">1</span>+<span class="hljs-built_in">dfs</span>(nx,ny));<br>    &#125;<br>    <span class="hljs-keyword">return</span> cnt[x][y]=ans;<br>&#125;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span>&#123;<br>    <span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%d%d&quot;</span>,&amp;R,&amp;C);<br>    <span class="hljs-built_in">memset</span>(cnt,<span class="hljs-number">-1</span>,<span class="hljs-built_in">sizeof</span>(cnt));<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=R;++i) <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> j=<span class="hljs-number">1</span>;j&lt;=C;++j) <span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%d&quot;</span>,&amp;moun[i][j]);<br>    <span class="hljs-type">int</span> ans=<span class="hljs-number">0</span>;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=R;++i) <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> j=<span class="hljs-number">1</span>;j&lt;=C;++j) <br>        ans=<span class="hljs-built_in">max</span>(ans,<span class="hljs-built_in">dfs</span>(i,j));<br>    ++ans;<br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%d\n&quot;</span>,ans);<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="1163"><a href="#1163" class="headerlink" title="1163"></a>1163</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;iostream&gt;</span>    </span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;algorithm&gt;</span>   </span><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> MAX 101    </span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;   <br><span class="hljs-type">int</span> D[MAX][MAX];    <br><span class="hljs-type">int</span> n;    <br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">MaxSum</span><span class="hljs-params">(<span class="hljs-type">int</span> i, <span class="hljs-type">int</span> j)</span></span>&#123;      <br>    <span class="hljs-keyword">if</span>(i==n)    <br>        <span class="hljs-keyword">return</span> D[i][j];      <br>    <span class="hljs-type">int</span> x = <span class="hljs-built_in">MaxSum</span>(i+<span class="hljs-number">1</span>,j);      <br>    <span class="hljs-type">int</span> y = <span class="hljs-built_in">MaxSum</span>(i+<span class="hljs-number">1</span>,j+<span class="hljs-number">1</span>);      <br>    <span class="hljs-keyword">return</span> <span class="hljs-built_in">max</span>(x,y)+D[i][j];    <br>&#125;  <br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span>&#123;      <br>    <span class="hljs-type">int</span> i,j;      <br>    cin &gt;&gt; n;      <br>    <span class="hljs-keyword">for</span>(i=<span class="hljs-number">1</span>;i&lt;=n;i++)     <br>        <span class="hljs-keyword">for</span>(j=<span class="hljs-number">1</span>;j&lt;=i;j++)          <br>            cin &gt;&gt; D[i][j];      <br>    cout &lt;&lt; <span class="hljs-built_in">MaxSum</span>(<span class="hljs-number">1</span>,<span class="hljs-number">1</span>) &lt;&lt; endl;    <br>&#125;    <br></code></pre></td></tr></table></figure><h2 id="1191"><a href="#1191" class="headerlink" title="1191"></a>1191</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;iostream&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;cmath&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;iomanip&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> inf 6400*6400*15</span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-type">int</span> map[<span class="hljs-number">8</span>][<span class="hljs-number">8</span>],n;<br><span class="hljs-type">double</span> m=<span class="hljs-number">0</span>,mn=inf;<br><span class="hljs-function"><span class="hljs-type">double</span> <span class="hljs-title">add</span><span class="hljs-params">(<span class="hljs-type">int</span> x1,<span class="hljs-type">int</span> x2,<span class="hljs-type">int</span> y1,<span class="hljs-type">int</span> y2)</span></span>&#123;<br>    <span class="hljs-type">double</span> sm=<span class="hljs-number">0</span>;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=x1;i&lt;x2;i++)<br>        <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> j=y1;j&lt;y2;j++)<br>            sm+=map[i][j];<br>    <span class="hljs-keyword">return</span> sm;<br>&#125;<br><span class="hljs-function"><span class="hljs-type">double</span> <span class="hljs-title">dfs</span><span class="hljs-params">(<span class="hljs-type">int</span> u,<span class="hljs-type">int</span> d,<span class="hljs-type">int</span> l,<span class="hljs-type">int</span> r,<span class="hljs-type">int</span> dep,<span class="hljs-type">double</span> sm)</span></span>&#123;<br>    <span class="hljs-keyword">if</span>(dep==n)&#123;<br>        <span class="hljs-type">double</span> x=<span class="hljs-built_in">add</span>(u,d,l,r);<br>        <span class="hljs-keyword">return</span> (x-m)*(x-m);<br>    &#125;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=u+<span class="hljs-number">1</span>;i&lt;d;i++)&#123;<br>        <span class="hljs-type">double</span> x=<span class="hljs-built_in">add</span>(u,i,l,r);<br>        sm+=(x-m)*(x-m);<br>        <span class="hljs-keyword">if</span>(sm&gt;=mn)&#123;<br>            sm-=(x-m)*(x-m);<br>            <span class="hljs-keyword">continue</span>;<br>        &#125;<br>        <span class="hljs-type">double</span> y=<span class="hljs-built_in">dfs</span>(i,d,l,r,dep+<span class="hljs-number">1</span>,sm);<br>        <span class="hljs-keyword">if</span>(sm+y&lt;mn) mn=sm+y;<br>        sm-=(x-m)*(x-m);<br>    &#125;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=u+<span class="hljs-number">1</span>;i&lt;d;i++)&#123;<br>        <span class="hljs-type">double</span> x=<span class="hljs-built_in">add</span>(i,d,l,r);<br>        sm+=(x-m)*(x-m);<br>        <span class="hljs-keyword">if</span>(sm&gt;=mn)&#123;<br>            sm-=(x-m)*(x-m);<br>            <span class="hljs-keyword">continue</span>;<br>        &#125;<br>        <span class="hljs-type">double</span> y=<span class="hljs-built_in">dfs</span>(u,i,l,r,dep+<span class="hljs-number">1</span>,sm);<br>        <span class="hljs-keyword">if</span>(sm+y&lt;mn) mn=sm+y;<br>        sm-=(x-m)*(x-m);<br>    &#125;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=l+<span class="hljs-number">1</span>;i&lt;r;i++)&#123;<br>        <span class="hljs-type">double</span> x=<span class="hljs-built_in">add</span>(u,d,l,i);<br>        sm+=(x-m)*(x-m);<br>        <span class="hljs-keyword">if</span>(sm&gt;=mn)&#123;<br>            sm-=(x-m)*(x-m);<br>            <span class="hljs-keyword">continue</span>;<br>        &#125;<br>        <span class="hljs-type">double</span> y=<span class="hljs-built_in">dfs</span>(u,d,i,r,dep+<span class="hljs-number">1</span>,sm);<br>        <span class="hljs-keyword">if</span>(sm+y&lt;mn) mn=sm+y;<br>        sm-=(x-m)*(x-m);<br>    &#125;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=l+<span class="hljs-number">1</span>;i&lt;r;i++)&#123;<br>        <span class="hljs-type">double</span> x=<span class="hljs-built_in">add</span>(u,d,i,r);<br>        sm+=(x-m)*(x-m);<br>        <span class="hljs-keyword">if</span>(sm&gt;=mn)&#123;<br>            sm-=(x-m)*(x-m);<br>            <span class="hljs-keyword">continue</span>;<br>        &#125;<br>        <span class="hljs-type">double</span> y=<span class="hljs-built_in">dfs</span>(u,d,l,i,dep+<span class="hljs-number">1</span>,sm);<br>        <span class="hljs-keyword">if</span>(sm+y&lt;mn) mn=sm+y;<br>        sm-=(x-m)*(x-m);<br>    &#125;<br>    <span class="hljs-keyword">return</span> inf;<br>&#125;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span>&#123;<br>    cin&gt;&gt;n;<br>    <span class="hljs-type">double</span> sm=<span class="hljs-number">0</span>;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">0</span>;i&lt;<span class="hljs-number">8</span>;i++)<br>        <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> j=<span class="hljs-number">0</span>;j&lt;<span class="hljs-number">8</span>;j++)&#123;<br>            cin&gt;&gt;map[i][j];<br>            sm+=map[i][j];<br>        &#125;<br>    m=sm/n;<br>    <span class="hljs-built_in">dfs</span>(<span class="hljs-number">0</span>,<span class="hljs-number">8</span>,<span class="hljs-number">0</span>,<span class="hljs-number">8</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>);<br>    <span class="hljs-keyword">if</span>(n==<span class="hljs-number">1</span>)<br>        mn=<span class="hljs-number">0</span>;<br>    cout&lt;&lt;fixed&lt;&lt;<span class="hljs-built_in">setprecision</span>(<span class="hljs-number">3</span>)&lt;&lt;<span class="hljs-built_in">sqrt</span>(mn/n)&lt;&lt;endl;<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="2339"><a href="#2339" class="headerlink" title="2339"></a>2339</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;iostream&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br><span class="hljs-type">int</span> M,N,T;<br>cin&gt;&gt;M&gt;&gt;N&gt;&gt;T;<br><span class="hljs-type">char</span> ch;<br><span class="hljs-type">char</span> s[<span class="hljs-number">100</span>][<span class="hljs-number">100</span>]=&#123;<span class="hljs-number">0</span>&#125;;<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">0</span>;i&lt;M;i++)<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> j=<span class="hljs-number">0</span>;j&lt;N;j++)<br>cin&gt;&gt;s[i][j];<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> t=<span class="hljs-number">0</span>;t&lt;T;t++)<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">0</span>;i&lt;M<span class="hljs-number">-1</span>;i++)<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> j=<span class="hljs-number">0</span>;j&lt;N<span class="hljs-number">-1</span>;j++)<br><span class="hljs-keyword">if</span>(s[i][j])<br>(ch=cin.<span class="hljs-built_in">get</span>())==<span class="hljs-string">&#x27;R&#x27;</span><br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="2682"><a href="#2682" class="headerlink" title="2682"></a>2682</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;iostream&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;vector&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;map&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;algorithm&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-type">const</span> <span class="hljs-type">int</span> MAXSIZE=<span class="hljs-number">10000</span>;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br><span class="hljs-type">int</span> N,M;<br>cin&gt;&gt;N&gt;&gt;M;<br><span class="hljs-type">int</span> s[MAXSIZE]=&#123;<span class="hljs-number">0</span>&#125;;<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">0</span>;i&lt;N;i++)<br>cin&gt;&gt;s[i];<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> j=<span class="hljs-number">0</span>;j&lt;M;j++)<br>*(s+N+j)=*(s+j+N-M);<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> j=<span class="hljs-number">0</span>;j&lt;N-M;j++)<br>*(s+N+M+j)=*(s+j);<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> j=<span class="hljs-number">0</span>;j&lt;N;j++)<br>*(s+j)=*(s+N+j);<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">0</span>;i&lt;N;i++)<br>cout&lt;&lt;s[i]&lt;&lt;<span class="hljs-string">&quot; &quot;</span>;<br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br> &#125; <br></code></pre></td></tr></table></figure><h2 id="2694"><a href="#2694" class="headerlink" title="2694"></a>2694</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;cstdlib&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;cstdio&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-type">char</span> k[<span class="hljs-number">30</span>];<br><span class="hljs-function"><span class="hljs-type">double</span> <span class="hljs-title">f</span><span class="hljs-params">()</span></span>&#123;<br><span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%s&quot;</span>,k);<br><span class="hljs-keyword">switch</span>(k[<span class="hljs-number">0</span>])&#123;<br><span class="hljs-keyword">case</span> <span class="hljs-string">&#x27;+&#x27;</span>:<span class="hljs-keyword">return</span> <span class="hljs-built_in">f</span>()+<span class="hljs-built_in">f</span>();<br><span class="hljs-keyword">case</span> <span class="hljs-string">&#x27;-&#x27;</span>:<span class="hljs-keyword">return</span> <span class="hljs-built_in">f</span>()-<span class="hljs-built_in">f</span>();<br><span class="hljs-keyword">case</span> <span class="hljs-string">&#x27;*&#x27;</span>:<span class="hljs-keyword">return</span> <span class="hljs-built_in">f</span>()*<span class="hljs-built_in">f</span>();<br><span class="hljs-keyword">case</span> <span class="hljs-string">&#x27;/&#x27;</span>:<span class="hljs-keyword">return</span> <span class="hljs-built_in">f</span>()/<span class="hljs-built_in">f</span>();<br><span class="hljs-keyword">default</span>:<span class="hljs-keyword">return</span> <span class="hljs-built_in">atof</span>(k);&#125;&#125;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span>&#123;<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%f&quot;</span>,<span class="hljs-built_in">f</span>());<br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;&#125;<br></code></pre></td></tr></table></figure><h2 id="2712"><a href="#2712" class="headerlink" title="2712"></a>2712</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;iostream&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-type">const</span> <span class="hljs-type">int</span> mon[<span class="hljs-number">13</span>]=&#123;<span class="hljs-number">0</span>,<span class="hljs-number">31</span>,<span class="hljs-number">28</span>,<span class="hljs-number">31</span>,<span class="hljs-number">30</span>,<span class="hljs-number">31</span>,<span class="hljs-number">30</span>,<span class="hljs-number">31</span>,<span class="hljs-number">31</span>,<span class="hljs-number">30</span>,<span class="hljs-number">31</span>,<span class="hljs-number">30</span>,<span class="hljs-number">31</span>&#125;;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">interval</span><span class="hljs-params">(<span class="hljs-type">int</span> m1,<span class="hljs-type">int</span> d1,<span class="hljs-type">int</span> m2,<span class="hljs-type">int</span> d2)</span></span><br><span class="hljs-function"></span>&#123;<br><span class="hljs-keyword">if</span>(m1==m2)<br><span class="hljs-keyword">return</span> d2-d1;<br><span class="hljs-keyword">else</span><br>&#123;<br><span class="hljs-type">int</span> t=m2-m1;<br><span class="hljs-type">int</span> sum=mon[m1]-d1;<br><span class="hljs-keyword">while</span>(--t)<br>sum=sum+mon[++m1];<br>sum+=d2;<br><span class="hljs-keyword">return</span> sum;<br>&#125;<br>&#125;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br><span class="hljs-type">int</span> N,iter;<br>cin&gt;&gt;N;<br><span class="hljs-type">int</span> m1[<span class="hljs-number">10000</span>]=&#123;<span class="hljs-number">0</span>&#125;;<br><span class="hljs-type">int</span> d1[<span class="hljs-number">10000</span>]=&#123;<span class="hljs-number">0</span>&#125;;<br><span class="hljs-type">int</span> m2[<span class="hljs-number">10000</span>]=&#123;<span class="hljs-number">0</span>&#125;;<br><span class="hljs-type">int</span> d2[<span class="hljs-number">10000</span>]=&#123;<span class="hljs-number">0</span>&#125;;<br><span class="hljs-type">long</span> <span class="hljs-type">long</span> c[<span class="hljs-number">10000</span>]=&#123;<span class="hljs-number">0</span>&#125;;<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">0</span>;i&lt;N;i++)<br>&#123;<br>cin&gt;&gt;m1[i]&gt;&gt;d1[i]&gt;&gt;c[i]&gt;&gt;m2[i]&gt;&gt;d2[i];<br>iter=<span class="hljs-built_in">interval</span>(m1[i],d1[i],m2[i],d2[i]);<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> j=<span class="hljs-number">0</span>;j&lt;iter;j++)<br>c[i]=<span class="hljs-number">2</span>*c[i];<br>&#125;<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i;i&lt;N;i++)<br>cout&lt;&lt;c[i]&lt;&lt;endl;<br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="2943"><a href="#2943" class="headerlink" title="2943"></a>2943</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;iostream&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;algorithm&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;vector&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;string&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;map&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><br><span class="hljs-function"><span class="hljs-type">bool</span> <span class="hljs-title">compare</span><span class="hljs-params">(<span class="hljs-type">int</span> a,<span class="hljs-type">int</span> b)</span></span><br><span class="hljs-function"></span>&#123;<br><span class="hljs-keyword">return</span> a&gt;b;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br><span class="hljs-type">int</span> N;<br>cin&gt;&gt;N;<br>vector&lt;<span class="hljs-type">int</span>&gt; weight;<br><span class="hljs-type">int</span> temp;<br>string s1;<br>map&lt;<span class="hljs-type">int</span>,string&gt; mapcolor;<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">0</span>;i&lt;N;i++)<br>&#123;<br>cin&gt;&gt;temp;<br>weight.<span class="hljs-built_in">push_back</span>(temp);<br>cin&gt;&gt;s1;<br>mapcolor[temp]=s1;<br>&#125;<br><span class="hljs-built_in">sort</span>(weight.<span class="hljs-built_in">begin</span>(),weight.<span class="hljs-built_in">end</span>(),compare);<br>vector&lt;<span class="hljs-type">int</span>&gt;::iterator it=weight.<span class="hljs-built_in">begin</span>();<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">0</span>;i&lt;N;i++)<br>&#123;<br>cout&lt;&lt;mapcolor[*it++]&lt;&lt;endl;<br>&#125;<br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="2975"><a href="#2975" class="headerlink" title="2975"></a>2975</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;cstdio&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;cstring&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;iostream&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;algorithm&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;cmath&gt;</span></span><br><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-type">char</span> key[<span class="hljs-number">30</span>]=<span class="hljs-string">&quot;VWXYZABCDEFGHIJKLMNOPQRSTU&quot;</span>;<br><span class="hljs-type">char</span> buf[<span class="hljs-number">20</span>];<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span>&#123;<br>    <span class="hljs-keyword">while</span>(<span class="hljs-number">1</span>)&#123;<br>        <span class="hljs-built_in">gets</span>(buf);<br>        <span class="hljs-keyword">if</span>(<span class="hljs-built_in">strlen</span>(buf)&gt;<span class="hljs-number">7</span>) <span class="hljs-keyword">break</span>;<br>        <span class="hljs-type">char</span> ch;<br>        <span class="hljs-keyword">while</span>(<span class="hljs-number">1</span>)<br>&#123;ch=<span class="hljs-built_in">getchar</span>();<br>        <span class="hljs-keyword">if</span>(ch==<span class="hljs-string">&#x27;\n&#x27;</span>) <span class="hljs-keyword">break</span>;<br>        <span class="hljs-keyword">if</span>(ch&gt;=<span class="hljs-string">&#x27;A&#x27;</span>&amp;&amp;ch&lt;=<span class="hljs-string">&#x27;Z&#x27;</span>) <span class="hljs-built_in">putchar</span>(key[ch-<span class="hljs-string">&#x27;A&#x27;</span>]);<br>        <span class="hljs-keyword">else</span> <span class="hljs-built_in">putchar</span>(ch);<br>        &#125;<br>        <span class="hljs-built_in">putchar</span>(<span class="hljs-string">&#x27;\n&#x27;</span>);<br>        <span class="hljs-built_in">gets</span>(buf);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="4148"><a href="#4148" class="headerlink" title="4148"></a>4148</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;iostream&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;cstring&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br><span class="hljs-type">int</span> s[<span class="hljs-number">10000</span>][<span class="hljs-number">4</span>]=&#123;<span class="hljs-number">0</span>&#125;;<br><span class="hljs-type">int</span> k[<span class="hljs-number">1000</span>]=&#123;<span class="hljs-number">0</span>&#125;;<br><span class="hljs-type">int</span> M=<span class="hljs-number">0</span>;<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">0</span>;i&lt;<span class="hljs-number">10000</span>;i++)<br>&#123;<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> j=<span class="hljs-number">0</span>;j&lt;<span class="hljs-number">4</span>;j++)<br>cin&gt;&gt;s[i][j];<br><span class="hljs-keyword">if</span>(s[i][<span class="hljs-number">0</span>]==<span class="hljs-number">-1</span>&amp;&amp;s[i][<span class="hljs-number">1</span>]==<span class="hljs-number">-1</span>&amp;&amp;s[i][<span class="hljs-number">2</span>]==<span class="hljs-number">-1</span>&amp;&amp;s[i][<span class="hljs-number">3</span>]==<span class="hljs-number">-1</span>)<br><span class="hljs-keyword">break</span>;<br>k[i]=<span class="hljs-number">1</span>;<br><span class="hljs-keyword">while</span>(!(((k[i]-s[i][<span class="hljs-number">0</span>])%<span class="hljs-number">23</span>==<span class="hljs-number">0</span>)&amp;&amp;((k[i]-s[i][<span class="hljs-number">1</span>])%<span class="hljs-number">28</span>==<span class="hljs-number">0</span>)&amp;&amp;((k[i]-s[i][<span class="hljs-number">2</span>])%<span class="hljs-number">33</span>==<span class="hljs-number">0</span>)))<br>&#123;<br><span class="hljs-keyword">if</span>(k[i]==<span class="hljs-number">21252</span>) <span class="hljs-keyword">break</span>;<br> k[i]++;<br>&#125;<br>k[i]=k[i]-s[i][<span class="hljs-number">3</span>];<br>M++;<br>&#125;<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=M;i++)<br>cout&lt;&lt;<span class="hljs-string">&quot;Case &quot;</span>&lt;&lt;i&lt;&lt;<span class="hljs-string">&quot;: the next triple peak occurs in &quot;</span>&lt;&lt;k[i<span class="hljs-number">-1</span>]&lt;&lt;<span class="hljs-string">&quot; days.&quot;</span>&lt;&lt;endl;<br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br> &#125; <br><br></code></pre></td></tr></table></figure><h1 id="往年考试题"><a href="#往年考试题" class="headerlink" title="往年考试题"></a>往年考试题</h1><h2 id="A"><a href="#A" class="headerlink" title="A"></a>A</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;iostream&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;algorithm&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br><span class="hljs-type">int</span> N;<br>cin&gt;&gt;N;<br><span class="hljs-type">int</span> flag=<span class="hljs-number">0</span>;<br><span class="hljs-type">int</span> b[<span class="hljs-number">101</span>]=&#123;<span class="hljs-number">0</span>&#125;;<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">2</span>;i&lt;=<span class="hljs-number">100</span>;i++)<br><span class="hljs-keyword">while</span>(N%i==<span class="hljs-number">0</span>)<br>&#123;<br>N=N/i;<br>b[i]++;<br>&#125;<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">2</span>;i&lt;=<span class="hljs-number">100</span>;i++)<br>&#123;<br><span class="hljs-keyword">if</span>(b[i]&gt;=<span class="hljs-number">2</span>&amp;&amp;flag==<span class="hljs-number">0</span>)<br>&#123;cout&lt;&lt;i&lt;&lt;<span class="hljs-string">&quot;^&quot;</span>&lt;&lt;b[i];flag=<span class="hljs-number">1</span>;&#125;<br><span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(b[i]==<span class="hljs-number">1</span>&amp;&amp;flag==<span class="hljs-number">0</span>)<br>&#123;cout&lt;&lt;i;flag=<span class="hljs-number">1</span>;&#125;<br><span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(b[i]&gt;=<span class="hljs-number">2</span>&amp;&amp;flag==<span class="hljs-number">1</span>)<br>cout&lt;&lt;<span class="hljs-string">&quot;*&quot;</span>&lt;&lt;i&lt;&lt;<span class="hljs-string">&quot;^&quot;</span>&lt;&lt;b[i];<br><span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(b[i]==<span class="hljs-number">1</span>&amp;&amp;flag==<span class="hljs-number">1</span>)<br>cout&lt;&lt;<span class="hljs-string">&quot;*&quot;</span>&lt;&lt;i;<br><span class="hljs-keyword">else</span> <span class="hljs-keyword">continue</span>;<br>&#125;<br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="B"><a href="#B" class="headerlink" title="B"></a>B</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;bits/stdc++.h&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br>string s1;<br><span class="hljs-type">char</span> s[<span class="hljs-number">12</span>]=&#123;<span class="hljs-number">0</span>&#125;;<br><span class="hljs-type">int</span> sum=<span class="hljs-number">0</span>;<br><span class="hljs-type">int</span> b[<span class="hljs-number">12</span>]=&#123;<span class="hljs-number">0</span>&#125;;<br>cin&gt;&gt;s1;<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">0</span>;i&lt;<span class="hljs-number">12</span>;i++)<br>&#123;cin&gt;&gt;s[i];<br>b[i]=(<span class="hljs-type">int</span>)(s[i]-(<span class="hljs-string">&#x27;0&#x27;</span>));&#125;<br>cout&lt;&lt;s1&lt;&lt;endl;<br>sum=b[<span class="hljs-number">0</span>]*<span class="hljs-number">1</span>+b[<span class="hljs-number">2</span>]*<span class="hljs-number">2</span>+b[<span class="hljs-number">3</span>]*<span class="hljs-number">3</span>+b[<span class="hljs-number">4</span>]*<span class="hljs-number">4</span>+b[<span class="hljs-number">6</span>]*<span class="hljs-number">5</span>+b[<span class="hljs-number">7</span>]*<span class="hljs-number">6</span>+b[<span class="hljs-number">8</span>]*<span class="hljs-number">7</span>+b[<span class="hljs-number">9</span>]*<span class="hljs-number">8</span>+b[<span class="hljs-number">10</span>]*<span class="hljs-number">9</span>;<br>sum=sum%<span class="hljs-number">11</span>;<br><span class="hljs-keyword">if</span>(sum==b[<span class="hljs-number">12</span>])<br>cout&lt;&lt;<span class="hljs-string">&quot;Right&quot;</span>;<br><span class="hljs-keyword">else</span><br>&#123;<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">0</span>;i&lt;<span class="hljs-number">12</span>;i++)<br>cout&lt;&lt;s[i];<br>cout&lt;&lt;sum;<br>&#125;<br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="C"><a href="#C" class="headerlink" title="C"></a>C</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&quot;stdafx.h&quot;</span>  </span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&quot;iostream&quot;</span>  </span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&quot;queue&quot;</span>  </span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;  <br>  <br><span class="hljs-keyword">template</span>&lt;<span class="hljs-keyword">class</span> <span class="hljs-title class_">DistType</span><span class="hljs-comment">/*边的权值的类型*/</span>&gt;   <br><span class="hljs-keyword">class</span> <span class="hljs-title class_">Edge</span><span class="hljs-comment">//边的定义  </span><br>&#123;  <br><span class="hljs-keyword">public</span>:  <br>    <span class="hljs-built_in">Edge</span>(<span class="hljs-type">int</span> dest, DistType weight)  <br>    &#123;  <br>        m_nposTable=dest;  <br>        m_distWeight=weight;   <br>        m_pnext=<span class="hljs-literal">NULL</span>;  <br>    &#125;  <br>    ~<span class="hljs-built_in">Edge</span>()  <br>    &#123;  <br>  <br>    &#125;  <br><span class="hljs-keyword">public</span>:  <br>    <span class="hljs-type">int</span> m_nposTable;<span class="hljs-comment">//该边的目的顶点在顶点集中的位置  </span><br>    DistType m_distWeight;<span class="hljs-comment">//边的权重值  </span><br>    Edge&lt;DistType&gt; *m_pnext;<span class="hljs-comment">//下一条边（注意不是下一个顶点，因为m_nposTable已经知道了这个顶点的位置）  </span><br>&#125;;  <br><span class="hljs-comment">//声明  </span><br><span class="hljs-keyword">template</span>&lt;<span class="hljs-keyword">class</span> <span class="hljs-title class_">NameType</span><span class="hljs-comment">/*顶点集名字类型*/</span>, <span class="hljs-keyword">class</span> <span class="hljs-title class_">DistType</span><span class="hljs-comment">/*距离的数据类型*/</span>&gt; <span class="hljs-keyword">class</span> <span class="hljs-title class_">Graph</span>;  <br>  <br><span class="hljs-keyword">template</span>&lt;<span class="hljs-keyword">class</span> <span class="hljs-title class_">NameType</span><span class="hljs-comment">/*顶点集名字类型*/</span>, <span class="hljs-keyword">class</span> <span class="hljs-title class_">DistType</span><span class="hljs-comment">/*距离的数据类型*/</span>&gt;   <br><span class="hljs-keyword">class</span> <span class="hljs-title class_">Vertex</span><span class="hljs-comment">//顶点的定义  </span><br>&#123;  <br><span class="hljs-keyword">public</span>:  <br>    <span class="hljs-built_in">Vertex</span>()  <br>    &#123;  <br>        padjEdge=<span class="hljs-literal">NULL</span>;  <br>        m_vertexName=<span class="hljs-number">0</span>;  <br>    &#125;  <br>    ~<span class="hljs-built_in">Vertex</span>()  <br>    &#123;  <br>        Edge&lt;DistType&gt; *pmove = padjEdge;  <br>        <span class="hljs-keyword">while</span> (pmove)  <br>        &#123;  <br>            padjEdge = pmove-&gt;m_pnext;  <br>            <span class="hljs-keyword">delete</span> pmove;  <br>            pmove = padjEdge;  <br>        &#125;  <br>    &#125;  <br>  <br><span class="hljs-keyword">private</span>:  <br>    <span class="hljs-keyword">friend</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">Graph</span>&lt;NameType,DistType&gt;;<span class="hljs-comment">//允许Graph类任意访问  </span><br>    NameType m_vertexName;<span class="hljs-comment">//顶点中的数据内容  </span><br>    Edge&lt;DistType&gt; *padjEdge;<span class="hljs-comment">//顶点的邻边  </span><br>  <br>&#125;;  <br>  <br>  <br><span class="hljs-keyword">template</span>&lt;<span class="hljs-keyword">class</span> <span class="hljs-title class_">NameType</span><span class="hljs-comment">/*顶点集名字类型*/</span>, <span class="hljs-keyword">class</span> <span class="hljs-title class_">DistType</span><span class="hljs-comment">/*距离的数据类型*/</span>&gt;   <br><span class="hljs-keyword">class</span> <span class="hljs-title class_">Graph</span>  <br>&#123;  <br><span class="hljs-keyword">public</span>:  <br>    <span class="hljs-built_in">Graph</span>(<span class="hljs-type">int</span> size = m_nDefaultSize<span class="hljs-comment">/*图顶点集的规模*/</span>)  <br>    &#123;  <br>        m_pVertexTable = <span class="hljs-keyword">new</span> Vertex&lt;NameType, DistType&gt;[size];  <span class="hljs-comment">//为顶点集分配内存  </span><br>        <span class="hljs-keyword">if</span> (m_pVertexTable == <span class="hljs-literal">NULL</span>)  <br>        &#123;  <br>            <span class="hljs-built_in">exit</span>(<span class="hljs-number">1</span>);  <br>        &#125;  <br>        m_numVertexs=<span class="hljs-number">0</span>;  <br>        m_nmaxSize=size;  <br>        m_nnumEdges=<span class="hljs-number">0</span>;  <br>    &#125;  <br>  <br>    ~<span class="hljs-built_in">Graph</span>()  <br>    &#123;  <br>        Edge&lt;DistType&gt; *pmove;  <br>        <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i=<span class="hljs-number">0</span>; i &lt; <span class="hljs-keyword">this</span>-&gt;m_numVertexs; i++)  <br>        &#123;  <br>            pmove = <span class="hljs-keyword">this</span>-&gt;m_pVertexTable[i].padjEdge;  <br>            <span class="hljs-keyword">if</span> (pmove)&#123;  <br>                <span class="hljs-keyword">this</span>-&gt;m_pVertexTable[i].padjEdge = pmove-&gt;m_pnext;  <br>                <span class="hljs-keyword">delete</span> pmove;  <br>                pmove = <span class="hljs-keyword">this</span>-&gt;m_pVertexTable[i].padjEdge;  <br>            &#125;  <br>        &#125;  <br>        <span class="hljs-keyword">delete</span>[] m_pVertexTable;  <br>    &#125;  <br>    <span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">GetNumEdges</span><span class="hljs-params">()</span>  </span><br><span class="hljs-function">    </span>&#123;<span class="hljs-comment">//获得边的数目  </span><br>        <span class="hljs-keyword">return</span> m_nnumEdges/<span class="hljs-number">2</span>;  <br>    &#125;  <br>    <span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">GetNumVertexs</span><span class="hljs-params">()</span>  </span><br><span class="hljs-function">    </span>&#123;<span class="hljs-comment">//获得顶点数目  </span><br>        <span class="hljs-keyword">return</span> m_numVertexs;  <br>    &#125;  <br>  <br>    <span class="hljs-function"><span class="hljs-type">bool</span> <span class="hljs-title">IsGraphFull</span><span class="hljs-params">()</span> <span class="hljs-type">const</span>  </span><br><span class="hljs-function">    </span>&#123;     <span class="hljs-comment">//图满的?  </span><br>        <span class="hljs-keyword">return</span> m_nmaxSize == m_numVertexs;  <br>    &#125;  <br>    <span class="hljs-comment">//在顶点集中位置为v1和v2的顶点之间插入边  </span><br>    <span class="hljs-function"><span class="hljs-type">bool</span> <span class="hljs-title">InsertEdge</span><span class="hljs-params">(<span class="hljs-type">int</span> v1, <span class="hljs-type">int</span> v2, DistType weight=m_Infinity)</span></span>;   <br>    <span class="hljs-comment">//插入顶点名字为vertex的顶点  </span><br>    <span class="hljs-function"><span class="hljs-type">bool</span> <span class="hljs-title">InsertVertex</span><span class="hljs-params">(<span class="hljs-type">const</span> NameType vertex)</span></span>;    <br>    <span class="hljs-comment">//打印图  </span><br>    <span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">PrintGraph</span><span class="hljs-params">()</span></span>;     <br>    <span class="hljs-comment">//顶点v到其他各个顶点的最短路径（包括自身）  </span><br>    <span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">Dijkstra</span><span class="hljs-params">(<span class="hljs-type">int</span> v, DistType *shotestpath)</span></span>;  <br>    <span class="hljs-comment">//获取顶点集中位置为v1和v2的顶点之间边的权重值  </span><br>    <span class="hljs-function">DistType <span class="hljs-title">GetWeight</span><span class="hljs-params">(<span class="hljs-type">int</span> v1, <span class="hljs-type">int</span> v2)</span></span>;   <br>    <span class="hljs-comment">//获得在顶点集中的位置为v的顶点的名字  </span><br>    <span class="hljs-function">NameType <span class="hljs-title">GetVertexValue</span><span class="hljs-params">(<span class="hljs-type">int</span> v)</span></span>;  <br>    <span class="hljs-comment">//用该顶点的名字来寻找其在顶点集中的位置  </span><br>    <span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">GetVertexPosTable</span><span class="hljs-params">(<span class="hljs-type">const</span> NameType vertex)</span></span>;    <br>  <br>  <br>    <span class="hljs-comment">//深度搜索优先  </span><br>    <span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">DFS</span><span class="hljs-params">(<span class="hljs-type">int</span> v, <span class="hljs-type">int</span> *visited)</span></span>;        <br>    <span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">DFS</span><span class="hljs-params">()</span></span>;  <br>    <span class="hljs-comment">//广度优先搜索  </span><br>    <span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">BFS</span><span class="hljs-params">(<span class="hljs-type">int</span> v, <span class="hljs-type">int</span> *visited)</span></span>;  <br>    <span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">BFS</span><span class="hljs-params">()</span></span>;  <br>    <span class="hljs-comment">//获取第v个顶点的名字（或者说内容）  </span><br>    <span class="hljs-function">NameType <span class="hljs-title">GetVertexName</span><span class="hljs-params">(<span class="hljs-type">int</span> v)</span></span>;     <br>    <span class="hljs-comment">//获得顶点v的第一个相邻顶点，如果没有就返回-1  </span><br>    <span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">GetFirst</span><span class="hljs-params">(<span class="hljs-type">int</span> v)</span></span>;         <br>    <span class="hljs-comment">//获得顶点v1的邻点v2后的邻点  </span><br>    <span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">GetNext</span><span class="hljs-params">(<span class="hljs-type">int</span> v1, <span class="hljs-type">int</span> v2)</span></span>;  <br>  <br><span class="hljs-keyword">private</span>:  <br>    Vertex&lt;NameType, DistType&gt; *m_pVertexTable;   <span class="hljs-comment">//顶点集  </span><br>    <span class="hljs-type">int</span> m_numVertexs;<span class="hljs-comment">//图中当前的顶点数量  </span><br>    <span class="hljs-type">int</span> m_nmaxSize;<span class="hljs-comment">//图允许的最大顶点数  </span><br>    <span class="hljs-type">static</span> <span class="hljs-type">const</span> <span class="hljs-type">int</span> m_nDefaultSize = <span class="hljs-number">10</span>;       <span class="hljs-comment">//默认的最大顶点集数目  </span><br>    <span class="hljs-type">static</span> <span class="hljs-type">const</span> DistType m_Infinity = <span class="hljs-number">65536</span>;  <span class="hljs-comment">//边的默认权值（可以看成是无穷大）  </span><br>    <span class="hljs-type">int</span> m_nnumEdges;<span class="hljs-comment">//图中边的数目  </span><br>      <br>&#125;;  <br>  <br>  <br><span class="hljs-comment">//返回顶点vertexname在m_pVertexTable(顶点集)中的位置  </span><br><span class="hljs-comment">//如果不在顶点集中就返回-1  </span><br><span class="hljs-keyword">template</span>&lt;<span class="hljs-keyword">class</span> <span class="hljs-title class_">NameType</span>, <span class="hljs-keyword">class</span> <span class="hljs-title class_">DistType</span>&gt;   <br><span class="hljs-type">int</span> Graph&lt;NameType, DistType&gt;::<span class="hljs-built_in">GetVertexPosTable</span>(<span class="hljs-type">const</span> NameType vertexname)  <br>&#123;  <br>    <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i=<span class="hljs-number">0</span>; i &lt; <span class="hljs-keyword">this</span>-&gt;m_numVertexs; i++)  <br>    &#123;  <br>        <span class="hljs-keyword">if</span> (vertexname == m_pVertexTable[i].m_vertexName)  <br>        &#123;  <br>            <span class="hljs-keyword">return</span> i;  <br>        &#125;  <br>    &#125;  <br>    <span class="hljs-keyword">return</span> <span class="hljs-number">-1</span>;  <br>&#125;  <br>  <br><span class="hljs-comment">//打印图中的各个顶点及其链接的边的权重  </span><br><span class="hljs-keyword">template</span>&lt;<span class="hljs-keyword">class</span> <span class="hljs-title class_">NameType</span>, <span class="hljs-keyword">class</span> <span class="hljs-title class_">DistType</span>&gt;   <br><span class="hljs-type">void</span> Graph&lt;NameType, DistType&gt;::<span class="hljs-built_in">PrintGraph</span>()  <br>&#123;  <br>    Edge&lt;DistType&gt; *pmove;  <br>    <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i=<span class="hljs-number">0</span>; i&lt;<span class="hljs-keyword">this</span>-&gt;m_numVertexs; i++)  <br>    &#123;  <br>        cout &lt;&lt; <span class="hljs-keyword">this</span>-&gt;m_pVertexTable[i].m_vertexName &lt;&lt; <span class="hljs-string">&quot;-&gt;&quot;</span>;  <br>        pmove = <span class="hljs-keyword">this</span>-&gt;m_pVertexTable[i].padjEdge;  <br>        <span class="hljs-keyword">while</span> (pmove)  <br>        &#123;  <br>            cout &lt;&lt; pmove-&gt;m_distWeight &lt;&lt; <span class="hljs-string">&quot;-&gt;&quot;</span> &lt;&lt; <span class="hljs-keyword">this</span>-&gt;m_pVertexTable[pmove-&gt;m_nposTable].m_vertexName &lt;&lt; <span class="hljs-string">&quot;-&gt;&quot;</span>;  <br>            pmove = pmove-&gt;m_pnext;  <br>        &#125;  <br>        cout &lt;&lt; <span class="hljs-string">&quot;NULL&quot;</span> &lt;&lt; endl;  <br>    &#125;  <br>&#125;  <br><span class="hljs-comment">//获得在顶点集中的位置为v的顶点的名字  </span><br><span class="hljs-keyword">template</span>&lt;<span class="hljs-keyword">class</span> <span class="hljs-title class_">NameType</span>, <span class="hljs-keyword">class</span> <span class="hljs-title class_">DistType</span>&gt;   <br>NameType Graph&lt;NameType, DistType&gt;::<span class="hljs-built_in">GetVertexValue</span>(<span class="hljs-type">int</span> v)  <br>&#123;  <br>    <span class="hljs-keyword">if</span> (v&lt;<span class="hljs-number">0</span> || v&gt;=<span class="hljs-keyword">this</span>-&gt;m_numVertexs)  <br>    &#123;  <br>        cerr &lt;&lt; <span class="hljs-string">&quot;查找的顶点位置参数有误，请检查！&quot;</span> &lt;&lt;endl;  <br>        <span class="hljs-built_in">exit</span>(<span class="hljs-number">1</span>);  <br>    &#125;  <br>    <span class="hljs-keyword">return</span> m_pVertexTable[v].m_vertexName;  <br>  <br>&#125;  <br><span class="hljs-comment">//返回顶点v1和v2之间的边权值，  </span><br><span class="hljs-comment">//如果没有直接相连（即不是一条边直接相连）则返回无穷大  </span><br><span class="hljs-keyword">template</span>&lt;<span class="hljs-keyword">class</span> <span class="hljs-title class_">NameType</span>, <span class="hljs-keyword">class</span> <span class="hljs-title class_">DistType</span>&gt;   <br>DistType Graph&lt;NameType, DistType&gt;::<span class="hljs-built_in">GetWeight</span>(<span class="hljs-type">int</span> v1, <span class="hljs-type">int</span> v2)  <br>&#123;  <br>    <span class="hljs-keyword">if</span> (v1&gt;=<span class="hljs-number">0</span> &amp;&amp; v1&lt;<span class="hljs-keyword">this</span>-&gt;m_numVertexs &amp;&amp; v2&gt;=<span class="hljs-number">0</span> &amp;&amp; v2&lt;<span class="hljs-keyword">this</span>-&gt;m_numVertexs)  <br>    &#123;  <br>        <span class="hljs-keyword">if</span> (v1 == v2)  <br>        &#123;  <br>            <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;  <br>        &#125;  <br>        Edge&lt;DistType&gt; *pmove = m_pVertexTable[v1].padjEdge;  <br>        <span class="hljs-keyword">while</span> (pmove)  <br>        &#123;  <br>            <span class="hljs-keyword">if</span> (pmove-&gt;m_nposTable == v2)  <br>            &#123;  <br>                <span class="hljs-keyword">return</span> pmove-&gt;m_distWeight;  <br>            &#125;  <br>            pmove = pmove-&gt;m_pnext;  <br>        &#125;  <br>    &#125;  <br>      <br>    <span class="hljs-keyword">return</span> m_Infinity;    <br>&#125;  <br>  <br><span class="hljs-comment">//顶点依次插入到分配好的顶点集中  </span><br><span class="hljs-keyword">template</span>&lt;<span class="hljs-keyword">class</span> <span class="hljs-title class_">NameType</span>, <span class="hljs-keyword">class</span> <span class="hljs-title class_">DistType</span>&gt;   <br><span class="hljs-type">bool</span> Graph&lt;NameType, DistType&gt;::<span class="hljs-built_in">InsertVertex</span>(<span class="hljs-type">const</span> NameType vertexname)  <br>&#123;  <br>    <span class="hljs-keyword">if</span> (<span class="hljs-built_in">IsGraphFull</span>())  <br>    &#123;  <br>        cerr&lt;&lt;<span class="hljs-string">&quot;图已经满，请勿再插入顶点！&quot;</span>&lt;&lt;endl;  <br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;  <br>    &#125;<span class="hljs-keyword">else</span>  <br>    &#123;  <br>        <span class="hljs-keyword">this</span>-&gt;m_pVertexTable[<span class="hljs-keyword">this</span>-&gt;m_numVertexs].m_vertexName = vertexname;  <br>        <span class="hljs-keyword">this</span>-&gt;m_numVertexs++;  <br>    &#125;  <br>      <br>    <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>;  <br>&#125;  <br>  <br><span class="hljs-comment">//在顶点集位置为v1和v2的顶点之间插入权值为weght的边（务必保持输入的准确性，否则.....）  </span><br><span class="hljs-keyword">template</span>&lt;<span class="hljs-keyword">class</span> <span class="hljs-title class_">NameType</span>, <span class="hljs-keyword">class</span> <span class="hljs-title class_">DistType</span>&gt;   <br><span class="hljs-type">bool</span> Graph&lt;NameType, DistType&gt;::<span class="hljs-built_in">InsertEdge</span>(<span class="hljs-type">int</span> v1, <span class="hljs-type">int</span> v2, DistType weight)  <br>&#123;  <br>    <span class="hljs-keyword">if</span> (v1 &lt; <span class="hljs-number">0</span> &amp;&amp; v1 &gt; <span class="hljs-keyword">this</span>-&gt;m_numVertexs &amp;&amp; v2 &lt; <span class="hljs-number">0</span> &amp;&amp; v2 &gt; <span class="hljs-keyword">this</span>-&gt;m_numVertexs)  <br>    &#123;  <br>        cerr&lt;&lt;<span class="hljs-string">&quot;边的位置参数错误，请检查！ &quot;</span>&lt;&lt;endl;  <br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;  <br>    &#125;  <br>    <span class="hljs-keyword">else</span>  <br>    &#123;  <br>        Edge&lt;DistType&gt; *pmove = m_pVertexTable[v1].padjEdge;  <br>        <span class="hljs-keyword">if</span> (pmove == <span class="hljs-literal">NULL</span>)<span class="hljs-comment">//如果顶点v1没有邻边  </span><br>        &#123; <span class="hljs-comment">//建立顶点v1的第一个邻边(该邻边指明了目的顶点)  </span><br>            m_pVertexTable[v1].padjEdge = <span class="hljs-keyword">new</span> <span class="hljs-built_in">Edge</span>&lt;DistType&gt;(v2, weight);  <br>            m_nnumEdges++;<span class="hljs-comment">//图中边的数目  </span><br>            <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>;  <br>        &#125;<span class="hljs-keyword">else</span><span class="hljs-comment">//如果有邻边  </span><br>        &#123;  <br>            <span class="hljs-keyword">while</span> (pmove-&gt;m_pnext)  <br>            &#123;  <br>                pmove = pmove-&gt;m_pnext;  <br>            &#125;  <br>                pmove-&gt;m_pnext = <span class="hljs-keyword">new</span> <span class="hljs-built_in">Edge</span>&lt;DistType&gt;(v2, weight);  <br>                m_nnumEdges++;<span class="hljs-comment">//图中边的数目  </span><br>                <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>;  <br>        &#125;  <br>    &#125;  <br>&#125;  <br>  <br>  <br><span class="hljs-keyword">template</span>&lt;<span class="hljs-keyword">class</span> <span class="hljs-title class_">NameType</span>, <span class="hljs-keyword">class</span> <span class="hljs-title class_">DistType</span>&gt;  <br><span class="hljs-type">void</span> Graph&lt;NameType, DistType&gt;::<span class="hljs-built_in">Dijkstra</span>(<span class="hljs-type">int</span> v, DistType *shPath)  <br>&#123;  <br>    <span class="hljs-type">int</span> num =<span class="hljs-built_in">GetNumVertexs</span>();  <br>    <span class="hljs-type">int</span> *visited = <span class="hljs-keyword">new</span> <span class="hljs-type">int</span>[num];  <br>    <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i=<span class="hljs-number">0</span>; i &lt; num; i++)  <br>    &#123;<span class="hljs-comment">//初始化  </span><br>        visited[i] = <span class="hljs-number">0</span>;<span class="hljs-comment">//未访问  </span><br>        shPath[i] = <span class="hljs-keyword">this</span>-&gt;<span class="hljs-built_in">GetWeight</span>(v, i);<span class="hljs-comment">//顶点v（当前中间点）到各个相邻顶点的边权值，其他情况返回无穷大  </span><br>    &#125;  <br>  <br>    visited[v] = <span class="hljs-number">1</span>;<span class="hljs-comment">//第v个顶点初始化为被访问，并以他为中点点开始找最短路径  </span><br>  <br>    <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = <span class="hljs-number">1</span>; i &lt; num; i++)  <br>    &#123;  <br>        DistType min = <span class="hljs-keyword">this</span>-&gt;m_Infinity;  <br>        <span class="hljs-type">int</span> u=<span class="hljs-number">0</span>;  <br>          <br>        <span class="hljs-comment">//寻找新的中间点u，依据就是数组中权值最小的那个点的位置（且没被访问过）  </span><br>        <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> j=<span class="hljs-number">0</span>; j &lt; num; j++)  <br>        &#123;     <br>            <span class="hljs-keyword">if</span> (!visited[j])  <br>            &#123;  <br>                <span class="hljs-keyword">if</span> (shPath[j]&lt;min)  <br>                &#123;  <br>                    min = shPath[j];<span class="hljs-comment">//获得当前shPath数组中的最小边权重  </span><br>                    u = j;<span class="hljs-comment">//用u来记录获取最小值时的顶点位置,即新的中间点  </span><br>                &#125;  <br>            &#125;  <br>        &#125;  <br>  <br>        visited[u] = <span class="hljs-number">1</span>;<span class="hljs-comment">//已经确定的最短路径  </span><br>  <br>        <span class="hljs-comment">//以u为中间点寻找顶点v到顶点w的最短路径  </span><br>        <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> w=<span class="hljs-number">0</span>; w &lt; num; w++)  <br>        &#123;    <br>            DistType weight = <span class="hljs-keyword">this</span>-&gt;<span class="hljs-built_in">GetWeight</span>(u, w);<span class="hljs-comment">//顶点u（当前中间点）到各个相邻顶点的边权值，其他情况返回无穷大  </span><br>            <span class="hljs-keyword">if</span> (!visited[w] &amp;&amp; weight != <span class="hljs-keyword">this</span>-&gt;m_Infinity )  <br>            &#123;  <br>                <span class="hljs-keyword">if</span> ( shPath[u]+weight &lt; shPath[w] )  <br>                &#123;  <br>                    shPath[w] = shPath[u] + weight;<span class="hljs-comment">//更新顶点v到w的最短路径值  </span><br>                &#125;  <br>            &#125;  <br>        &#125;  <br>    &#125;  <br>    <span class="hljs-keyword">delete</span>[] visited;  <br>&#125;  <br><span class="hljs-comment">//获得顶点v1的邻点v2后的邻点  </span><br><span class="hljs-keyword">template</span>&lt;<span class="hljs-keyword">class</span> <span class="hljs-title class_">NameType</span>, <span class="hljs-keyword">class</span> <span class="hljs-title class_">DistType</span>&gt;   <br><span class="hljs-type">int</span> Graph&lt;NameType, DistType&gt;::<span class="hljs-built_in">GetNext</span>(<span class="hljs-type">int</span> v1, <span class="hljs-type">int</span> v2)  <br>&#123;  <br>    <span class="hljs-keyword">if</span> (<span class="hljs-number">-1</span> != v1)  <br>    &#123;  <br>        Edge&lt;DistType&gt; *pmove = <span class="hljs-keyword">this</span>-&gt;m_pVertexTable[v1].padjEdge;  <br>        <span class="hljs-keyword">while</span> (<span class="hljs-literal">NULL</span> != pmove-&gt;m_pnext)  <br>        &#123;  <br>            <span class="hljs-keyword">if</span> (pmove-&gt;m_nposTable==v2)  <br>            &#123;  <br>                <span class="hljs-keyword">return</span> pmove-&gt;m_pnext-&gt;m_nposTable;  <br>            &#125;  <br>            pmove = pmove-&gt;m_pnext;  <br>        &#125;          <br>    &#125;  <br>    <span class="hljs-keyword">return</span> <span class="hljs-number">-1</span>;  <br>&#125;  <br>  <br><span class="hljs-comment">//从第v个顶点开始深度遍历  </span><br><span class="hljs-keyword">template</span>&lt;<span class="hljs-keyword">class</span> <span class="hljs-title class_">NameType</span>, <span class="hljs-keyword">class</span> <span class="hljs-title class_">DistType</span>&gt;   <br><span class="hljs-type">void</span> Graph&lt;NameType, DistType&gt;::<span class="hljs-built_in">DFS</span>(<span class="hljs-type">int</span> v, <span class="hljs-type">int</span> *visited)  <br>&#123;  <br>    cout &lt;&lt; <span class="hljs-string">&quot;-&gt;&quot;</span> &lt;&lt; <span class="hljs-keyword">this</span>-&gt;<span class="hljs-built_in">GetVertexName</span>(v);  <br>    visited[v] = <span class="hljs-number">1</span>;  <br>    <span class="hljs-type">int</span> firstVertex = <span class="hljs-keyword">this</span>-&gt;<span class="hljs-built_in">GetFirst</span>(v);<span class="hljs-comment">//获得顶点v的第一个相邻顶点，若没有则返回-1  </span><br>    <span class="hljs-keyword">while</span> (<span class="hljs-number">-1</span> != firstVertex)  <br>    &#123;  <br>        <span class="hljs-keyword">if</span> (!visited[firstVertex])<span class="hljs-comment">//如果没有访问过  </span><br>        &#123;  <br>            cout &lt;&lt; <span class="hljs-string">&quot;-&gt;&quot;</span> &lt;&lt; <span class="hljs-keyword">this</span>-&gt;<span class="hljs-built_in">GetWeight</span>(v, firstVertex);<span class="hljs-comment">//获得顶点v及其邻点firstVertex之间的权值  </span><br>            <span class="hljs-built_in">DFS</span>(firstVertex, visited);  <br>        &#125;  <br>        firstVertex = <span class="hljs-keyword">this</span>-&gt;<span class="hljs-built_in">GetNext</span>(v, firstVertex);<span class="hljs-comment">//获得顶点v的邻点firstVertex后的邻点，如果没有就返回-1  </span><br>    &#125;  <br>&#125;  <br>  <br><span class="hljs-keyword">template</span>&lt;<span class="hljs-keyword">class</span> <span class="hljs-title class_">NameType</span>, <span class="hljs-keyword">class</span> <span class="hljs-title class_">DistType</span>&gt;   <br><span class="hljs-type">void</span> Graph&lt;NameType, DistType&gt;::<span class="hljs-built_in">DFS</span>()  <br>&#123;  <br>    <span class="hljs-type">int</span> *visited = <span class="hljs-keyword">new</span> <span class="hljs-type">int</span>[<span class="hljs-keyword">this</span>-&gt;m_numVertexs];  <br>    <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i=<span class="hljs-number">0</span>; i&lt;<span class="hljs-keyword">this</span>-&gt;m_numVertexs; i++)  <br>    &#123;  <br>        visited[i] = <span class="hljs-number">0</span>;  <br>    &#125;  <br>    cout &lt;&lt; <span class="hljs-string">&quot;head&quot;</span>;  <br>    <span class="hljs-built_in">DFS</span>(<span class="hljs-number">0</span>, visited);<span class="hljs-comment">//从第一个顶点开始遍历  </span><br>    cout &lt;&lt; <span class="hljs-string">&quot;---&gt;end&quot;</span>;  <br>&#125;  <br>  <br><span class="hljs-keyword">template</span>&lt;<span class="hljs-keyword">class</span> <span class="hljs-title class_">NameType</span>, <span class="hljs-keyword">class</span> <span class="hljs-title class_">DistType</span>&gt;   <br><span class="hljs-type">void</span> Graph&lt;NameType, DistType&gt;::<span class="hljs-built_in">BFS</span>()  <br>&#123;  <br>    <span class="hljs-type">int</span> *visited = <span class="hljs-keyword">new</span> <span class="hljs-type">int</span>[<span class="hljs-keyword">this</span>-&gt;m_numVertexs];  <br>    <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i=<span class="hljs-number">0</span>; i&lt;<span class="hljs-keyword">this</span>-&gt;m_numVertexs; i++)  <br>    &#123;  <br>        visited[i] = <span class="hljs-number">0</span>;  <br>    &#125;  <br>    cout &lt;&lt; <span class="hljs-string">&quot;head&quot;</span>;  <br>    <span class="hljs-built_in">BFS</span>(<span class="hljs-number">0</span>, visited);<span class="hljs-comment">//从第一个顶点开始遍历  </span><br>    cout &lt;&lt; <span class="hljs-string">&quot;---&gt;end&quot;</span>;  <br>&#125;  <br>  <br><span class="hljs-comment">//从第v个顶点开始广度遍历  </span><br><span class="hljs-keyword">template</span>&lt;<span class="hljs-keyword">class</span> <span class="hljs-title class_">NameType</span>, <span class="hljs-keyword">class</span> <span class="hljs-title class_">DistType</span>&gt;   <br><span class="hljs-type">void</span> Graph&lt;NameType, DistType&gt;::<span class="hljs-built_in">BFS</span>(<span class="hljs-type">int</span> v, <span class="hljs-type">int</span> *visited)  <br>&#123;  <br>    cout &lt;&lt; <span class="hljs-string">&quot;-&gt;&quot;</span> &lt;&lt; <span class="hljs-keyword">this</span>-&gt;<span class="hljs-built_in">GetVertexName</span>(v);  <br>    visited[v]=<span class="hljs-number">1</span>;  <br>    queue&lt;<span class="hljs-type">int</span>&gt; que;<span class="hljs-comment">//=new queue&lt;int&gt;[this-&gt;GetNumVertexs()];  </span><br>    que.<span class="hljs-built_in">push</span>(v);<span class="hljs-comment">//进队（队列的末端）  </span><br>    <span class="hljs-keyword">while</span> (!que.<span class="hljs-built_in">empty</span>())  <br>    &#123;  <br>        v=que.<span class="hljs-built_in">front</span>();<span class="hljs-comment">//出队首元素  </span><br>        que.<span class="hljs-built_in">pop</span>();<span class="hljs-comment">//删除队首元素  </span><br>        <span class="hljs-type">int</span> firstvertex=<span class="hljs-built_in">GetFirst</span>(v);  <br>        <span class="hljs-keyword">while</span>(firstvertex != <span class="hljs-number">-1</span>)  <br>        &#123;  <br>            <span class="hljs-keyword">if</span> (!visited[firstvertex])  <br>            &#123;  <br>                cout &lt;&lt; <span class="hljs-string">&quot;-&gt;&quot;</span> &lt;&lt; <span class="hljs-keyword">this</span>-&gt;<span class="hljs-built_in">GetWeight</span>(v, firstvertex);<span class="hljs-comment">//获得顶点v及其邻点firstVertex之间的权值  </span><br>                que.<span class="hljs-built_in">push</span>(firstvertex);  <br>                visited[firstvertex]=<span class="hljs-number">1</span>;  <br>                cout &lt;&lt; <span class="hljs-string">&quot;-&gt;&quot;</span> &lt;&lt; <span class="hljs-keyword">this</span>-&gt;<span class="hljs-built_in">GetVertexName</span>(firstvertex);  <br>            &#125;  <br>            firstvertex=<span class="hljs-built_in">GetNext</span>(v,firstvertex);  <br>        &#125;  <br>    &#125;  <br>&#125;  <br>  <br><span class="hljs-comment">//获得在顶点集中的位置为v的顶点的名字  </span><br><span class="hljs-keyword">template</span>&lt;<span class="hljs-keyword">class</span> <span class="hljs-title class_">NameType</span>, <span class="hljs-keyword">class</span> <span class="hljs-title class_">DistType</span>&gt;   <br>NameType Graph&lt;NameType, DistType&gt;::<span class="hljs-built_in">GetVertexName</span>(<span class="hljs-type">int</span> v)  <br>&#123;  <br>    <span class="hljs-keyword">if</span> (v&lt;<span class="hljs-number">0</span> || v&gt;=<span class="hljs-keyword">this</span>-&gt;m_numVertexs)  <br>    &#123;  <br>        cerr &lt;&lt; <span class="hljs-string">&quot;查找的顶点位置参数有误，请检查！&quot;</span> &lt;&lt;endl;  <br>        <span class="hljs-built_in">exit</span>(<span class="hljs-number">1</span>);  <br>    &#125;  <br>    <span class="hljs-keyword">return</span> m_pVertexTable[v].m_vertexName;  <br>  <br>&#125;  <br>  <br><span class="hljs-comment">//获得顶点v的第一个相邻顶点，如果没有就返回-1  </span><br><span class="hljs-keyword">template</span>&lt;<span class="hljs-keyword">class</span> <span class="hljs-title class_">NameType</span>, <span class="hljs-keyword">class</span> <span class="hljs-title class_">DistType</span>&gt;   <br><span class="hljs-type">int</span> Graph&lt;NameType, DistType&gt;::<span class="hljs-built_in">GetFirst</span>(<span class="hljs-type">int</span> v)  <br>&#123;  <br>    <span class="hljs-keyword">if</span> (v&lt;<span class="hljs-number">0</span> || v&gt;=<span class="hljs-keyword">this</span>-&gt;m_numVertexs)  <br>    &#123;  <br>        <span class="hljs-keyword">return</span> <span class="hljs-number">-1</span>;  <br>    &#125;  <br>    Edge&lt;DistType&gt; *ptemp = <span class="hljs-keyword">this</span>-&gt;m_pVertexTable[v].padjEdge;  <br>    <span class="hljs-keyword">return</span> m_pVertexTable[v].padjEdge ? m_pVertexTable[v].padjEdge-&gt;m_nposTable : <span class="hljs-number">-1</span>;  <br>&#125;  <br></code></pre></td></tr></table></figure><h2 id="D"><a href="#D" class="headerlink" title="D"></a>D</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><code class="hljs cpp">http:<span class="hljs-comment">//bailian.openjudge.cn/practice/2386/</span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;iostream&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><br><span class="hljs-type">int</span> M,N;<br><span class="hljs-type">char</span> s[<span class="hljs-number">100</span>][<span class="hljs-number">100</span>];<br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">dfs</span><span class="hljs-params">(<span class="hljs-type">int</span> x,<span class="hljs-type">int</span> y)</span></span><br><span class="hljs-function"></span>&#123;<br>s[x][y]=<span class="hljs-string">&#x27;.&#x27;</span>;<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> dx=<span class="hljs-number">-1</span>;dx&lt;=<span class="hljs-number">1</span>;dx++)<br>&#123;<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> dy=<span class="hljs-number">-1</span>;dy&lt;=<span class="hljs-number">1</span>;dy++)<br>&#123;<br><span class="hljs-type">int</span> nx=x+dx,ny=y-dy;<br><span class="hljs-keyword">if</span>(<span class="hljs-number">0</span>&lt;=nx&amp;&amp;nx&lt;N&amp;&amp;<span class="hljs-number">0</span>&lt;=ny&amp;&amp;ny&lt;M&amp;&amp;s[nx][ny]==<span class="hljs-string">&#x27;W&#x27;</span>)<br><span class="hljs-built_in">dfs</span>(nx,ny);<br>&#125;<br>&#125;<br><span class="hljs-keyword">return</span>;<br>&#125;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br>cin&gt;&gt;N&gt;&gt;M;<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">0</span>;i&lt;N;i++)<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> j=<span class="hljs-number">0</span>;j&lt;M;j++)<br>cin&gt;&gt;s[i][j];<br><span class="hljs-type">int</span> res=<span class="hljs-number">0</span>;<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">0</span>;i&lt;N;i++)<br>&#123;<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> j=<span class="hljs-number">0</span>;j&lt;M;j++)<br>&#123;<br><span class="hljs-keyword">if</span>(s[i][j]==<span class="hljs-string">&#x27;W&#x27;</span>)<br>&#123;<br><span class="hljs-built_in">dfs</span>(i,j);<br>res++;<br>&#125;<br>&#125;<br>&#125;<br>cout&lt;&lt;res;<br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br><br></code></pre></td></tr></table></figure><h2 id="E"><a href="#E" class="headerlink" title="E"></a>E</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;iostream&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span>&#123;<br><span class="hljs-type">int</span> d,p,e,i,x;<br><span class="hljs-type">int</span> count=<span class="hljs-number">0</span>;<br><span class="hljs-keyword">while</span>(cin&gt;&gt;p&gt;&gt;e&gt;&gt;i&gt;&gt;d&amp;&amp;p!=<span class="hljs-number">-1</span>&amp;&amp;i!=<span class="hljs-number">-1</span>&amp;&amp;e!=<span class="hljs-number">-1</span>&amp;&amp;d!=<span class="hljs-number">-1</span>)&#123;<br>count++;<br><span class="hljs-keyword">if</span>(p==<span class="hljs-number">0</span>||e==<span class="hljs-number">0</span>||i==<span class="hljs-number">0</span>)&#123;<br>cout&lt;&lt;<span class="hljs-string">&quot;Case &quot;</span>&lt;&lt;count&lt;&lt;<span class="hljs-string">&quot;: the next triple peak occurs in &quot;</span>&lt;&lt;<span class="hljs-number">21252</span>-d&lt;&lt;<span class="hljs-string">&quot; days.&quot;</span>&lt;&lt;endl;<br>&#125;<br><span class="hljs-keyword">else</span>&#123;<br><span class="hljs-keyword">for</span>(x=i;x&lt;<span class="hljs-number">21252</span>;x+=<span class="hljs-number">33</span>)&#123;<br><span class="hljs-keyword">if</span>(x%<span class="hljs-number">23</span>==p%<span class="hljs-number">23</span>&amp;&amp;x%<span class="hljs-number">28</span>==e%<span class="hljs-number">28</span>)&#123;<br><span class="hljs-keyword">break</span>;<br>&#125;<br>&#125;<br>cout&lt;&lt;<span class="hljs-string">&quot;Case &quot;</span>&lt;&lt;count&lt;&lt;<span class="hljs-string">&quot;: the next triple peak occurs in &quot;</span>&lt;&lt;x-d&lt;&lt;<span class="hljs-string">&quot; days.&quot;</span>&lt;&lt;endl;<br>&#125;<br>&#125;<br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125; <br></code></pre></td></tr></table></figure><h2 id="practice"><a href="#practice" class="headerlink" title="practice"></a>practice</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-comment">//stack</span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;iostream&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;stack&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br>stack&lt;<span class="hljs-type">int</span>&gt; s;<br>s.<span class="hljs-built_in">push</span>(<span class="hljs-number">1</span>);<br>s.<span class="hljs-built_in">push</span>(<span class="hljs-number">2</span>);<br>s.<span class="hljs-built_in">push</span>(<span class="hljs-number">3</span>);<br>cout&lt;&lt;s.<span class="hljs-built_in">top</span>()&lt;&lt;endl;<br>    <span class="hljs-type">int</span> u;<br>u=s.<span class="hljs-built_in">pop</span>();<br>cout&lt;&lt;u&lt;&lt;endl;<br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br><br></code></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 编程 </category>
          
          <category> C++ </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 编程 </tag>
            
            <tag> OJ </tag>
            
            <tag> C++练习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>决策用强化与系统性机器学习</title>
      <link href="/2019/12/01/%E5%86%B3%E7%AD%96%E7%94%A8%E5%BC%BA%E5%8C%96%E4%B8%8E%E7%B3%BB%E7%BB%9F%E6%80%A7%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/"/>
      <url>/2019/12/01/%E5%86%B3%E7%AD%96%E7%94%A8%E5%BC%BA%E5%8C%96%E4%B8%8E%E7%B3%BB%E7%BB%9F%E6%80%A7%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/</url>
      
        <content type="html"><![CDATA[<h2 id="决策用强化与系统性机器学习总结"><a href="#决策用强化与系统性机器学习总结" class="headerlink" title="决策用强化与系统性机器学习总结"></a>决策用强化与系统性机器学习总结</h2><h4 id="系统的不同部分是有联系的。"><a href="#系统的不同部分是有联系的。" class="headerlink" title="系统的不同部分是有联系的。"></a>系统的不同部分是有联系的。</h4><h4 id="系统思维的基本准则就是在时间和空间上因果是可以分开的。"><a href="#系统思维的基本准则就是在时间和空间上因果是可以分开的。" class="headerlink" title="系统思维的基本准则就是在时间和空间上因果是可以分开的。"></a>系统思维的基本准则就是在时间和空间上因果是可以分开的。</h4><h4 id="孤立的学习时不完备的"><a href="#孤立的学习时不完备的" class="headerlink" title="孤立的学习时不完备的"></a>孤立的学习时不完备的</h4><h4 id="系统性机器学习的其它一方面是为了了解系统界限，决定系统的相互作用，同时也尝试显现系统和子系统的各种行为的影响。"><a href="#系统性机器学习的其它一方面是为了了解系统界限，决定系统的相互作用，同时也尝试显现系统和子系统的各种行为的影响。" class="headerlink" title="系统性机器学习的其它一方面是为了了解系统界限，决定系统的相互作用，同时也尝试显现系统和子系统的各种行为的影响。"></a>系统性机器学习的其它一方面是为了了解系统界限，决定系统的相互作用，同时也尝试显现系统和子系统的各种行为的影响。</h4><h4 id="系统性知识构建更多的是构建完整的知识。因此，这里不可能是一个孤立的决策者。"><a href="#系统性知识构建更多的是构建完整的知识。因此，这里不可能是一个孤立的决策者。" class="headerlink" title="系统性知识构建更多的是构建完整的知识。因此，这里不可能是一个孤立的决策者。"></a>系统性知识构建更多的是构建完整的知识。因此，这里不可能是一个孤立的决策者。</h4><h4 id="学习是一个连续的过程，新方案观察和新方案出现"><a href="#学习是一个连续的过程，新方案观察和新方案出现" class="headerlink" title="学习是一个连续的过程，新方案观察和新方案出现"></a>学习是一个连续的过程，新方案观察和新方案出现</h4><h4 id="通过观察来学习需要构建有意义的观察对象和情景的分类。"><a href="#通过观察来学习需要构建有意义的观察对象和情景的分类。" class="headerlink" title="通过观察来学习需要构建有意义的观察对象和情景的分类。"></a>通过观察来学习需要构建有意义的观察对象和情景的分类。</h4><h4 id="当人们做决策时所遇到的方案和对象时之前学习阶段没有遇到过的推理，迁移学习fds"><a href="#当人们做决策时所遇到的方案和对象时之前学习阶段没有遇到过的推理，迁移学习fds" class="headerlink" title="当人们做决策时所遇到的方案和对象时之前学习阶段没有遇到过的推理，迁移学习fds"></a>当人们做决策时所遇到的方案和对象时之前学习阶段没有遇到过的推理，迁移学习fds</h4><h4 id="三种仿生学习机制"><a href="#三种仿生学习机制" class="headerlink" title="三种仿生学习机制"></a>三种仿生学习机制</h4><ul><li>知觉学习<br>  学习新的对象，策略和关系</li><li>案例学习<br>  基于事件间的相关信息</li><li>过程学习解决<br>  基于行为和动作序列来完成的学习<br>  其本质为人类认知内的知识对机器智能水平的传授</li></ul><h4 id="对于人脑-人类的学习时选择性增强的，不需要大量的训练集。机器学习是计算机编程方法的研究。为了让机器智能化工作，可以像人一样学习经验。某些任务下替代人类，如自动化设备或者是在极少数动态环境下精度等级要求高的重复性任务"><a href="#对于人脑-人类的学习时选择性增强的，不需要大量的训练集。机器学习是计算机编程方法的研究。为了让机器智能化工作，可以像人一样学习经验。某些任务下替代人类，如自动化设备或者是在极少数动态环境下精度等级要求高的重复性任务" class="headerlink" title="对于人脑,人类的学习时选择性增强的，不需要大量的训练集。机器学习是计算机编程方法的研究。为了让机器智能化工作，可以像人一样学习经验。某些任务下替代人类，如自动化设备或者是在极少数动态环境下精度等级要求高的重复性任务"></a>对于人脑,人类的学习时选择性增强的，不需要大量的训练集。机器学习是计算机编程方法的研究。为了让机器智能化工作，可以像人一样学习经验。某些任务下替代人类，如自动化设备或者是在极少数动态环境下精度等级要求高的重复性任务</h4><h4 id="统计数据更多的是理解数据及其之间的模式，数据挖掘寻求决策和分析模式的相关数据"><a href="#统计数据更多的是理解数据及其之间的模式，数据挖掘寻求决策和分析模式的相关数据" class="headerlink" title="统计数据更多的是理解数据及其之间的模式，数据挖掘寻求决策和分析模式的相关数据"></a>统计数据更多的是理解数据及其之间的模式，数据挖掘寻求决策和分析模式的相关数据</h4><h4 id="通常情况下，学习和理解同时发生。"><a href="#通常情况下，学习和理解同时发生。" class="headerlink" title="通常情况下，学习和理解同时发生。"></a>通常情况下，学习和理解同时发生。</h4><h4 id="新的和已有的知识都是围绕学科主要概念和原理时促进学习发展的。在学习过程中，要么一些原理已经存在（计算机语言中用if-then），要么在工作过程中发展为学习指南。"><a href="#新的和已有的知识都是围绕学科主要概念和原理时促进学习发展的。在学习过程中，要么一些原理已经存在（计算机语言中用if-then），要么在工作过程中发展为学习指南。" class="headerlink" title="新的和已有的知识都是围绕学科主要概念和原理时促进学习发展的。在学习过程中，要么一些原理已经存在（计算机语言中用if then），要么在工作过程中发展为学习指南。"></a>新的和已有的知识都是围绕学科主要概念和原理时促进学习发展的。在学习过程中，要么一些原理已经存在（计算机语言中用if then），要么在工作过程中发展为学习指南。</h4><h4 id="学习也需要prior-knowledge。学习者使用他们已知来构造新的理解。此外，他们有不同的视角和元认知。学习是通过识别、监控和调节元认知策略的使用二促进发展的"><a href="#学习也需要prior-knowledge。学习者使用他们已知来构造新的理解。此外，他们有不同的视角和元认知。学习是通过识别、监控和调节元认知策略的使用二促进发展的" class="headerlink" title="学习也需要prior knowledge。学习者使用他们已知来构造新的理解。此外，他们有不同的视角和元认知。学习是通过识别、监控和调节元认知策略的使用二促进发展的"></a>学习也需要prior knowledge。学习者使用他们已知来构造新的理解。<strong>此外，他们有不同的视角和元认知。学习是通过识别、监控和调节元认知策略的使用二促进发展的</strong></h4><p>最后加一点机器学习的想法：</p><h2 id="机器学习"><a href="#机器学习" class="headerlink" title="机器学习"></a>机器学习</h2><h4 id="归纳induction，从特殊到一般，泛化generalization"><a href="#归纳induction，从特殊到一般，泛化generalization" class="headerlink" title="归纳induction，从特殊到一般，泛化generalization"></a>归纳induction，从特殊到一般，泛化generalization</h4><h4 id="演绎deduction，从一般到特殊，归纳学习inductive-learning"><a href="#演绎deduction，从一般到特殊，归纳学习inductive-learning" class="headerlink" title="演绎deduction，从一般到特殊，归纳学习inductive learning"></a>演绎deduction，从一般到特殊，归纳学习inductive learning</h4><h4 id="感知机-perceptron"><a href="#感知机-perceptron" class="headerlink" title="感知机 perceptron"></a>感知机 perceptron</h4><p><strong>“从样例中学习”的一大主流是符号主义学习</strong><br><strong>代表包括决策树和基于逻辑的学习</strong><br><strong>decision tree 以信息论为基础，以信息熵最小化为目标，直接模拟了人类对概念进行判定的树状流程基于逻辑的学习的代表为归纳逻辑程序设计（indective logic programming，ILP 使用一阶逻辑来进行知识表示，通过修改和扩充逻辑表达式来完成对数据的归纳</strong></p>]]></content>
      
      
      <categories>
          
          <category> 科研 </category>
          
          <category> RL </category>
          
      </categories>
      
      
        <tags>
            
            <tag> DL </tag>
            
            <tag> 脑洞 </tag>
            
            <tag> 整理 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>NLP一些基本概念的摘抄</title>
      <link href="/2019/12/01/NLP%E9%83%A8%E5%88%86%E6%91%98%E6%8A%84/"/>
      <url>/2019/12/01/NLP%E9%83%A8%E5%88%86%E6%91%98%E6%8A%84/</url>
      
        <content type="html"><![CDATA[<h1 id="NLP"><a href="#NLP" class="headerlink" title="NLP"></a>NLP</h1><ul><li>机器翻译</li><li>情感分析</li><li>智能问答</li><li>文摘生成</li><li>文本分类</li><li>舆论分析<br>  分析话题热度，分析传播路径以及发展趋势。对于不好的趋势进行宏观控制</li><li>知识图谱（KG）<br>  显示知识发展进程与结构关系的一系列不同图形。用可视化技术描述知识资源以及载体，挖掘、分析、构建、绘制和显示知识及其相互联系。</li></ul><h2 id="NLP基本术语"><a href="#NLP基本术语" class="headerlink" title="NLP基本术语"></a>NLP基本术语</h2><p>（1）分词（segment）<br>（2）词性标注（标n，adj。。。）<br>（3）命名实体识别（Named Entity Recognition）<br>（4）句法分析（syntax parsing，基于规则的专家系统解析句子中各个成分的依赖关系）<br>（5）指代消解（把代词还原为原来的意思）<br>（6）情感识别（现在流行的是词向量模型+RNN）<br>（7）纠错（correction）（基于N-gram，字典树，有限状态机等）<br>（8）问答系统（QA system）</p><h2 id="NLP的基本应用"><a href="#NLP的基本应用" class="headerlink" title="NLP的基本应用"></a>NLP的基本应用</h2><ol><li>句法语义分析</li><li>关键词抽取（如从一条新闻中抽取关键信息，设计实体识别，时间抽取，因果关系抽取等）</li><li>文本挖掘（文本局内、分类、信息抽取、摘要、情感分析以及对挖掘到的知识都信息可视化、交互式呈现）</li><li>机器翻译</li><li>信息检索（可简单对文档中的词汇赋不同权重来建立索引，查询时首先对输入比进行分析，然后在索引里查找匹配的候选文档。再排序打分）</li><li>问答系统（对查询语句进行语义分析，包括实体链接、关系识别、形成逻辑表达式，再到知识库查找可能对候选答案，打分排序）</li><li>对话系统</li></ol><h2 id="深度学习在NLP应用"><a href="#深度学习在NLP应用" class="headerlink" title="深度学习在NLP应用"></a>深度学习在NLP应用</h2><p>主要优势原因有以下两点：<br>####（1）海量的数据<br>很多应用积累了相当大量数据可以用于学习。当数据量增大，以SVM、CRF（条件随机场）为代表的传统浅层模型无法对数据的高维非线性映射建模。因此，以CNN、RNN为代表的深度模型可以随着模型复杂度增大而增强，更贴近数据本质映射。<br>####（2）DL算法的革新<br>一方面由于深度学习的word2vec的出现，可以降低输入层的维度；另一方面，深度学习让之前很多任务进行端到端的训练。如机器翻译等。避免了误差的传递。</p><h2 id="目前局限和未来发展"><a href="#目前局限和未来发展" class="headerlink" title="目前局限和未来发展"></a>目前局限和未来发展</h2><p>1、人在表达时，背景知识的存在会省略非常多的东西，使自然语言的表达更加简洁，文本携带的信息也具有很大的局限性。<br>2、样本数量有限情况下的训练<br>3、如何融合DL和其它知识信息，以提升整个系统的性能<br>4、如何实现自学习、自适应学习<br>5、如何利用强化学习提升系统的性能，如如何利用上下文增强对当前任务的决策能力。</p>]]></content>
      
      
      <categories>
          
          <category> 科研 </category>
          
          <category> NLP </category>
          
      </categories>
      
      
        <tags>
            
            <tag> NLP </tag>
            
            <tag> 总结与摘抄 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>弗·恩格斯——《GC主义原理》</title>
      <link href="/2019/12/01/%E5%85%B1%E4%BA%A7%E4%B8%BB%E4%B9%89%E5%8E%9F%E7%90%86/"/>
      <url>/2019/12/01/%E5%85%B1%E4%BA%A7%E4%B8%BB%E4%B9%89%E5%8E%9F%E7%90%86/</url>
      
        <content type="html"><![CDATA[<p><strong>弗·恩格斯写于 1847年10月底—11月</strong> </p><img src="/2019/12/01/%E5%85%B1%E4%BA%A7%E4%B8%BB%E4%B9%89%E5%8E%9F%E7%90%86/mks.png" class="[class names]"><h4 id="第一个问题：什么是共产主义？"><a href="#第一个问题：什么是共产主义？" class="headerlink" title="第一个问题：什么是共产主义？"></a>第一个问题：什么是共产主义？</h4><p>　　答：共产主义是关于无产阶级解放的条件的学说。</p><h4 id="第二个问题：什么是无产阶级？"><a href="#第二个问题：什么是无产阶级？" class="headerlink" title="第二个问题：什么是无产阶级？"></a>第二个问题：什么是无产阶级？</h4><p>　　答：无产阶级是完全靠出卖自己的劳动而不是靠某一种资本的利润来获得生活资料的社会阶级。这一阶级的祸福、存亡和整个生存，都取决于对劳动的需求，即取决于生意的好坏，取决于不受限制的竞争的波动。一句话，无产阶级或无产者阶级是19世纪的劳动阶级。</p><h4 id="第三个问题：是不是说，无产者不是一向就有的？"><a href="#第三个问题：是不是说，无产者不是一向就有的？" class="headerlink" title="第三个问题：是不是说，无产者不是一向就有的？"></a>第三个问题：是不是说，无产者不是一向就有的？</h4><p>　　答：是的，不是一向就有的。穷人和劳动阶级一向就有；并且劳动阶级通常都是贫穷的。但是，生活在上述条件下的这种穷人、这种工人，即无产者，并不是一向就有的，正如竞争并不一向是自由和不受限制的一样。</p><h4 id="第四个问题：无产阶级是怎样产生的？"><a href="#第四个问题：无产阶级是怎样产生的？" class="headerlink" title="第四个问题：无产阶级是怎样产生的？"></a>第四个问题：无产阶级是怎样产生的？</h4><p>　　答：无产阶级是由于工业革命而产生的，这一革命在上个世纪下半叶发生于英国，后来，相继发生于世界各文明国家。工业革命是由蒸汽机、各种纺纱机、机械织布机和一系列其他机械装备的发明而引起的。这些价钱很贵、因而只有大资本家才买得起的机器，改变了以前的整个生产方式，挤掉了原来的工人。这是因为机器生产的商品要比工人用不完善的纺车和织布机生产的又便宜又好。这样一来，这些机器就使工业全部落到大资本家手里，并且使工人仅有的一点薄产(工具、织布机等)变得一钱不值，于是资本家很快就占有了一切，而工人却一无所有了。从此，在衣料生产方面就实行了工厂制度。机器和工厂制度一经采用，这一制度很快就推行到所有其他工业部门，特别是印花业、印书业、制陶业和金属品制造业等部门。工人之间的分工越来越细，于是，从前完成整件工作的工人，现在只做这件工作的一部分。这种分工可以使产品生产得更快，因而也更便宜。分工把每个工人的活动变成一种非常简单的、老一套的机械操作，这种操作利用机器不但能够做得同样出色，甚至还要好得多。因此，所有这些工业部门都像纺纱和织布业一样，一个跟著一个全都受到了蒸汽动力、机器和工厂制度的支配。这样一来，这些工业部门同时业就全都落到了大资本家的手里，工人也就失掉了最后的一点独立性。除了原来意义上的工场手工业，手工业也渐渐受到工厂制度的支配，因为这里的大资本家也在通过建立可以大量节省开支和实行细致分工的大作坊，不断挤掉小师傅。结果，我们现在可以看到，在文明国家里，几乎所有劳动部门都照工厂方式进行经营了，在所有劳动部门，手工业和工场手工业几乎都被工业挤掉了。于是从前的中间等级，特别是小手工业师傅日益破产，工人原来的状况发生了根本的变化，产生了两个逐渐并吞所有其他阶级的新阶级。这两个阶级就是：<br>　　一、大资本家阶级，他们在所有文明国家里现在已经几乎独占了一切生活资料和生产这些生活资料所必须的原料和工具(机器、工厂)。这就是资产者阶级或资产阶级。<br>　　二、完全没有财产的阶级，他们为了换得维持生存所必须的生活资料，不得不把自己的劳动出卖给资产者。这个阶级叫作无产者阶级或无产阶级。</p><h4 id="第五个问题：无产者是在怎样的条件下把劳动出卖给资产者的？"><a href="#第五个问题：无产者是在怎样的条件下把劳动出卖给资产者的？" class="headerlink" title="第五个问题：无产者是在怎样的条件下把劳动出卖给资产者的？"></a>第五个问题：无产者是在怎样的条件下把劳动出卖给资产者的？</h4><p>　　答：劳动和其他任何商品一样，也是一种商品，因此，它的价格和其他任何商品的价格一样，也是由同样的规律决定的。正像我们下面将看到的，在大工业或自由竞争的统治下，情形都一样，商品的价格平均总是和这种商品的生产费用相等的。因此，劳动的价格也是和劳动的生产费用相等的。而劳动的生产费用正好是使工人能够维持他们的劳动能力并使工人阶级不致灭绝所必需的生活资料的数量。工人的劳动所得不会比为了这一目的所必需的更多。因此，劳动的价格或工资将是维持生存所必需的最低额。但是，因为买卖有时清淡有时兴旺，工人的所得也就有多有少，正像厂主出卖商品所得有多有少一样。如果把旺季和淡季平均起来，厂主出卖商品所得既不多于他的生产费用，也不少于他的生产费用，同样，工人平均所得也是既不会多于这个最低额，也不会少于这个最低额。大工业越是在所有劳动部门占统治地位，工资的这一经济规律体现得就越充分。</p><h4 id="第六个问题：在工业革命前，有过什么样的劳动阶级？"><a href="#第六个问题：在工业革命前，有过什么样的劳动阶级？" class="headerlink" title="第六个问题：在工业革命前，有过什么样的劳动阶级？"></a>第六个问题：在工业革命前，有过什么样的劳动阶级？</h4><p>　　答：在不同的社会发展阶段上，劳动阶级的生活条件各不相同，劳动阶级在同有产阶级和统治阶级的关系中所处的地位也各不相同。在古代，劳动者是主人的奴隶。直到今天在许多落后国家甚至美国南部他们还是这种奴隶。在中世纪，劳动者是土地占有者贵族的农奴，直到今天在匈牙利、波兰和俄国他们还是这种农奴。此外，在中世纪，直到工业革命前，城市里还有在小资产阶级师傅那里做工的手工业帮工，随著工场手工业的发展，也渐渐出现了受较大的资本家雇用的工场手工业工人。</p><h4 id="第七个问题：无产者和奴隶有什么区别？"><a href="#第七个问题：无产者和奴隶有什么区别？" class="headerlink" title="第七个问题：无产者和奴隶有什么区别？"></a>第七个问题：无产者和奴隶有什么区别？</h4><p>　　答：奴隶一次就被完全卖掉了。无产者必须一天一天、一小时一小时地出卖自己。单个的奴隶是某一个主人的财产，由于他与主人利害攸关，他的生活不管怎样坏，总还是有保障的。单个的无产者可以说是整个资产者阶级的财产，他的劳动只有在有人需要的时候才能卖掉，因而他的生活是没有保障的。只有对整个无产者阶级来说，这种生活才是有保障的。奴隶处在竞争之外，无产者处在竞争之中，并且亲身感受到竞争的一切波动。奴隶被看作物，不被看作市民社会的成员。无产者被承认是人，是市民社会的成员。因此奴隶能够比无产者生活得好些，但无产者属于更高的社会发展阶段，他们本身处于比奴隶更高的阶段。在所有的私有制关系中，只要废除奴隶制关系，奴隶就能解放自己，并由此而成为无产者；无产者只有废除一切私有制才能解放自己。</p><h4 id="第八个问题：无产者和农奴有什么区别？"><a href="#第八个问题：无产者和农奴有什么区别？" class="headerlink" title="第八个问题：无产者和农奴有什么区别？"></a>第八个问题：无产者和农奴有什么区别？</h4><p>　　答：农奴占有并使用一种生产工具，即一块土地，为此他要交出自己的一部份收益或者服一定的劳役。无产者用别人的生产工具为这个别人做工，从而得到一部份收益。农奴是交出，无产者是得到。农奴生活有保障，无产者生活无保障。农奴处在竞争之外，无产者处在竞争之中。农奴可以通过各种道路获得解放：或者是逃到城市里去做手工业者；或者是交钱给地主代替劳役和产品，从而成为自由的佃农；或者是把他们的封建主赶走，自己变成财产所有者。总之，农奴可以通过不同的办法加入有产阶级的队伍并进入竞争领域而获得解放。无产者只有通过消灭竞争、私有制和一切阶级差别才能获得解放。</p><h4 id="第九个问题：无产者和手工业者有什么区别？"><a href="#第九个问题：无产者和手工业者有什么区别？" class="headerlink" title="第九个问题：无产者和手工业者有什么区别？"></a>第九个问题：无产者和手工业者有什么区别？</h4><h4 id="第十个问题：无产者和工场手工业工人有什么区别？"><a href="#第十个问题：无产者和工场手工业工人有什么区别？" class="headerlink" title="第十个问题：无产者和工场手工业工人有什么区别？"></a>第十个问题：无产者和工场手工业工人有什么区别？</h4><p>　　答：16至18世纪，几乎任何地方的工场手工业工人都占有生产工具，如织布机、家庭用的纺车和一小块在工余时间耕种的土地。这一切，无产者都没有。工场手工业工人几乎总是生活在农村，和地主或雇主维持著或多或少的宗法关系。无产者通常生活在大城市，和雇主只有金钱关系。大工业使工场手工业工人脱离了宗法关系，他们失去了仅有的一点财产，因此而变成无产者。</p><h4 id="第十一个问题：工业革命和社会划分为资产者与无产者首先产生了什么结果？"><a href="#第十一个问题：工业革命和社会划分为资产者与无产者首先产生了什么结果？" class="headerlink" title="第十一个问题：工业革命和社会划分为资产者与无产者首先产生了什么结果？"></a>第十一个问题：工业革命和社会划分为资产者与无产者首先产生了什么结果？</h4><p>　　答：第一，由于在世界各国机器劳动不断降低工业品的价格，旧的工场手工业制度或以手工劳动为基础的工业制度完全被摧毁。所有那些迄今或多或少置身于历史发展之外、工业迄今建立在工场手工业基础上的半野蛮国家，随之也就被迫脱离了它们的闭关自守状态。这些国家购买比较便宜的英国商品，把本国的工场手工业工人置于死地。因此，那些几千年来没有进步的国家，例如印度，都已经进行了完全的革命，甚至中国现在也正走向革命。事情已经发展到这样的地步：今天英国发明的新机器，一年之内就会夺去中国千百万工人的饭碗。这样，大工业便把世界各国人民互相联系起来，把所有地方性的小市场联合成为一个世界市场，到处为文明和进步作好了准备，使各文明国家里发生的一切必然影响到其余各国。因此，如果现在英国或法国的工人获得解放，这必然会引起其他一切国家的革命，这种革命迟早会使这些国家的工人也获得解放。<br>　　第二，凡是大工业代替了工场手工业的地方，工业革命都使资产阶级及其财富和势力最大限度地发展起来，使它成为国内的第一阶级。结果，凡是完成了这种过程的地方，资产阶级都取得了政治权力，并挤掉了以前的统治阶级——贵族、行会师傅和代表他们的专制王朝。资产阶级废除了长子继承权或出卖领地的禁令，取消了贵族的一切特权，这样便消灭了特权贵族、土地贵族的势力。资产阶级取消了所有行会，废除了手工业者的一切特权，这样便摧毁了行会师傅的势力。资产阶级用自由竞争来代替它们；在自由竞争这种社会状况下，每一个人都有权经营任何一个工业部门，而且，除非缺乏必要的资本，什么也不能妨碍他的经营。这样，实行自由竞争就是公开宣布：从今以后，只是由于社会各成员的资本多寡不等，所以他们之间才不平等，资本成为决定性的力量，从而资本家，资产者成为社会上的第一阶级。但是，自由竞争在大工业发展初期之所以必要是因为只有在这种社会状况下大工业才能成长起来。资产阶级这样消灭了贵族和行会师傅的社会势力以后，也就消灭了他们的政治权力。资产阶级在社会上上升为第一阶级以后，它也就在政治上宣布自己是第一阶级。它是通过实行代议制而做到这一点的。代议制是以资产阶级的在法律面前平等和法律承认自由竞争为基础的。这种制度在欧洲各国采取立宪君主制的形式。在这种立宪君主制的国家里，只有拥有一定资本的人即资产者，才有选举权。这些资产者选民选出议员，而这些资产者议员可以运用拒绝纳税的权利，选出资产者政府。<br>　　第三，工业革命到处都使无产阶级和资产阶级以同样的速度发展起来。资产者越发财，无产者的人数也就越多。因为只有资本才能使无产者找到工作，而资本只有在使用劳动的时候才能增加，所以无产阶级的增加和资本的增加是完全同步的。同时，工业革命使资产者和无产者都集中在最有利于发展工业的大城市里，广大群众聚集在一个地方，使无产者意识到自己的力量。其次，随著工业革命的发展，随著挤掉手工劳动的新机器的不断发明，大工业把工资压得越来越低，把它压到上面说过的最低额，因而无产阶级的处境也就越来越不堪忍受了。这样，一方面由于无产阶级不满情绪的增长，另一方面由于他们力量的壮大，工业革命便孕育著一个由无产阶级进行的社会革命。</p><h4 id="第十二个问题：工业革命进一步产生了什么结果？"><a href="#第十二个问题：工业革命进一步产生了什么结果？" class="headerlink" title="第十二个问题：工业革命进一步产生了什么结果？"></a>第十二个问题：工业革命进一步产生了什么结果？</h4><p>　　答：大工业创造了像蒸汽机和其他机器那样的手段，使工业生产在短时间内用不多的费用便能无限地增加起来。由于生产变得这样容易，这种大工业必然产生的自由竞争很快就达到十分剧烈的程度。大批资本家投身于工业，生产很快就超过了消费。结果，生产出来的商品卖不出去，所谓商业危机就到来了。工厂只好关门，厂主破产，工人挨饿。到处出现了极度贫困的现象。过了一段时间，过剩的产品卖光了，工厂重新开工，工资提高，生意也渐渐地比以往更好起来。但这是不会长久的，因为很快又会生产出过多的商品，新的危机又会到来，这种新危机的过程和前次危机完全相同。因此，从本世纪初以来，工业经常在繁荣时期和危机时期之间波动。这样的危机几乎定期地每五年到七年发生一次，每一次它都给工人带来极度的贫困，激起普遍的革命热情，给整个现存制度造成极大的危险。</p><h4 id="第十三个问题：这种定期重复的商业危机会产生什么后果？"><a href="#第十三个问题：这种定期重复的商业危机会产生什么后果？" class="headerlink" title="第十三个问题：这种定期重复的商业危机会产生什么后果？"></a>第十三个问题：这种定期重复的商业危机会产生什么后果？</h4><p>　　答：第一，虽然大工业在它的发展初期自己创造了自由竞争，但是现在它的发展已经超越了自由竞争的范围。竞争和个人经营工业生产已经变成大工业的枷锁，大工业必须粉碎它，而且一定会粉碎它。大工业只要还在现今的基础上进行经营，就只能通过每七年出现一次的普遍混乱来维持，每次混乱对全部文明都是一种威胁，它不但把无产者抛入贫困的深渊，而且也使许多资产者破产。因此，或者必须完全放弃大工业本身(这是绝对不可能的)，或者大工业使建立一个全新的社会组织成为绝对必要的，在这个新的社会组织里，工业生产将不是由相互竞争的单个的厂主来领导，而是由整个社会按照确定的计划和所有人的需要来领导。<br>　　第二，大工业及其所引起的生产无限扩大的可能性，使人们能够建立这样一种社会制度，在这种社会制度下，一切生活必需品都将生产得很多，使每一个社会成员都能够完全自由地发展和发挥他的全部力量和才能。由此可见，在现今社会中造成一切贫困和商业危机的大工业的那种特性，在另一种社会组织中正是消灭这种贫困和这些灾难性的波动的因素。<br>　　这就完全令人信服地证明：<br>　　(1)从现在起，可以把所有这些弊病完全归咎于已经不适应当前情况的社会制度；<br>　　(2)通过建立新的社会制度来彻底铲除这些弊病的手段已经具备。</p><h4 id="第十四个问题：这种新的社会制度应当是怎样的？"><a href="#第十四个问题：这种新的社会制度应当是怎样的？" class="headerlink" title="第十四个问题：这种新的社会制度应当是怎样的？"></a>第十四个问题：这种新的社会制度应当是怎样的？</h4><p>　　答：这种新的社会制度首先必须剥夺相互竞争的个人对工业和一切生产部门的经营权，而代之以所有这些生产部门由整个社会来经营，就是说，为了共同的利益、按照共同的计划、在社会全体成员的参加下来经营。这样，这种新的社会制度将消灭竞争，而代之以联合。因为个人经营工业的必然结果是私有制，竞争不过是单个私有者经营工业的一种方式，所以私有制同工业的个体经营和竞争是分不开的。因此私有制也必须废除，而代之以共同使用全部生产工具和按照共同的协议来分配全部产品，即所谓财产共有。废除私有制甚至是工业发展必然引起的改造整个社会制度的最简明扼要的概括。所以共产主义者完全正确地强调废除私有制是自己的主要要求。</p><h4 id="第十五个问题：这么说，过去废除私有制是不可能的？"><a href="#第十五个问题：这么说，过去废除私有制是不可能的？" class="headerlink" title="第十五个问题：这么说，过去废除私有制是不可能的？"></a>第十五个问题：这么说，过去废除私有制是不可能的？</h4><p>　　答：不可能。社会制度中的任何变化，所有制关系中的每一次变革，都是产生了同旧的所有制关系不再相适应的新的生产力的必然结果。私有制本身就是这样产生的。私有制不是一向就有的；在中世纪末期，产生了一种工场手工业那样的新的生产方式，这种新的生产方式超越了当时封建和行会所有制的范围，于是这种已经超越旧的所有制关系的工场手工业便产生了新的所有制形式——私有制。对于工场手工业和大工业发展的最初阶段来说，除了私有制，不可能有其他任何所有制形式，除了以私有制为基础的社会制度，不可能有其他任何社会制度。只要生产的规模还没有达到不仅可以满足所有人的需要，而且还有剩余产品去增加社会资本和进一步发展生产力，就总会有支配社会生产力的统治阶级和贫穷的被压迫阶级。至于这些阶级是什么样子，那要看生产的发展阶段。在依赖农业的中世纪，是领主和农奴；在中世纪后期的城市里，是行会师傅、帮工和短工；在17世纪是工场手工业主和工场手工业工人；在19世纪是大工厂主和无产者。非常明显，在这以前，生产力还没有发展到私有制成为这些生产力发展的桎梏和障碍。但是现在，由于大工业的发展，第一，产生了空前大规模的资本和生产力，并且具备了能在短时期内无限提高这些生产力的手段；第二，生产力集中在少数资产者手里，而广大人民群众越来越变成无产者，资产者的财富越增加，无产者的境遇就越悲惨和难以忍受；第三，这种强大的、容易增长的生产力，已经发展到私有制和资产者远远不能驾驭的程度，以致经常引起社会制度极其剧烈的震荡。只有这时废除私有制才不仅可能，甚至完全必要。</p><h4 id="第十六个问题：能不能用和平的办法废除私有制？"><a href="#第十六个问题：能不能用和平的办法废除私有制？" class="headerlink" title="第十六个问题：能不能用和平的办法废除私有制？"></a>第十六个问题：能不能用和平的办法废除私有制？</h4><p>　　答：但愿如此，共产主义者当然是最不反对这种办法的人。共产主义者很清楚，任何密谋都不但无益，甚至有害。他们很清楚，革命不能故意地、随心所欲地制造，革命在任何地方和任何时候都是完全不以单个政党和整个阶级的意志和领导为转移的各种情况的必然结果。但他们也看到，几乎所有文明国家的无产阶级的发展都受到暴力压制，因而是共产主义者的敌人用尽一切力量引起革命。如果被压迫的无产阶级因此最终被推向革命，那时，我们共产主义者将用行动来捍卫无产者的事业，正像现在用语言来捍卫它一样。</p><h4 id="第十七个问题：能不能一下子就把私有制废除？"><a href="#第十七个问题：能不能一下子就把私有制废除？" class="headerlink" title="第十七个问题：能不能一下子就把私有制废除？"></a>第十七个问题：能不能一下子就把私有制废除？</h4><p>　　答：不，不能，正像不能一下子就把现有的生产力扩大到为实行财产公有所必要的程度一样。因此，很可能就要来临的无产阶级革命，只能逐步改造现社会，只有创造了所必需的大量生产资料之后，才能废除私有制。</p><h4 id="第十八个问题：这个革命的发展过程将是怎样的？"><a href="#第十八个问题：这个革命的发展过程将是怎样的？" class="headerlink" title="第十八个问题：这个革命的发展过程将是怎样的？"></a>第十八个问题：这个革命的发展过程将是怎样的？</h4><p>　　答：首先无产阶级革命将建立民主的国家制度，从而直接或间接地建立无产阶级的政治统治。在英国可以直接建立，因为那里的无产者现在已占人民的大多数。在法国和德国可以间接建立，因为这两个国家的大多数人民不仅是无产者，而且还有小农和小资产者，小农和小资产者正处在转变为无产阶级的过渡阶段，他们的一切政治利益的实现都越来越依赖无产阶级，因而他们很快就会同意无产阶级的要求。这也许还需要第二次斗争，但是，这次斗争只能以无产阶级的胜利而告终。<br>　　如果不立即利用民主作为手段实行进一步、直接侵犯私有制和保障无产阶级生存的各种措施，那么，这种民主对于无产阶级就毫无用处。这些作为现存关系的必然结果现在已经产生出来的最主要的措施如下：<br>　　(1)用累进税、高额遗产税、取消旁系亲属(兄弟、侄甥等)继承权、强制公债等来限制私有制。<br>　　(2)一部分用国家工业竞争的办法，一部分直接用纸币赎买的办法，逐步剥夺土地所有者、工厂主、铁路所有者和船主的财产。<br>　　(3)没收一切反对大多数人民的流亡分子和叛乱分子的财产。<br>　　(4)在国家农场、工厂和作坊中组织劳动或者让无产者就业，这样就会消除工人之间的竞争，并迫使还存在的厂主支付同国家一样高的工资。<br>　　(5)对社会全体成员实行同样的劳动义务制，直到完全废除私有制为止。成立产业军，特别是在农业方面。<br>　　(6)通过拥有国家资本的国家银行，把信贷系统和金融业集中在国家手里。取消一切私人银行和银行家。<br>　　(7)随著国家拥有的资本和工人的增加，增加国家工厂、作坊、铁路和船舶，开垦一切荒地，改良已垦土地的土壤。<br>　　(8)所有的儿童，从能够离开母亲照顾的时候起，都由国家出钱在国家设施中受教育。把教育和生产结合起来。<br>　　(9)在国有土地上建筑大厦，作为公民公社的公共住宅。公民公社将从事工业生产和农业生产，将把城市和农村生活方式的优点结合起来，避免二者的片面性和缺点。<br>　　(10)拆毁一切不合卫生条件的、建筑得很坏的住宅和市区。<br>　　(11)婚生子女和非婚生子女享有同等的继承权。<br>　　(12)把全部运输业集中在国家手里。<br>　　自然，所有这一切措施不能一下子都实行起来，但是它们将一个跟著一个实行，只要向私有制一发起猛烈的进攻，无产阶级就要被迫继续向前迈进，把全部资本、全部农业、全部工业、全部运输业和全部交换都越来越多地集中在国家手里。上述一切措施都是为了这个目的。无产阶级的劳动将使国家的生产力大大增长，随著这种增长，这些措施实现的可能性和由此而来的集中化程度也将相应地增长。最后，当全部资本、全部生产和全部交换都集中在国家手里的时候，私有制将自行灭亡，金钱将变成无用之物，生产将大大增加，人将大大改变，以致连旧社会最后的各种交往形式也能够消失。</p><h4 id="第十九个问题：这种革命能不能单独在一个国家发生？"><a href="#第十九个问题：这种革命能不能单独在一个国家发生？" class="headerlink" title="第十九个问题：这种革命能不能单独在一个国家发生？"></a>第十九个问题：这种革命能不能单独在一个国家发生？</h4><p>　　答：不能。单是大工业建立了世界市场这一点，就把全球各国人民，尤其是各文明国家的人民，彼此紧紧地联系起来，以致每一国家的人民都受到另一国家发生的事情的影响。此外，大工业使所有文明国家的社会发展大致相同，以致在所有这些国家，资产阶级和无产阶级都成了社会上两个起决定作用的阶级，它们之间的斗争成了当前的主要斗争。因此，共产主义革命将不是仅仅一个国家的革命，而是将在一切文明国家里，至少在英国、美国、法国、德国同时发生的革命，在这些国家的每一个国家中，共产主义革命发展得较快或较慢，要看这个国家是否有较发达的工业，较多的财富和比较大量的生产力。因此，在德国实现共产主义革命最慢最困难，在英国最快最容易。共产主义革命也会大大影响世界上其他国家，会完全改变并大大加速它们原来的发展进程。它是世界性的革命，所以将有世界性的活动场所。</p><h4 id="第二十个问题：最终废除私有制将产生什么结果？"><a href="#第二十个问题：最终废除私有制将产生什么结果？" class="headerlink" title="第二十个问题：最终废除私有制将产生什么结果？"></a>第二十个问题：最终废除私有制将产生什么结果？</h4><p>　　答：由于社会将剥夺私人资本家对一切生产力和交换手段的支配权以及他们对产品的交换和分配权，由于社会将按照根据实有资源和整个社会需要而制定的计划来管理这一切，所以同现在的大工业管理制度相联系的一切有害的后果，将首先被消除。危机将终止。扩大的生产在现今的社会制度下引起生产过剩，并且是产生贫困的极重要的原因，到那个时候，这种生产就会显得十分不够，还必须大大扩大。超出社会当前需要的生产过剩不但不会引起贫困，而且将保证满足所有人的需要，将引起新的需要，同时将创造出满足这种新需要的手段。这种生产过剩将是新的进步的条件和刺激，它将实现这种进步，而不会像过去那样总是因此造成社会秩序的混乱。摆脱了私有制压迫的大工业的发展规模将十分宏伟，相形之下，目前的大工业状况将显得非常渺小，正像工场手工业和我们今天的大工业相比一样。工业的这种发展将给社会提供足够的产品以满足所有人的需要。现在由于私有制的压迫和土地的分散而难以利用现有改良成果和科学成就的农业，将来同样也会进入崭新的繁荣时期，并将给社会提供足够的产品。这样一来，社会将生产出足够的产品，可以组织分配以满足全体成员的需要。因此，社会划分为各个不同的相互敌对的阶级就是多余的了。这种划分不仅是多余的，甚至是和新的社会制度互不相容的。阶级的存在是由分工引起的，现在这种分工将完全消失，因为要把工业和农业生产提高到上面说过的水平，单靠机械和化学的辅助手段是不够的，还必须相应地发展使用这些手段的人的能力。当上个世纪的农民和工场手工业工人被卷入大工业的时候，他们改变了自己的整个生活方式而成为完全不同的人，同样，由整个社会共同经营生产和由此而引起的生产的新发展，也需要完全不同的人，并将创造出这种人来，共同经营生产不能由现在这种人来进行，因为他们每一个人都只隶属于某一个生产部门，受它束缚，听它剥削，在这里，每一个人都只能发展自己才能的一方面而偏废了其他各方面，只熟悉整个生产的某一个部门或某一个部门的一部分。就是现在的工业也越来越不能使用这样的人了。由整个社会共同地和有计划地来经营的工业，更加需要才能得到全面发展、能够通晓整个生产系统的人。因此，现在已被机器破坏了的分工，即把一个人变成农民、把另一个人变成鞋匠、把第三个人变成工厂工人、把第四个人变成交易所投机者，将完全消失。教育将使年轻人能够很快熟悉整个生产系统，将使他们能够根据社会需要或者他们自己的爱好，轮流从一个生产部门转到另一个生产部门。因此，教育将使他们摆脱现在这种分工给每个人造成的片面性。这样一来，根据共产主义原则组织起来的社会，将使自己的成员能够全面发挥他们的得到全面发展的才能。于是各个不同的阶级也必然消灭。因此，根据共产主义原则组织起来的社会一方面不容许阶级继续存在，另一方面这个社会的建立本身为消灭阶级差别提供了手段。<br>　　由此可见，城市和乡村之间的对立也将消失。从事农业和工业的将是同一些人，而不再是两个不同的阶级，单从纯粹物质方面的原因来看，这也是共产主义联合体的必要条件。乡村农业人口的分散和大城市工业人口的集中，仅仅适应于工农业发展水平还不够高的阶段，这种状态是一切进一步发展的障碍，这一点现在人们就已经深深地感觉到了。<br>　　由社会全体成员组成的共同联合体来共同地和有计划地利用生产力；把生产发展到能够满足所有人的需要的规模；结束牺牲一些人的利益来满足另一些人的需要的状况；彻底消灭阶级和阶级对立；通过消除旧的阶级，通过产业教育、变换工种、所有人共同享受大家创造出来的福利，通过城乡的融合，使社会全体成员的才能得到全面发展；——这就是废除私有制的主要结果。</p><h4 id="第二十一个问题：共产主义社会制度对家庭将产生什么影响？"><a href="#第二十一个问题：共产主义社会制度对家庭将产生什么影响？" class="headerlink" title="第二十一个问题：共产主义社会制度对家庭将产生什么影响？"></a>第二十一个问题：共产主义社会制度对家庭将产生什么影响？</h4><p>　　答：共产主义社会制度将使两性关系成为仅仅和当事人有关而社会无须干预的纯粹私人关系。共产主义社会制度之所以能实现这一点，是由于这种社会制度将废除私有制并将由社会教育儿童，从而将消灭现代婚姻的两种基础，即私有制所产生的妻子依赖丈夫、孩子依赖父母。这也是对道貌岸然的市侩关于共产主义公妻制的号叫的回答。公妻制完全是资产阶级社会的现象，现在的卖淫就是公妻制的充分表现。卖淫是以私有制为基础的，它将随著私有制的消失而消失。因此，共产主义组织并不实行公妻制，正好相反，它要消灭公妻制。</p><h4 id="第二十二个问题：共产主义组织将怎样对待现有的民族？"><a href="#第二十二个问题：共产主义组织将怎样对待现有的民族？" class="headerlink" title="第二十二个问题：共产主义组织将怎样对待现有的民族？"></a>第二十二个问题：共产主义组织将怎样对待现有的民族？</h4><p>　　——保留原案。[2]</p><h4 id="第二十三个问题：共产主义组织将怎样对待现有的宗教"><a href="#第二十三个问题：共产主义组织将怎样对待现有的宗教" class="headerlink" title="第二十三个问题：共产主义组织将怎样对待现有的宗教"></a>第二十三个问题：共产主义组织将怎样对待现有的宗教</h4><p>　　——保留原案。</p><h4 id="第二十四个问题：共产主义者和社会主义者有什么区别？"><a href="#第二十四个问题：共产主义者和社会主义者有什么区别？" class="headerlink" title="第二十四个问题：共产主义者和社会主义者有什么区别？"></a>第二十四个问题：共产主义者和社会主义者有什么区别？</h4><p>　　答：所谓社会主义者分为三类：<br>　　第一类是封建和宗法社会的拥护者，这种社会已被大工业、世界贸易和由它们造成的资产阶级社会所消灭，并且每天还在消灭。这一类社会主义者从现今社会的弊病中得出了这样的结论：应该恢复封建和宗法社会，因为它没有这种种弊病。他们的所有建议都是直接或间接地为了这一目的。共产主义者随时都要坚决同这类反动的社会主义者作斗争，尽管他们假惺惺地表示同情无产阶级的苦难并为此而洒出热泪。因为：<br>　　(1)他们追求一种根本不可能的事情；<br>　　(2)他们企图恢复贵族、行会师傅、工场手工业主以及和他们相联系的专制君主或封建君主、官吏、士兵和僧侣的统治，他们想恢复的这种社会固然没有现今社会的各种弊病，但至少会带来同样多的其他弊病，而且它根本不可能展现通过共产主义组织来解放被压迫工人的任何前景；<br>　　(3)当无产阶级成为革命的和共产主义的阶级的时候，这些社会主义者总要暴露出他们的真实意图。那时他们马上和资产阶级联合起来反对无产者。<br>　　第二类是现今社会的拥护者，现今社会必然产生的弊病，使他们为这个社会的存在担心。因此，他们力图保持现今社会，不过要消除和它联系在一起的弊病。为此，一些人提出了种种简单的慈善办法，另一些人则提出了规模庞大的改革计划，这些计划在改组社会的借口下企图保存现今社会的基础，从而保存现今社会本身。共产主义者也必须同这些资产阶级社会主义者作不懈的斗争，因为他们的活动有利于共产主义者的敌人，他们所维护的社会正是共产主义者所要推翻的社会。<br>　　最后，第三类是民主主义的社会主义者，他们和共产主义者同道，他们希望实现问题中所提出的部分措施，但他们不是把这些措施当作走向共产主义的过渡办法，而是当作足以消除贫困和现今社会的弊病的措施。这些民主主义的社会主义者，或者是还不够了解本阶级解放条件的无产者，或者是小资产阶级的代表，这个阶级直到争得民主和实行由此产生的社会主义措施为止，在许多方面都和无产者有共同的利益。因此，共产主义者在行动的时候，只要民主主义的社会主义者不为占统治地位的资产阶级效劳和不攻击共产主义者，就应当和这些社会主义者达成协议，这时尽可能和他们采取共同的政策。当然，共同行动并不排除讨论存在于他们和共产主义者间的分歧意见。</p><h4 id="第二十五个问题：共产主义者怎样对待现有的其他政党？"><a href="#第二十五个问题：共产主义者怎样对待现有的其他政党？" class="headerlink" title="第二十五个问题：共产主义者怎样对待现有的其他政党？"></a>第二十五个问题：共产主义者怎样对待现有的其他政党？</h4><p>　　答：在不同的国家采取不同的态度。在资产阶级占统治地位的英国、法国和比利时，共产主义者和各民主主义政党暂时还有共同的利益，并且民主主义者在他们现在到处坚持的社会主义措施中越接近共产主义者的目的，就是说，他们越明确地坚持无产阶级的利益和越依靠无产阶级，这种共同的利益就越多。例如在英国，由工人组成的宪章派就要比民主主义小资产者或所谓激进派在极大程度上更接近共产主义者。<br>　　在实行民主宪法的美国，共产主义者必须支持愿意用这个宪法去反对资产阶级、并利用它来为无产阶级谋利益的政党，即全国土地改革派。<br>　　在瑞士是激进派，虽然他们本身是个成分极其复杂的政党，但他们是共产主义者能够打交道的唯一政党，其中瓦特州和日内瓦州的激进派又是最进步的。<br>　　最后，在德国，资产阶级和专制君主制之间的决战还在后面。但是，共产主义者不能指望在资产阶级取得统治以前就和资产阶级进行决战，所以共产主义者为了本身的利益必须帮助资产阶级尽快地取得统治，以便尽快地再把它推翻。因此，在自由派资产阶级同政府的斗争中，共产主义者始终应当支持自由派资产阶级，只是应当注意，不要跟著资产者自我欺骗，不要听信他们关于资产阶级的胜利给无产阶级带来良好结果的花言巧语。共产主义者从资产阶级的胜利中得到的好处只能是：(1)得到各种让步，使共产主义者易于捍卫、讨论和传播自己的原则，从而使无产阶级易于联合成一个紧密团结的、准备战斗的和有组织的阶级；(2)使他们确信，从专制政府垮台的那一天起，就轮到资产者和无产者进行斗争了。从这一天起，共产主义者在这里所采取的党的政策，将和在资产阶级现在已占统治地位的那些国家里所采取的政策一样。</p><p>附录</p><h3 id="“南巡讲话”摘抄"><a href="#“南巡讲话”摘抄" class="headerlink" title="“南巡讲话”摘抄"></a>“南巡讲话”摘抄</h3><p>1984年我来过广东。当时，农村改革搞了几年，城市改革刚开始，经济特区才起步。八年过去了，这次来看，深圳、珠海特区和其他一些地方，发展得这么快，我没有想到。看了以后，信心增加了。</p><p>革命是解放生产力，改革也是解放生产力，推翻帝国主义、封建主义、官僚资本主义的反动统治，使中国人民的生产力获得解放，这是革命，所以革命是解放生产力。社会主义基本制度确立以后，还要从根本上改变束缚生产力发展的经济体制，建立起充满生机和活力的社会主义经济体制，促进生产力的发展，这是改革，所以改革也是解放生产力。过去，只讲在社会主义条件下发展生产力，没有讲还要通过改革解放生产力，不完全。应该把解放生产力和发展生产力两个讲全了。</p><p>要坚持党的十一届三中全会以来的路线方针政策，关键是坚持“一个中心、两个基本点”。不坚持社会主义，不改革开放，不发展经济，不改善人民生活，只能是死路一条。基本路线要管一百年，动摇不得。只有坚持这条路线，人民才会相信你，拥护你，谁要改变三中全会以来的路线方针政策，老百姓不答应，谁就会被打倒。这一点，我讲过几次。如果没有改革开放的成果，“六四”这个关我们闯不过，闯不过就乱，乱就打内战，“**”就是内战。为什么“六四”以后我们的国家能够很稳定？就是因为我们搞了改革开放，促进了经济发展，人民生活得到了改善。所以，军队、国家政权，都要维护这条道路、这个制度、这些政策。</p><p>在这短短的十几年内，我们国家发展得这么快，使人民高兴，世界瞩目，这就足以证明三中全会以来路线、方针、政策的正确性，谁想变也变不了。说过去说过来，就是一句话，坚持这个路线、方针、政策不变。改革开放以来，我们立的章程并不少，而且是全方位的。经济、政治、科技、教育、文化、军事、外交等各个方面都有明确的方针和政策，而且有准确的表述语言。这次十三届八中全会开得好，肯定农村家庭 联产承包责任制不变。一变就人心不安，人们就会说中央的政策变了。农村改革初期，安徽出了个“傻子瓜子”问题。 当时许多人不舒服，说他赚了一百万，主张动他。我说不能动，一动人们就会说政策变了，得不偿失。象这一类的问题还有不少，如果处理不当，就很容易动摇我们的方针，影响改革的全局。城乡改革的基本政策，一定要长期保持稳定。当然，随着实践的发展，该完善的完善，该修补的修补，但总的要坚定不移。即使没有新的主意也可以，就是不要变，不要使人们感到政策变了。有了这一条，中国就大有希望。</p><p>改革开放胆子要大一些，敢于试验，不能像小脚女人一 样。看准了的，就大胆地试，大胆地闯。深圳的重要经验就是敢闯。没有一点闯的精神，没有一点“冒”的精神，没有一股气呀、劲呀，就走不出一条好路，走不出一条新路，就干不出新的事业。不冒点风险，办什么事情都有百分之百的把握，万无一失，谁敢说这样的话？一开始就自以为是，认为百分之百正确，没那么回事，我就从来没有那么认为。每年领导层都要总结经验，对的就坚持，不对的赶快改，新问题出来抓紧解决。恐怕再有30年的时间，我们才会在各方面形成一整套更加成熟、更加定型的制度。在这个制度下的方针、政策，也将更加定型化。现在建设中国式的社会主义，经验一天比一天丰富。经验很多，从各省的报刊材料看，都有自己的特色。这样好嘛，就是要有创造性。</p><p>改革开放迈不开步子，不敢闯，说来说去就是怕资本主义的东西多了，走了资本主义道路。要害是姓“资”还是姓“社”的问题。判断的标准，应该主要看是否有利于发展社会主义社会的生产力，是否有利于增强社会主义国家的综合国力，是否有利于提高人民的生活水平。对办特区，从一开始就有不同意见，担心是不是搞资本主义。深圳的建设成就，明确回答了那些有这样那样担心的人。特区姓“社”不姓“资”。</p><p>从深圳的情况看，公有制是主体，外商投资只占四分之一，就是外资部分，我们还可以从税收、劳务等方面得到益处嘛！多搞点“三资”企业，不要怕。只要我们头脑清醒，就不怕。我们有优势，有国营大中型企业，有乡镇企业，更重要的是政权在我们手里。有的人认为，多一分外资，就多一分资本主义，“三资”企业多了，就是资本主义的东西多了，就是发展了资本主义，这些人连基本常识都没有。我国现阶段的“三资”企业，按照现行的法规政策，外商总是要赚一 些钱。但是，国家还要拿回税收，工人还要拿回工资，我们还可以学习技术和管理，还可以得到信息、打开市场。因此，“三资”企业受到我国整个政治、经济条件的制约，是社会主义经济的有益补充，归根到底是有利于社会主义的。</p><p>计划多一点还是市场多一点，不是社会主义与资本主义的本质区别。计划经济不等于社会主义，资本主义也有计划；市场经济不等于资本主义，社会主义也有市场，计划和市场都是经济手段。社会主义的本质，是解放生产力，发展生产力，消灭剥削，消除两极分化，最终达到共同富裕。就是要对大家讲这个道理。证券、股市，这些东西究竟好不好，有没有危险，是不是资本主义独有的东西，社会主义能不能用？</p><p>允许看，但要坚决地试。看对了，搞一两年对了，放开；错了，纠正，关了就是了。关，也可以快关，也可以慢关，也可以留一点尾巴。怕什么，坚持这种态度就不要紧，就不会犯大错误。总之，社会主义要赢得与资本主义相比较的优势，就必须大胆吸收和借鉴人类社会创造的一切文明成果，吸收和借鉴当今世界各国包括资本主义发达国家的一切反映**<a href="https://web.archive.org/web/20191106045521/http://car.auto.ifeng.com/brand/20046">现代</a>**社会化生产规律的先进经营方式、管理方法。</p><p>走社会主义道路，就是要逐步实现共同富裕。共同富裕的构想是这样提出的：一部分地区有条件先发展起来，一部分地区发展慢点，先发展起来的地区带动后发展的地区，最终达到共同富裕。如果富的愈来愈富，穷的愈来愈穷，两极分化就会产生，而社会主义制度就应该而且能够避免两极分化。解决的办法之一，就是先富起来的地区多交点利税，支持贫困地区的发展。当然，太早这样办也不行，现在不能削弱发达地区的活力，也不能鼓励吃“大锅饭”。什么时候突出地提出和解决这个问题，在什么基础上提出和解决这个问题，要研究。可以设想，在本世纪末达到小康水平的时候，就要突出地提出和解决这个问题。到那个时候，发达地区要继续发展，并通过多交利税和技术转让等方式大力支持不发达地区。不发达地区又大都是拥有丰富资源的地区，发展潜力是很大的。总之，就全国范围来说，我们一定能够逐步顺利解决沿海同内地贫富差距的问题。</p><p>对改革开放，一开始就有不同意见，这是正常的。不只是经济特区问题，更大的问题是农村改革，搞农村家庭联产承包，废除人民公社制度。开始的时候只有三分之一的省干起来，第二年超过三分之二，第三年才差不多全部跟上，这是就全国范围讲的，开始搞并不踊跃呀，好多人在看。我们的政策就是允许看。允许看，比强制好得多。我们推行三中全会以来的路线、方针、政策，不搞强迫，不搞运动，愿意干就干， 干多少是多少，这样慢慢就跟上来了。不搞争论，是我的一个发明。不争论，是为了争取时间干。一争论就复杂了，把时间都争掉了，什么也干不成，不争论，大胆地试，大胆地闯。农村改革是如此，城市改革也应如此。</p><p>现在，有右的东西影响我们，也有“左”的东西影响我们，但根深蒂固的还是“左”的东西。有些理论家、政治家，拿大帽子吓唬人的，不是右，而是“左”。“左”带有革命的色彩，好像越“左”越革命，“左”的东西在我们党的历史上可怕呀！一个好好的东西，一下子被他搞掉了。右可以葬送社会主义，“左”也可以葬送社会主义。中国要警惕右，但主要是防止“左”。右的东西有，动乱就是右的！“左”的东西也有。把改革开放说成是引进和发展资本主义，认为和平演变的主要危险来自经济领域，这些就是“左”。我们必须保持清醒的头脑，这样就不会犯大错误，出现问题也容易纠正和改正。</p><p>抓住时机，发展自己，关键是发展经济。现在，周边一 些国家和地区经济发展比我们快，如果我们不发展或发展得太慢，老百姓一比较就有问题了。所以，能发展就不要阻挡，有条件的地方要尽可能搞快点，只要是讲效益，讲质量，搞外向型经济，就没有什么可以担心的。低速度就等于停步，甚至等于后退。要抓机会，现在就是好机会。我就担心丧失机会。不抓呀，看到的机会就丢掉了，时间一晃就过去了。</p><p>我国的经济发展，总要力争隔几年上一个台阶。当然，不是鼓励不切实际的高速度，还是要扎扎实实，讲求效益，稳步协调地发展。比如广东，要上几个台阶，力争用20年的时间赶上亚洲“四小龙”。比如江苏等发展比较好的地区，就应该比全国平均速度快。又比如上海，目前完全有条件搞得更快一点。上海在人才、技术和管理方面都有明显的优势，辐射面宽。回过头看，我的一个大失误就是搞四个经济特区时没有加上上海。要不然，现在长江三角洲，整个长江流域，乃至全国改革开放的局面，都会不一样。 从我们自己这些年的经验来看，经济发展隔几年上一个台阶，是能够办得到的。我们真正干起来是1980年。81、82、83这三年，改革主要在农村进行。84年重点转入城市改革。</p><p>经济发展比较快的是84年至88年。这5年，首先是农村改革带来许多新的变化，农作物大幅度增产，农民收入大幅度增加，乡镇企业异军突起。广大农民购买力增加了，不仅盖了大批新房子，而且自行车、缝纫机、收音机、手表“四大件”和一些高档消费品进入普通农民家庭。农副产品的增加，农村市场的扩大，农村剩余劳动力的转移，又强有力地推动了工业的发展。这五年，共创造工业总产值6万多亿元，平均每年增长21.7%。吃、穿、注行、用等各方面的工业品，包括彩电、冰箱、洗衣机，都大幅度增长。**<a href="https://web.archive.org/web/20191106045547/http://app.finance.ifeng.com/data/indu/jgzs.php?symbol=5">钢材</a>**、水泥等生产资料也大幅度增长。农业和工业，农村和城市，就是这样相互影响、相互促进。这是一个非常生动、非常有说服力的发展过程。可以说，这个期间我国财富有了巨额增加，整个国民经济上了一个新的台阶。89年开始治理整顿。治理整顿，我是赞成的，而且确实需要。经济“过热”，确实带来一些问题。比如，票子发得多了一点，物价波动大了一点，重复建设比较严重，造成了一些浪费。但是，怎样全面地来看那五 年的加速发展？那五年的加速发展，也可以称作一种飞跃，但与“大跃进”不同，没有伤害整个发展的机体、机制。那五年的加速发展功劳不小，这是我的评价。治理整顿有成绩，但评价功劳，只算稳的功劳，还是那五年加速发展也算一功？或者至少算是一方面的功？如果不是那几年跳跃一下，整个经济上了一个台阶，后来三年治理整顿不可能顺利进行。看起来我们的发展，总是要在某一个阶段，抓住时机，加速搞几年，发现问题及时加以治理，尔后继续前进。从根本上说，手头东西多了，我们在处理各种矛盾和问题时就立于主动地位。</p><p>对于我们这样发展中的大国来说，经济要发展得快一点，不可能总是那么平平静静、稳稳当当。要注意经济稳定、协调地发展，但稳定和协调也是相对的，不是绝对的。发展才是硬道理。这个问题要搞清楚。如果分析不当，造成误解，就会变得谨小慎微，不敢解放思想，不敢放开手脚，结果是丧失时机，犹如逆水行舟，不进则退。</p><p>从国际经验来看，一些国家在发展过程中，都曾经有过高速发展时期，或若干高速发展阶段。日本、南朝鲜、东南亚一些国家和地区，就是如此。现在，我们国内条件具备，国际环境有利，再加上发挥社会主义制度能够集中力量办大事的优势，在今后的**<a href="https://web.archive.org/web/20191106045547/http://car.auto.ifeng.com/brand/20046">现代</a>**化建设长过程中，出现若干个发展速度比较快、效益比较好的阶段，是必要的，也是能够办到的，我们就是要有这个雄心壮志！</p><p>经济发展得快一点，必须依靠科技和教育。我说科学技术是第一生产力。近一二十年来，世界科学技术发展得多快啊！高科技领域的一个突破，带动一批产业的发展。我们自己这几年，离开科学技术能增长得这么快吗？要提倡科学，靠科学才有希望。近十几年来我国科技进步不小，希望在九十 年代，进步得更快。每一行都树立一个明确的战略目标，一 定要打赢。高科技领域，中国也要在世界占有一席之地，我是个外行，但我要感谢科技工作者为国家作出的贡献和争得的荣誉。大家要记住那个年代，钱学森，李四光、钱三强那一批老科学家，在那么困难的条件下，把两弹一星和好多高科技搞起来。应该说，现在的科学家更幸福，因此对他们的要求会更多。我说过，知识分子是工人阶级的一部分。老科学家、中年科学家很重要，青年科学家也很重要。希望所有出国学习的人回来。不管他们过去的政治态度怎么样，都可以回来，回来后妥善安排。这个政策不能变。告诉他们，要做出贡献，还是回国好。希望大家通力合作，为加快发展我国科技和教育事业多做实事。搞科技，越高越好，越新越好，越高越新，我们也就越高兴。不只我们高兴，人民高兴，国家高兴。对我们的国家要爱，要让我们的国家发达起来。 (四)</p><p>要坚持两手抓，一手抓改革开放，一手抓打击各种犯罪活动。这两只手都要硬。打击各种犯罪活动，扫除各种丑恶现象，手软不得。广东二十年赶上亚洲“四小龙”，不仅经济要上去，社会秩序、社会风气也要搞好，两个文明建设都要超过他们，这才是有中国特色的社会主义。新加坡的社会秩序算是好的，他们管得严，我们应当借鉴他们的经验，而且比他们管得更好。开放以后，一些腐朽的东西也跟着进来了，中国的一些地方也出现了丑恶的现象，如吸毒、嫖娼、经济犯罪等。要注意很好地抓，坚决取缔和打击，决不能任其发展。新中国成立以后，只花了三年时间，这些东西就一扫而光。吸鸦片烟、吃白面，世界上谁能消灭得了？***办不到。资本主义办不到，事实证明，共产党能够消灭丑恶的东西。在整个改革开放过程中都要反对腐败。对干部和共产党员来说，廉政建设要作为大事来抓。还是要靠法制，搞法制靠得住些。总之，只要我们的生产力发展，保持一定的经济增长速度，坚持两手抓，社会主义精神文明建设就可以搞上去。</p><p>在整个改革开放的过程中，必须始终注意坚持四项基本原则。十二届六中全会我提出反对资产阶级自由化还要搞二 十年，现在看起来还不只二十年。资产阶级自由化泛滥，后果极其严重。特区搞建设，花了十几年时间才有这个样子，垮起来可是一夜之间啊，垮起来容易，建设就很难。在苗头出现时不注意，就会出事。</p><p>依靠无产阶级专政保卫社会主义制度，这是马克思主义的一个基本观点。马克思说过，阶级斗争学说不是他的发明，真正的发明是关于无产阶级专政的理论。历史经验证明，刚刚掌握政权的新兴阶级，一般来说，总是弱于敌对阶级的力量，因此要用专政的手段来巩固政权。对人民实行民主，对敌人实行专政，这就是人民民主专政。运用人民民主专政的力量，巩固人民的政权，是正义的事情，没有什么输理的地方。我们搞社会主义才几十年，还处在初级阶段。巩固和发展社会主义制度，还需要一个很长的历史阶段，需要我们几代人、十几代人，甚至几十代人坚持不懈地努力奋斗，决不能掉以轻心。</p><p>正确的政治路线要靠正确的组织路线来保证。中国的事情能不能办好，社会主义和改革开发能不能坚持，经济能不能快一点发展起来，国家能不能长治久安，从一定意义上说，关键在人。</p><p>帝国主义搞和平演变，把希望寄托在我们以后的几代人身上。江泽民同志他们这一代可以算是第三代，还有第四代、第五代。我们这些老一辈的人在，有分量，敌对势力知道变不了。但我们这些老人呜呼哀哉后，谁来保险？所以，要把我们的军队教育好，把我们的专政机构教育好，把共产党员教育好，把人民和青年教育好。中国要出问题，还是出在共产党内部。对这个问题要清醒，要注意培养人，要按照“革命化、年轻化、知识化、专业化”的标准，选拔德才兼备的人进班子。我们说党的基本路线要管一百年，要长治久安，就要靠这一条。真正关系到大局的是这个事。这是眼前的一个问题，并不是已经顺利解决了，希望解决得好。“**”结束，我出来后，就注意这个问题。我们发现靠我们这老一代解决不了长治久安的问题，于是我们推荐别的人，真正要找第三代。但是没有解决问题，两个人都失败了，而且不是在经济上出现问题，都是在反对资产阶级自由化的问题上栽跟头。这就不能让了。我在89年5月底还说过，现在就是要选人民公认是坚持改革开放路线并有政绩的人，大胆地放进新的领导机构里，使人民感到我们真心诚意搞改革开放。</p><p>人民，是看实践。人民一看，还是社会主义好，还是改革开放好，我们的事业就会万古长青！</p><p>要进一步找年轻人进班子。现在中央这个班子年龄还是大了点，60过一点的就算年轻的了。这些人过10年还可以，再过20年，就80多岁了，像我今天这样聊聊天还可以，做工作精力就不够了。现在中央的班子干得不错嘛！问题当然还有很多，什么时候问题都不会少。我们这些老人关键是不管事，让新上来的人放手干，看着现在的同志成熟起来。老年人自觉让位，在旁边可以帮助一下，但不要作障碍人的事。</p><p>对于办得不妥当的事，也要好心好意地帮，要注意下一代接班人的培养。我坚持退下来，就是不要在老年的时候犯错误。 老年人有长处，但也有很大的弱点，老年人容易固执，因此老年人也要有点自觉性。越老越不要最后犯错误，越老越要谦虚一点。现在还要继续选人，选更年轻的同志，帮助培养。</p><p>不要迷信，我二十几岁就做大官了，不比你们现在懂得多，不是也照样干？要选人，人选好了，帮助培养，让更多的年轻人成长起来。他们成长起来，我们就放心了，现在还不放心啊！说到底，关键是我们共产党内部要搞好，不出事，就可以放心睡大觉。十一届三中全会确立的这条中国的发展路线，是否能够坚持得住，要靠大家努力，特别是要教育后代。</p><p>现在有一个问题，就是形式主义多。电视一打开，尽是会议。会议多，文章太长，讲话也太长，而且内容重复，新的语言并不很多。重复的话要讲，但要精简。形式主义也是官僚主义。要腾出时间来多办实事，多做少说。毛主席不开长会，文章短而精，讲话也很精练。周总理四届人大的报告，毛主席指定我负责起草，要求不得超过5000字，我完成了任务。5000字，不是也很管用吗？我建议抓一下这个问题。</p><p>学马列要精，要管用的。长篇的东西是少数搞专业的人读的，群众怎么读？要求都读大本子，那是形式主义的，办不到。我的入门老师是《共产党宣言》和《共产主义ABC》。最近，有的外国人议论，马克思主义是打不倒的。打不倒，并不是因为大本子多，而是因为马克思主义的真理颠扑不破。实事求是是马克思主义的精髓。要提倡这个，不要提倡本本。我们改革开放的成功，不是靠本本，而是靠实践，靠实事求是。</p><p>农村搞家庭联产承包，这个发明权是农民的。农村改革中的好多东西，都是基层创造出来，我们把它拿来加工提高作为全国的指导。实践是检验真理的唯一标准。我读的书并不多，就是一条，相信毛主席讲的实事求是。过去我们打仗靠这个，现在搞建设、搞改革也靠这个。我们讲了一辈子马克思主义，其实马克思主义并不玄奥。马克思主义是很朴实的东西，很朴实的道理。</p><p>我坚信，世界上赞成马克思主义的人会多起来的，因为马克思主义是科学。它运用历史唯物主义揭示了人类社会发展的规律。封建社会代替奴隶社会，资本主义代替封建主义，社会主义经历一个长过程发展后必然代替资本主义。这是社会历史发展不可逆转的总趋势，但道路是曲折的。资本主义代替封建主义的几百年间，发生过多少次王朝复辟？所以，从一定意义上说，某种暂时复辟也是难以完全避免的规律性现象。一些国家出现严重曲折，社会主义好像被削弱了，但人民经受锻炼，从中吸收教训，将促使社会主义向着更加健康的方向发展。因此，不要惊慌失措，不要认为马克思主义就消失了，没用了，失败了。哪有这回事！</p><p>世界和平与发展这两大问题，至今一个也没有解决。社会主义中国应该用实践向世界表明，中国反对霸权主义、强权政治，永不称霸。中国是维护世界和平的坚定力量。我们要在建设有中国特色的社会主义道路上继续前进。资本主义发展几百年了，我们干社会主义才多长时间！何况我们自己还耽误了20年。如果从建国起，用100年时间把我国建设成中等水平的发达国家，那就很了不起！从现在起到下世纪中叶，将是很要紧的时期，我们要埋头苦干。我们肩膀上的担子重，责任大啊！</p>]]></content>
      
      
      <categories>
          
          <category> 生活 </category>
          
          <category> 政治&amp;哲学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 政治 </tag>
            
            <tag> 摘抄 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python is For Fun</title>
      <link href="/2019/11/30/Python%20is%20For%20Fun/"/>
      <url>/2019/11/30/Python%20is%20For%20Fun/</url>
      
        <content type="html"><![CDATA[<h1 id="Read-after-me-Python-is-for-Fun"><a href="#Read-after-me-Python-is-for-Fun" class="headerlink" title="Read after me, Python is for Fun!   :)"></a>Read after me, Python is for Fun!   :)</h1><p><strong>简单的人名对话</strong></p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs py">name = <span class="hljs-built_in">input</span>(<span class="hljs-string">&quot;输入姓名:&quot;</span>)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;%s 同学，学好Python，前途无量！&quot;</span>%name)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;%s 大侠，学好Python，大展拳脚！&quot;</span>%name[<span class="hljs-number">0</span>])<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;%s 哥哥，学好Python，人见人爱！&quot;</span>%name[<span class="hljs-number">1</span>:])<br></code></pre></td></tr></table></figure><p>输入长者后，依次回显示江大侠和民哥哥<br><img src="/2019/11/30/Python%20is%20For%20Fun/a.png"></p><p><strong>九九乘法表输出</strong></p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs py"><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">1</span>,<span class="hljs-number">10</span>):<br>    <span class="hljs-keyword">for</span> j <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">1</span>,i+<span class="hljs-number">1</span>):<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;&#123;&#125;*&#123;&#125;=&#123;:2&#125; &quot;</span>.<span class="hljs-built_in">format</span>(j,i,i*j), end=<span class="hljs-string">&#x27;&#x27;</span>)<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;&#x27;</span>)<br></code></pre></td></tr></table></figure><p><strong>绘制太阳花</strong></p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs py"><span class="hljs-keyword">from</span> turtle <span class="hljs-keyword">import</span> *<br>color(<span class="hljs-string">&#x27;red&#x27;</span>, <span class="hljs-string">&#x27;yellow&#x27;</span>)<br>begin_fill()<br><span class="hljs-keyword">while</span> <span class="hljs-literal">True</span>:<br>    forward(<span class="hljs-number">200</span>)<br>    left(<span class="hljs-number">170</span>)<br>    <span class="hljs-keyword">if</span> <span class="hljs-built_in">abs</span>(pos()) &lt; <span class="hljs-number">1</span>:<br>       <span class="hljs-keyword">break</span><br>end_fill()<br>done()<br></code></pre></td></tr></table></figure><p>结果为</p><p><img src="/2019/11/30/Python%20is%20For%20Fun/b.png"></p><p><strong>再来画个大蟒蛇吧:</strong></p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs py"><span class="hljs-comment">#e2.2DrawPython.py</span><br><span class="hljs-keyword">from</span> turtle <span class="hljs-keyword">import</span> *<br>setup(<span class="hljs-number">650</span>, <span class="hljs-number">350</span>, <span class="hljs-number">200</span>, <span class="hljs-number">200</span>)<br>penup()<br>fd(-<span class="hljs-number">250</span>)<br>pendown()<br>pensize(<span class="hljs-number">25</span>)<br>pencolor(<span class="hljs-string">&quot;purple&quot;</span>)<br>seth(-<span class="hljs-number">40</span>)<br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">4</span>):<br>    circle(<span class="hljs-number">40</span>, <span class="hljs-number">80</span>)<br>    circle(-<span class="hljs-number">40</span>, <span class="hljs-number">80</span>)<br>circle(<span class="hljs-number">40</span>, <span class="hljs-number">80</span>/<span class="hljs-number">2</span>)<br>fd(<span class="hljs-number">40</span>)<br>circle(<span class="hljs-number">16</span>, <span class="hljs-number">180</span>)<br>fd(<span class="hljs-number">40</span> * <span class="hljs-number">2</span>/<span class="hljs-number">3</span>)<br><br></code></pre></td></tr></table></figure><p>然后画出个大蟒蛇。。。。<br><img src="/2019/11/30/Python%20is%20For%20Fun/qq.png"></p><p>贴一段这样的代码：（表示华氏度和摄氏度的转换），很有参考意义</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs py"><span class="hljs-comment">#e1.1TempConvert.py</span><br>TempStr = <span class="hljs-built_in">input</span>(<span class="hljs-string">&quot;请输入带有符号的温度值: &quot;</span>)<br><span class="hljs-keyword">if</span> TempStr[-<span class="hljs-number">1</span>] <span class="hljs-keyword">in</span> [<span class="hljs-string">&#x27;F&#x27;</span>,<span class="hljs-string">&#x27;f&#x27;</span>]:<br>    C = (<span class="hljs-built_in">eval</span>(TempStr[<span class="hljs-number">0</span>:-<span class="hljs-number">1</span>]) - <span class="hljs-number">32</span>)/<span class="hljs-number">1.8</span><br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;转换后的温度是&#123;:.2f&#125;C&quot;</span>.<span class="hljs-built_in">format</span>(C))<br><span class="hljs-keyword">elif</span> TempStr[-<span class="hljs-number">1</span>] <span class="hljs-keyword">in</span> [<span class="hljs-string">&#x27;C&#x27;</span>,<span class="hljs-string">&#x27;c&#x27;</span>]:<br>    F = <span class="hljs-number">1.8</span>*<span class="hljs-built_in">eval</span>(TempStr[<span class="hljs-number">0</span>:-<span class="hljs-number">1</span>]) + <span class="hljs-number">32</span><br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;转换后的温度是&#123;:.2f&#125;F&quot;</span>.<span class="hljs-built_in">format</span>(F))<br><span class="hljs-keyword">else</span>:<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;输入格式错误&quot;</span>)<br></code></pre></td></tr></table></figure><p><strong>对于注释而言，</strong></p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs py"><span class="hljs-comment">#可以表示单行注释</span><br><span class="hljs-built_in">print</span>(<span class="hljs-built_in">pow</span>(<span class="hljs-number">2</span>,<span class="hljs-number">10</span>))<span class="hljs-comment">#也可以这样注释</span><br><span class="hljs-string">&#x27;&#x27;&#x27;</span><br><span class="hljs-string">fneifi</span><br><span class="hljs-string">feisf</span><br><span class="hljs-string">fneisn</span><br><span class="hljs-string">&#x27;&#x27;&#x27;</span>       这样中间就全是注释了<br></code></pre></td></tr></table></figure><p><strong>对于python的字符串而言</strong></p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs py"><span class="hljs-meta">&gt;&gt;&gt; </span>aaa=<span class="hljs-string">&quot;110C&quot;</span><br><span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-built_in">print</span>(aaa[-<span class="hljs-number">1</span>])<br>C<br><span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-built_in">print</span>(aaa[<span class="hljs-number">1</span>])<br><span class="hljs-number">1</span><br><span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-built_in">print</span>(aaa[<span class="hljs-number">0</span>:-<span class="hljs-number">1</span>])<br><span class="hljs-number">110</span><br><span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-built_in">print</span>(aaa[<span class="hljs-number">0</span>])<br><span class="hljs-number">1</span><br><span class="hljs-meta">&gt;&gt;&gt; </span>aaa=<span class="hljs-string">&quot;123456789C&quot;</span><br><span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-built_in">print</span>(aaa[<span class="hljs-number">0</span>])<br><span class="hljs-number">1</span><br><span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-built_in">print</span>(aaa[<span class="hljs-number">1</span>])<br><span class="hljs-number">2</span><br><span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-built_in">print</span>(aaa[<span class="hljs-number">5</span>])<br><span class="hljs-number">6</span><br><span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-built_in">print</span>(aaa[-<span class="hljs-number">1</span>])<br>C<br><span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-built_in">print</span>(aaa[<span class="hljs-number">9</span>])<br>C<br><span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-built_in">print</span>(aaa[<span class="hljs-number">0</span>:-<span class="hljs-number">1</span>])<br><span class="hljs-number">123456789</span><br><span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-built_in">print</span>(aaa[<span class="hljs-number">0</span>:<span class="hljs-number">5</span>])<br><span class="hljs-number">12345</span><br></code></pre></td></tr></table></figure><p>应该还是很容易看懂我是什么意思吧，[0：-1]表示从第一个字符到最后一个（不包括最后一个）</p><p><strong>对输入：</strong></p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs py">TempStr=<span class="hljs-built_in">input</span>(<span class="hljs-string">&quot;请输入带有符号的温度值：&quot;</span>)<br></code></pre></td></tr></table></figure><p>也是很有参考意义的</p><p><strong>对分支:</strong></p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs py"><span class="hljs-keyword">if</span> TempStr[-<span class="hljs-number">1</span>] <span class="hljs-keyword">in</span> [<span class="hljs-string">&#x27;F&#x27;</span>,<span class="hljs-string">&#x27;f&#x27;</span>]:<br><span class="hljs-keyword">elif</span> TempStr[-<span class="hljs-number">1</span>] <span class="hljs-keyword">in</span> [<span class="hljs-string">&#x27;C&#x27;</span>,<span class="hljs-string">&#x27;c&#x27;</span>]:<br></code></pre></td></tr></table></figure><p>查找最后一个字符</p><p><strong>另外，eval函数表示已python表达式的方式去解释并执行字符串</strong></p><p>最后，该程序还能转化为函数形式：</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs py"><span class="hljs-comment">#*******************************e1.3TempConvert.py***********************************************</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">tempConvert</span>(<span class="hljs-params">ValueStr</span>):<br>    <span class="hljs-keyword">if</span> ValueStr[-<span class="hljs-number">1</span>] <span class="hljs-keyword">in</span> [<span class="hljs-string">&#x27;F&#x27;</span>,<span class="hljs-string">&#x27;f&#x27;</span>]:<br>        C = (<span class="hljs-built_in">eval</span>(ValueStr[<span class="hljs-number">0</span>:-<span class="hljs-number">1</span>]) - <span class="hljs-number">32</span>)/<span class="hljs-number">1.8</span><br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;转换后的温度是&#123;:.2f&#125;C&quot;</span>.<span class="hljs-built_in">format</span>(C))<br>    <span class="hljs-keyword">elif</span> ValueStr[-<span class="hljs-number">1</span>] <span class="hljs-keyword">in</span> [<span class="hljs-string">&#x27;C&#x27;</span>,<span class="hljs-string">&#x27;c&#x27;</span>]:<br>        F = <span class="hljs-number">1.8</span>*<span class="hljs-built_in">eval</span>(ValueStr[<span class="hljs-number">0</span>:-<span class="hljs-number">1</span>]) + <span class="hljs-number">32</span><br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;转换后的温度是&#123;:.2f&#125;F&quot;</span>.<span class="hljs-built_in">format</span>(F))<br>    <span class="hljs-keyword">else</span>:<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;输入格式错误&quot;</span>)<br>TempStr = <span class="hljs-built_in">input</span>(<span class="hljs-string">&quot;请输入带有符号的温度值: &quot;</span>)<br>tempConvert(TempStr)<br></code></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 编程 </category>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> DL </tag>
            
            <tag> Python </tag>
            
            <tag> 编程 </tag>
            
            <tag> 练习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>中国是否愚弄了西方</title>
      <link href="/2019/11/29/%E4%B8%AD%E5%9B%BD%E6%98%AF%E5%90%A6%E6%84%9A%E5%BC%84%E4%BA%86%E8%A5%BF%E6%96%B9/"/>
      <url>/2019/11/29/%E4%B8%AD%E5%9B%BD%E6%98%AF%E5%90%A6%E6%84%9A%E5%BC%84%E4%BA%86%E8%A5%BF%E6%96%B9/</url>
      
        <content type="html"><![CDATA[<p>今天看见一个帖子，里面虽然说的是资本方面的问题，但是在相当程度上提出了舆论的作用，西方舆论的虚伪以及追求资本利益的本质。文字可能多一些，但是说的很透彻。</p><p>以下是原文：</p><p>一位教授语出惊人：中国真在愚弄欺骗全世界</p><p>摘要: 西方媒体的焦虑，正是中国年轻人的机会。中国能否坚持自己成功的道路，要看年青一代了 …</p><p>近日，BBC推出纪录片《中国是如何愚弄世界的》（How China Fooled the World），再次预测中国经济即将崩溃，引发读者热议。</p><p>观察者网就此专访先后在北京大学、复旦大学、美哥伦比亚大学、德克萨斯大学担任博导及高级研究员的陈平教授，就其数十年在海外生活的经验以及对中西之间的观察做出评论。陈平教授早年师从诺贝尔化学奖得主普里戈金。</p><p>观察者网：BBC近日推出了新拍摄的纪录片，翻译过来就是《中国如何愚弄世界》，里面主要是谈到自世界经济危机之后，中国经济这几年一直还保持旺盛增长，主要原因就是靠银行驱动的大批的贷款来通过基础建设类似的方式，从而还出现了很多的影子银行，导致经济蓬勃发展的假象，当时拍摄者主要考察了武汉，看到大批房产或者基建，最后得出结论：这不是一个健康的发展方式。同时他也采访到了美国前任财政部长等这些人，得到了佐证。</p><p>同时也有西方媒体反唇相讥，说西方媒体愚弄了世界，BBC讲的是假象，这个假象恰恰迎合了中国希望西方看到的中国，希望不要把中国当做一个真正的对手。</p><p>看到这两家之间的对峙，我想提的问题就是：第一，您怎样评价BBC这个纪录片，从它的技术层面还有它的问题层面；第二就是西方的言论焦灼意味着什么，您对此有何分析？</p><p>陈平：这个问题其实有好几个层面，第一个是最近金融危机以后，西方的舆论确实有一个很大的反思，这个反思是什么呢，认为西方上当了，怎么上当呢，在过去的30年里，西方以为可以把中国纳入西方主导的全球体系，为此轻视了中国的竞争潜力。</p><p>西方在向中国转移了大量的技术和实体经济以后发现，中国经济的实体能力实际上超过了西方，成为西方的最大竞争者和挑战者，但是西方目前想要扭转这个格局已经来不及了。西方的精英确实开始后悔他们的中国战略，但是他们没有想清楚，其原因不是中国成功地愚弄西方，而是西方素来自大，低估中国。</p><p>在中国开始对西方开放的很长一段时间，实际上西方主流和中国的多数理论家都认为，中国只要开放，结果就会和苏联东欧一样，全盘瓦解；至少是中国全盘接受西方的价值观念，接受西方的体制，变成拉丁美洲一样的依赖经济。你要明白，包括中国和西方的主流学者都是这样认为的。唯一的例外是邓小平。</p><p>我记得特别清楚，中国加入WTO之前，我问过中国的主流经济学家如何预测加入WTO 的前景。中国的主流经济学家无论左中右都说咱们对西方的让步太大了，中国当时是开放一个领域，就沦陷一个领域，例如家电和百货。</p><p>所以当时西方和中国的主流经济学家都预言，三个领域中国会全盘皆输，第一是汽车，第二是金融，第三是农业，这三个都输了中国怎么可能立国呢？但结果出乎所有人意料，不但中国没有瓦解，反而中国的出口大大增加，汽车产销量超过美国，金融比美欧日还稳定，农业比日本还能独立自主。</p><p>所以西方媒体才会有一个错误的反思，认为中国的领导人比诸葛亮还能神算，先是编造了一个中国不会赢的理论，然后让西方放心大胆的占领中国市场，结果呢是把自己掏空了。他们多数人不承认自己的西方中心论有问题。</p><p>我的观察很简单。第一，中国领导人和知识分子从上到下，在30年前甚至现在，都没有几个人敢想象中国有可能超越西方主导世界秩序。这样的雄心彼得大帝有，毛泽东有，邓小平可能有，我相信习主席私下会有但是不公开说，但是多数中国精英是没有的。所以认为中国有这么一个高瞻远瞩的战略集团去愚弄世界，这是过分高估了中国领导层的眼界，实际上是不存在的，这是第一条。</p><p>第二条，西方舆论有没有愚弄世界，我认为西方媒体就是用不同的方法愚弄世界，但是西方的利益是分裂的。在苏联瓦解以后，西方的主流媒体非常希望唱衰中国，然后证明历史终结论，西方价值观普遍胜利了，资本主义不但要征服中国，也要征服拉丁美洲、阿拉伯和全世界，所以西方主流媒体唱衰中国，是他们几十年以来不变的方针。但是我注意到一件非常奇怪的事情。</p><p>我在西方呆了30多年，发现金融媒体和主流媒体的调子是不一样的。为什么？因为金融界明白中国是最大的发展中市场。金融是要赚钱的，如果英美的金融媒体把中国唱衰，把在中国投资的机会让给日韩，金融（媒体）就会丢掉市场。所以，为了金融资本的利益，金融媒体也必须为外资进入中国引路。所以我就发现，西方金融媒体也是双轨制。</p><p>你看《华尔街日报》，《金融时报》，一定是装模作样地在头版头条唱衰中国，表示自己的政治立场“正确”，然后又在第二第三条详细报道中国的投资前景，使西方最有战略眼光的投资家，包括沃伦•巴菲特，乔治•索罗斯，还有其他的人，都大笔投资中国的战略产业，包括国有大企业，也包括新兴企业。所以，西方媒体，说一套，做一套。判断世界格局的变化，别只看媒体说什么，更要注意大资本干什么。资本家不做赔钱的买卖。中国只要坚定改革发展不动摇，成功之后，不怕西方资本不来入伙。</p><p>就此而言，中国领导和民众必须明白，西方媒体是为利益集团服务，不是客观中性甚至先进的。西方媒体愚弄听众，我认为有两个目的：第一是捍卫西方的主流价值，让各国心甘情愿听从西方的指挥棒。第二是西方资本的投机战略。你要明白国际金融市场是西方的跨国银行操纵的，我今天不举具体企业的名字，但我观察过中国在香港的红筹股市场，美国某个大投行先报道一个新闻，说中国经济前景非常悲观，举例的材料看起来都是有依据的，然后香港股市大跌，大跌以后西方投行进来抄底。</p><p>抄底以后投行分析师再发一条新闻，说中国的改革前景有望，然后港股应声暴涨，西方投行借机卖出大赚一笔。西方投行与西方媒体联手可以轻易影响香港股市的一涨一跌，西方投行在香港股市上一个月能赚到的钱，比在美国全年可能还要多。</p><p>操纵舆论和操纵股市，在西方是非法的，但在中国，主流媒体还纷纷邀请西方投行经济学家在电视上对中国经济政策评头评足，这在美国也是不允许的，因为投行分析师不是客观中性的。在这方面西方主流媒体的经验要比中国成熟的多，倒是中国的媒体监管部门应该向西方的同行学习学习，这是第二条。</p><p>第三条，为什么西方从主流经济学家到主流媒体都对中国经济成长的大势误判？道理很简单，因为经济发展有很大的不确定性。在不确定的情况下，你对中国前景做出预报有两种可能，一种就是对事实进行具体分析，双方力量消长，要知己知彼，不光要知道自己的长处，还要知道对方的短处，这很难。但还有另外一种判断方式，就是拍脑袋。多数人是凭自己过去的经验，过去的信仰直觉来判断，他们总是以为西方走过的道路是最好的，其他国家只要跟西方不一样肯定是输的。</p><p>然而中国领导人从建国开始就非常明白，中国如果不走和西方不同的道路是没有胜利的可能的。道理很简单，主要有两条：</p><p>第一点，中国人多资源少，西方人少但控制了世界上的大部分资源。中国即使想走西方的高消费的道路，就必须要控制世界上大部分的资源，你就得像德国日本一样发动侵略战争。中国现在是和平崛起，不想走这这条路。这是第一条。</p><p>第二点，中国从新中国建国时间起，西方就对中国进行技术封锁，也包括市场封锁，所以“自由市场”的神话对中国从来就不成立。</p><p>即使中国加入WTO已经十来年的今天，中国真正需要的高科技，西方仍然对中国是禁止出口的。在这种情况下，中国如果不依靠自己的力量投资在基础工业，要靠西方的办法，用股票市场融资来进行经济建设，你根本不可能有赶上西方国家的希望。</p><p>即使德国、日本战后的发展也是走着和英美不同的道路。在这种情况下，后来的创业者不可能有大的资本、大的信用在资本市场上融资的，只能依靠国家的政策引导，利用老百姓的储蓄，以银行资助为主，资本市场为辅，造成中国经济过去30年的高储蓄、高投资、高增长，这是中国对发展中国家创造的一条成功经验。中国即使在局部地区存在产能过剩，也可以靠打开国内外的新市场来化解，因为产能绝不是西方投机资本造成的资产泡沫，是有实体经济的基础的。</p><p>第四条，中国经济的改革还有很大空间。如果中国外贸想向全世界扩张，企业单靠银行贷款也有问题。因为中国的国有银行商业化以后也会注重短期利润，避免长远投资的风险。在这种情况下，如何政府引导，综合资本市场，民间储蓄和银行的力量来打造中国长期的发展基金，我认为复旦大学新政治经济学中心的史正富教授有很好的建议，写在他的新书《超常增长》里，你们可以读他的书，我就不用再讨论了。</p><p>最后，我们要警惕西方媒体对中国民意的副作用。虽然我认为西方对中国的判断是完全错误的，但如果中国的领导和老百姓信以为真，恰恰会有另一个危险，就是重复苏联瓦解的危险，我把它叫做自废武功。如果解放军仗打赢了，但是没有按照西方军官学校里的教育来打，国军抱怨说解放军的打法不正规，要求改变解放军的战略战术，按照西方的游戏规则来打。</p><p>你说这样的军队还有胜利的可能吗？中国的改革开放在经济上赢了，但是舆论上没有赢，还是西方世界观主导中国媒体和学术界。所以我们当前的重大任务应该是自主总结中国发展的经验，而不是用西方过时的经验来否定中国已经成功的经验，当然我们还要创造新的经验来应付中国未来的挑战。</p><p>简而言之，我回答你的第一个问题：中国是不是愚弄世界舆论，我认为中国并没有愚弄世界，反而是西方舆论企图愚弄世界，结果却是愚弄了自己，这是他们西方中心论者的悲哀。但是他们目前也不会改。西方媒体要改只有一个可能：就是世界格局的逆转连普通人也看到了，例如罗马帝国的衰落，西方学者的反省是在几百年之后！</p><p>你的第二个问题比较好答：西方媒体的焦虑，原因在西方媒体的多数人已经感到西方走下坡路，中国走上坡路，所以焦虑。但是他们还抱有希望：希望西方再出奇迹，起死回生，希望中国自废武功，误打误撞。所以，西方媒体的焦虑，正是中国年轻人的机会。中国能否坚持自己成功的道路，要看年青一代了。</p>]]></content>
      
      
      <categories>
          
          <category> 生活 </category>
          
          <category> 政治&amp;哲学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 摘抄 </tag>
            
            <tag> 思考 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>整合一下深度学习caffe基本环境的配置</title>
      <link href="/2019/11/29/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E4%B9%8BCaffe%E5%85%A5%E9%97%A8%E2%80%94%E2%80%94Caffe%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/"/>
      <url>/2019/11/29/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E4%B9%8BCaffe%E5%85%A5%E9%97%A8%E2%80%94%E2%80%94Caffe%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/</url>
      
        <content type="html"><![CDATA[<p><strong>本帖为一个回忆贴，最初写于2016年11月，大二上学期</strong><br>2016年11月，经历了数模校赛，培训，国赛等一系列折磨后，最终结果是拿到了个不好不坏的成绩：国二。虽然还是有些不甘心，但仔细想觉得数模也就那么回事，随缘就好，便申请负责了一个国创项目，间接进入导师实验室开始做科研训练。（这里还是要感谢电院较好的学术氛围和师资）</p><p>当时因为在院里实验班，自己成绩和竞赛也还不错，就找到了学校里一个挺不错的图像组的大佬当导师。那时候感觉DL没有现在那么火，自己也是第一次接触它当然，那时候第一次看这相关paper还是蛮难的，第一次接触“深度学习”这个词，但又被它各种玄幻但又挺符合常理的操作所折服。现在回忆起来，对本科生来说，多自学，早日将数学和英语水平提高到一定层次进组做科研比一味做一些所谓加分的竞赛对个人实力提升要有用得多。</p><p>说回来，当时国创项目还是偏工程一些，主要关于衣物的目标检测与识别的内容。由于前期没有任何学长的帮助，一开始在配环境上就花了很长时间。那时候做目标检测还是Caffe的天下。（配过的同学应该知道这玩意有多恶心）不过后来问问基本都是这样过来的，格十几次系统不算大事。本blog主要记录的是配环境的总结。应该算是最后一种非常完善普适的方法了。（后期进实验室才发现，实验室框环境都配好的，从老的faster-RCNN到SSD、resnet等等都有学长给弄好的，需要做的只是安心看paper，带着数据去跑即可）</p><p>本来也参考了很多CSDN前辈的教程，也按照《深度学习——２１天实战caffe》这本书来配过，但是都不成功。Caffe不像现在TensorFlow，Pytorch这种兼容性那么强，它于各种电脑的配置、环境都极大相关，且修复较难，牵一发而动全身。加上后来配GPU版的时，才发现只能先装Cuda等驱动才能在在其基础上装Caffe-gpu，又得推翻重来。（可能也是因为自己菜，当时大二上也没怎么有很多Linux的基础）故仅凭一篇教程来配置caffe是欠妥当的。建议后面的朋友主要看看每篇教程有什么不同，配的时候多带着些思考，哪些依赖包是教程没有提及但自己电脑又确实没有的。<br>　　<br>Caffe依赖多且复杂，历来被人诟病，但是配置编译完成后caffe所带来的欣喜与便捷也足以回报先前的煞费苦心。相信自己的能力也会随配环境这个过程逐步提高，而慢慢入门。希望未来看到这篇博客的你不要灰心丧气、半途而废！</p><p>　　正文开始：<br>　　由于选择的是CPU训练，所以暂时没有配置Cuda和CuDNN两个环境。</p><p>　　计算机配置：<br>　　Ubuntu 16.04 LTS<br>　　i7-4720HQ<br>　　8G内存</p><h2 id="安装依赖库"><a href="#安装依赖库" class="headerlink" title="安装依赖库"></a>安装依赖库</h2><p>　　在终端输入</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs python">sudo apt-get install libprotobuf-dev   <br>sudo apt-get install libleveldb-dev   <br>sudo apt-get install libsnappy-dev   <br>sudo apt-get install libopencv-dev   <br>sudo apt-get install libhdf5-serial-dev   <br>sudo apt-get install protobuf-compiler  <br>sudo apt-get install --no-install-recommends libboost-<span class="hljs-built_in">all</span>-dev<br></code></pre></td></tr></table></figure><p>　　接下来安装BALS(基本线性代数子库)</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python">sudo apt-get install libatlas-base-dev<br></code></pre></td></tr></table></figure><p>　　使用默认Python来建立pycaffe接口，需要安装：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs python">sudo apt-get install python-dev  <br><span class="hljs-comment">##另一些兼容依赖库</span><br>sudo apt-get install libgflags-dev  <br>sudo apt-get install libgoogle-glog-dev   <br>sudo apt-get install liblmdb-dev <br></code></pre></td></tr></table></figure><h2 id="下载Caffe源码"><a href="#下载Caffe源码" class="headerlink" title="下载Caffe源码"></a>下载Caffe源码</h2><p>安装git</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python">sudo apt-get install git<br></code></pre></td></tr></table></figure><p>下载caffe 源代码</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python">git clone https://github.com/BVLC/caffe.git<br></code></pre></td></tr></table></figure><p>在终端下载可能会有些慢，而且容易掉线，还不支持断点续传，所以我们也可以访问上面的网站，在网站下载ｚｉｐ格式的文件，再解压到&#x2F;home 就可以了。</p><p>这里多说一句，在终端下载源文件时系统会自动在&#x2F;home 下生成一个名叫caffe 的文件夹，当遇到了下载不成功的情况时，我们需要找到这个文件夹，把它删除，当然里面什么也没有。这样下次再用命令行下载才不会报错。</p><p>如果需要Caffe的Python接口，切换到caffe下的python目录下，输入以下命令下载python依赖库（先安装pip）：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python">cd /caffe/python<br>sudo apt-get install python-pip<br><span class="hljs-keyword">for</span> req <span class="hljs-keyword">in</span> (catrequirements.txt);dopipinstall(catrequirements.txt);dopipinstallreq; done<br></code></pre></td></tr></table></figure><h2 id="编译Caffe"><a href="#编译Caffe" class="headerlink" title="编译Caffe"></a>编译Caffe</h2><p>开始编译之前，建议输入以下命令：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python">make clean<br></code></pre></td></tr></table></figure><p>我们来到caffe 文件夹中，将Makefile.config.example 文件复制一份，改名为Makefile.config，然后我们打开这个复本文件，做一些必要的修改。</p><p>将原文本如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs python">＃CPU-only switch (uncomment to build without GPU support).<br><span class="hljs-comment"># cpu_only :=1</span><br></code></pre></td></tr></table></figure><p>改为如下形式：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs python">＃CPU-only switch (uncomment to build without GPU support).<br>cpu_only :=<span class="hljs-number">1</span><br></code></pre></td></tr></table></figure><p>将原文本如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs python">＃Whatever <span class="hljs-keyword">else</span> you find you need goes here.<br>INCLUDE_DIRS :=(PYTHONINCLUDE)/usr/local/includeLIBRARYDIRS:=(PYTHONINCLUDE)/usr/local/includeLIBRARYDIRS:=(PYTHON_LIB) /usr/local/lib /usr/lib<br></code></pre></td></tr></table></figure><p>改为如下形式：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs python">＃Whatever <span class="hljs-keyword">else</span> you find you need goes here.<br>INCLUDE_DIRS :=(PYTHONINCLUDE)/usr/local/include　/usr/include/hdf5/serialLIBRARYDIRS:=(PYTHONINCLUDE)/usr/local/include　/usr/include/hdf5/serialLIBRARYDIRS:=(PYTHON_LIB) /usr/local/lib /usr/lib /usr/lib/x86_64-linux-gnu/hdf5/serial<br></code></pre></td></tr></table></figure><p>将原文本如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs python">＃NOTE: this <span class="hljs-keyword">is</span> required only <span class="hljs-keyword">if</span> you will <span class="hljs-built_in">compile</span> the python interface.<br><span class="hljs-comment">#</span><br>We need to be able to find Python.h <span class="hljs-keyword">and</span> numpy/arrayobject.h.<br>PYTHON_INCLUDE := /usr/include/python2<span class="hljs-number">.7</span> \<br>/usr/lib/python2<span class="hljs-number">.7</span>/dist-packages/numpy/core/include<br></code></pre></td></tr></table></figure><p>改为如下形式：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs python">＃NOTE: this <span class="hljs-keyword">is</span> required only <span class="hljs-keyword">if</span> you will <span class="hljs-built_in">compile</span> the python interface.<br><span class="hljs-comment">#</span><br>We need to be able to find Python.h <span class="hljs-keyword">and</span> numpy/arrayobject.h.<br>PYTHON_INCLUDE := /usr/include/python2<span class="hljs-number">.7</span> \<br>/usr/local/lib/python2<span class="hljs-number">.7</span>/dist-packages/numpy/core/include<br></code></pre></td></tr></table></figure><p>接下来是编译。<br>这里需要注意四点：<br>１、这些命令要在caffe路径下执行；<br>２、若编译报错与numpy有关，往往需要安装numpy:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python">sudo apt-get install python-numpy<br></code></pre></td></tr></table></figure><p>若报错与matplotlib相关，则需要相应安装这个package;<br>３、若编译出现失败，需要执行make clean 命令，然后重新将四条编译命令再依次执行。<br>４、在每条编译命令后面加上 -j8 -j16 的命令对提高编译速度很有帮助，将会调用尽可能多的ＣＰＵ资源进行编译。<br>下面是编译命令：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs python">make pycaffe<br>make <span class="hljs-built_in">all</span><br>make test<br>make runtest<br></code></pre></td></tr></table></figure><h2 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h2><p>测试Caffe的Python接口，切换到caffe&#x2F;python文件目录下，记录下来当前路径，输入以下命令：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python">export PYTHONPATH=/path/to/caffe/python:$PYTHONPATH<br></code></pre></td></tr></table></figure><p>进入Python环境，输入</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> caffe<br></code></pre></td></tr></table></figure><p>若没有出现异常，就说明编译成功了。<br>如果没有报错，证明安装成功。</p><p>上面的方法，一旦关闭终端或者打开新终端则失效，如果放到配置文件中，可以永久有效果，命令操作如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment">#A.把环境变量路径放到 ~/.bashrc文件中  </span><br>sudo echo export PYTHONPATH=<span class="hljs-string">&quot;~/caffe/python&quot;</span> &gt;&gt; ~/.bashrc  <br><span class="hljs-comment">#B.使环境变量生效  </span><br>source ~/.bashrc <br></code></pre></td></tr></table></figure><p>非常感谢这位前辈的博文对配置环境的帮助</p><p><a href="http://blog.csdn.net/muzilinxi90/article/details/53673184">http://blog.csdn.net/muzilinxi90/article/details/53673184</a></p><p>github也有一篇文档很好，篇幅原因不再翻译，感兴趣的朋友可以参考一下。</p><p><a href="https://github.com/BVLC/caffe/wiki/Ubuntu-16.04-or-15.10-Installation-Guide">https://github.com/BVLC/caffe/wiki/Ubuntu-16.04-or-15.10-Installation-Guide</a></p><p>import caffe 出现问题也可以参考这个网站：</p><p><a href="http://www.linuxdiyf.com/linux/23093.html">http://www.linuxdiyf.com/linux/23093.html</a></p><p>caffe官网给出的教程，第一手的资料，建议阅读：</p><p><a href="http://caffe.berkeleyvision.org/installation.html">http://caffe.berkeleyvision.org/installation.html</a></p><p>基本上完成CPU only的caffe配置后，并且在不断摸索中，对linux系统和基本依赖包就已经很熟了。之后开始真正做项目需要用cuda，GPU的配置其实也很容易上手。</p><p><strong>另外我们发现，其实与其去看那么多的博客，不如自己去读英文的官方文件，或者github下下来后的readme文件，那才是最权威的第一手资料</strong></p><p>下为cuda官方文件的翻译</p><p>##NVIDIA CUDA Installation Guide for Linux<br>###Linux 系统下的NVIDIA CUDA 安装指南</p><p><a href="http://blog.csdn.net/hhy_csdn/article/details/64440406">http://blog.csdn.net/hhy_csdn/article/details/64440406</a></p><p>到了这里基本就结束了。</p>]]></content>
      
      
      <categories>
          
          <category> 科研 </category>
          
          <category> DL </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 心情 </tag>
            
            <tag> DL </tag>
            
            <tag> 配环境 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo部分功能摘抄</title>
      <link href="/2019/11/29/Hexo-%E9%83%A8%E5%88%86%E5%8A%9F%E8%83%BD%E6%91%98%E6%8A%84/"/>
      <url>/2019/11/29/Hexo-%E9%83%A8%E5%88%86%E5%8A%9F%E8%83%BD%E6%91%98%E6%8A%84/</url>
      
        <content type="html"><![CDATA[<h3 id="先放几个有用的博客："><a href="#先放几个有用的博客：" class="headerlink" title="先放几个有用的博客："></a>先放几个有用的博客：</h3><p><a href="https://zhuanlan.zhihu.com/p/26625249">https://zhuanlan.zhihu.com/p/26625249</a><br><a href="https://tengj.github.io/categories/hexo%E5%B9%B2%E8%B4%A7%E7%B3%BB%E5%88%97/">https://tengj.github.io/categories/hexo%E5%B9%B2%E8%B4%A7%E7%B3%BB%E5%88%97/</a><br><a href="https://tengj.github.io/2016/03/06/hexo4/">https://tengj.github.io/2016/03/06/hexo4/</a></p><h3 id="常用的Hexo-命令"><a href="#常用的Hexo-命令" class="headerlink" title="常用的Hexo 命令"></a>常用的Hexo 命令</h3><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs py">npm install hexo -g <span class="hljs-comment">#安装Hexo</span><br>npm update hexo -g <span class="hljs-comment">#升级</span><br>hexo init <span class="hljs-comment">#初始化博客</span><br><br>简写命令<br>hexo n <span class="hljs-string">&quot;我的博客&quot;</span> == hexo new <span class="hljs-string">&quot;我的博客&quot;</span> <span class="hljs-comment">#新建文章</span><br>hexo g == hexo generate <span class="hljs-comment">#生成</span><br>hexo s == hexo server <span class="hljs-comment">#启动服务预览</span><br>hexo d == hexo deploy <span class="hljs-comment">#部署</span><br><br>hexo server <span class="hljs-comment">#Hexo会监视文件变动并自动更新，无须重启服务器</span><br>hexo server -s <span class="hljs-comment">#静态模式</span><br>hexo server -p <span class="hljs-number">5000</span> <span class="hljs-comment">#更改端口</span><br>hexo server -i <span class="hljs-number">192.168</span><span class="hljs-number">.1</span><span class="hljs-number">.1</span> <span class="hljs-comment">#自定义 IP</span><br>hexo clean <span class="hljs-comment">#清除缓存，若是网页正常情况下可以忽略这条命令</span><br></code></pre></td></tr></table></figure><p>这三个命令依次为新建一篇博客文章、生成网页、在本地预览的操作。</p>]]></content>
      
      
      <categories>
          
          <category> 博客 </category>
          
          <category> Hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 摘抄 </tag>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World，Hexo</title>
      <link href="/2019/11/29/Hello%20World%EF%BC%8CHexo/"/>
      <url>/2019/11/29/Hello%20World%EF%BC%8CHexo/</url>
      
        <content type="html"><![CDATA[<h2 id="Hello，World"><a href="#Hello，World" class="headerlink" title="Hello，World~"></a>Hello，World~</h2><p>总感觉原来用CSDN写博客太多人看到了，现在开始使用Hexo+GitHub托管的方式写博客。会加很多碎碎念~~<br>新心情，新头像，Hello World！</p><p><img src="/2019/11/29/Hello%20World%EF%BC%8CHexo/a.jpg"></p><span id="more"></span>]]></content>
      
      
      <categories>
          
          <category> 生活 </category>
          
          <category> 心情&amp;日记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 心情 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
    
    
    <entry>
      <title>about</title>
      <link href="/about/index.html"/>
      <url>/about/index.html</url>
      
        <content type="html"><![CDATA[<p>在读博士生，业余爱好摄影、音乐。<br><img src="/about/index/sheyin1.jpg"><br><img src="/about/index/sheyin2.jpg"></p>]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>categories</title>
      <link href="/categories/index.html"/>
      <url>/categories/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>tags</title>
      <link href="/tags/index.html"/>
      <url>/tags/index.html</url>
      
        <content type="html"><![CDATA[<p>Python is For Fun： Python</p><p>深度学习之Caffe入门——Caffe环境配置： DL</p>]]></content>
      
    </entry>
    
    
  
</search>
